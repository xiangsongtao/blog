{"componentChunkName":"component---src-templates-blog-post-js","path":"/shi-jian-mo-mu-xing/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<h2 id=\"dom-事件流\" style=\"position:relative;\"><a href=\"#dom-%E4%BA%8B%E4%BB%B6%E6%B5%81\" aria-label=\"dom 事件流 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 事件流</h2>\n<p>分为三个阶段：事件捕获阶段、目标阶段、事件冒泡阶段。</p>\n<p>事件捕获老版本浏览器（IE&#x3C;=8）不支持，但是事件冒泡可以放心使用。</p>\n<p><img src=\"http://xiangsongtao.com/uploads/1477529052000.jpeg\" alt=\"12\"></p>\n<h2 id=\"事件处理程序\" style=\"position:relative;\"><a href=\"#%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\" aria-label=\"事件处理程序 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件处理程序</h2>\n<blockquote>\n<p>一共四类写法，基本都见过，看下写法就知道怎么回事儿了。</p>\n</blockquote>\n<h3 id=\"1-html-事件处理程序\" style=\"position:relative;\"><a href=\"#1-html-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\" aria-label=\"1 html 事件处理程序 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. HTML 事件处理程序</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;input type=&quot;button&quot; value=&quot;Click me&quot; onclick=&quot;ShowMessage()&quot;/&gt;</code></pre></div>\n<h3 id=\"2-dom0-级事件处理程序\" style=\"position:relative;\"><a href=\"#2-dom0-%E7%BA%A7%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\" aria-label=\"2 dom0 级事件处理程序 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. DOM0 级事件处理程序</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var btn = document.getElementById(&quot;myBtn&quot;);\nbtn.onclick = function(){\n\talert(&quot;click!&quot;);\n\talert(this.id);//this指向myBtn，可继续获取myBtn的其余属性\n}</code></pre></div>\n<h3 id=\"3-dom2-级事件处理程序\" style=\"position:relative;\"><a href=\"#3-dom2-%E7%BA%A7%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F\" aria-label=\"3 dom2 级事件处理程序 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. DOM2 级事件处理程序</h3>\n<p>定义事件及删除事件的两个方法：addEventListener、removeEventListener。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var btn = document.getElementById(&quot;myBtn&quot;);\nbtn.addEventListener(&quot;click&quot;,function(){\n\talert(this.id);\n},false);</code></pre></div>\n<p>第三个参数：true，表示在捕获阶段触发；false，表示程序在冒泡阶段触发；</p>\n<p>removeEventListener()的第二个参数必须传入与 addEventListener()中相同的处理函数(传入相同的函数引用，而不是形同函数！)，否则不会生效。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var handler = function handler(){\n\talert(this.id);\n}\nbtn.addEventListener(&quot;click&quot;, handler, false);\nbtn.removeEventListener(&quot;click&quot;, handler, false);</code></pre></div>\n<h3 id=\"4-ie-事件处理函数\" style=\"position:relative;\"><a href=\"#4-ie-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0\" aria-label=\"4 ie 事件处理函数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. IE 事件处理函数</h3>\n<blockquote>\n<p>IE 就是这么另类（IE8 及更早版本）</p>\n</blockquote>\n<p>定义事件及删除事件的两个方法：attachEvent、detachEvent。因为只支持冒泡，故第三个参数没有；且第一个参数需要带上<strong>“on”</strong>！</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var handler = function handler(){\n\talert(this.id);\n}\nbtn.attachEvent(&quot;onclick&quot;, handler);\nbtn.detachEvent(&quot;onclick&quot;, handler);</code></pre></div>\n<h2 id=\"事件对象\" style=\"position:relative;\"><a href=\"#%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1\" aria-label=\"事件对象 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件对象</h2>\n<p>事件触发会在 handler 中传入事件对象 event。</p>\n<h3 id=\"1-dom-中的事件对象\" style=\"position:relative;\"><a href=\"#1-dom-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1\" aria-label=\"1 dom 中的事件对象 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DOM 中的事件对象</h3>\n<p>event 的成员属性及说明如下，以下属性皆为只读：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性/方法</th>\n<th align=\"center\">说明</th>\n<th align=\"center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">bubble</td>\n<td align=\"center\">表示事件是否冒泡</td>\n<td align=\"center\">event.bubble -> true/false</td>\n</tr>\n<tr>\n<td align=\"center\">cancelable</td>\n<td align=\"center\">是否可以取消事件的默认行为</td>\n<td align=\"center\">event.cancelable -> true/false</td>\n</tr>\n<tr>\n<td align=\"center\">currentTarget</td>\n<td align=\"center\">事件函数正在处理事件的那个元素，比如委托 document 处理</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">defaultPrevented</td>\n<td align=\"center\">为 true 则表示已经调用了 preventDefault()</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">eventPhase</td>\n<td align=\"center\">事件处理阶段，1 捕获阶段，2 目标，3 冒泡阶段</td>\n<td align=\"center\">event.eventPhase === 1</td>\n</tr>\n<tr>\n<td align=\"center\">preventDefault()</td>\n<td align=\"center\">取消默认行为</td>\n<td align=\"center\">event. preventDefault();</td>\n</tr>\n<tr>\n<td align=\"center\">stopPropagation()</td>\n<td align=\"center\">取消进一步冒泡捕获行为</td>\n<td align=\"center\">event.stopPropagation();</td>\n</tr>\n<tr>\n<td align=\"center\">stopImmediatePropagation()</td>\n<td align=\"center\">取消进一步冒泡捕获行为,并阻止任何事件处理程序被调用</td>\n<td align=\"center\">event.stopImmediatePropagation();</td>\n</tr>\n<tr>\n<td align=\"center\">target</td>\n<td align=\"center\">设计目标</td>\n<td align=\"center\">event.target === getElementById(id)</td>\n</tr>\n<tr>\n<td align=\"center\">type</td>\n<td align=\"center\">触发事件的类型</td>\n<td align=\"center\">event.type === ‘click’</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-ie-中事件对象\" style=\"position:relative;\"><a href=\"#2-ie-%E4%B8%AD%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1\" aria-label=\"2 ie 中事件对象 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. IE 中事件对象</h3>\n<p>因为 IE 中没有捕获，故简单了些。<strong>注意对比两个表的区别！</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性/方法</th>\n<th align=\"center\">说明</th>\n<th align=\"center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">returnValue</td>\n<td align=\"center\">取消默认行为</td>\n<td align=\"center\">event. returnValue = false; //取消默认行为</td>\n</tr>\n<tr>\n<td align=\"center\">cancelBubble</td>\n<td align=\"center\">取消进一步冒泡捕获行为</td>\n<td align=\"center\">event.cancelBubble = true;//取消冒泡</td>\n</tr>\n<tr>\n<td align=\"center\">srcElement</td>\n<td align=\"center\">设计目标</td>\n<td align=\"center\">event.srcElement === getElementById(id)</td>\n</tr>\n<tr>\n<td align=\"center\">type</td>\n<td align=\"center\">触发事件的类型</td>\n<td align=\"center\">event.type === ‘click’</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-跨浏览器兼容方案\" style=\"position:relative;\"><a href=\"#3-%E8%B7%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%96%B9%E6%A1%88\" aria-label=\"3 跨浏览器兼容方案 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 跨浏览器兼容方案</h3>\n<p>为了保证大多数浏览器的兼容，故只需要考虑冒泡阶段的实现。上面说的很清楚了，这里直接上代码。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var EventUtil = {\n    // 绑定事件\n    addHandler: function addHandler(element, type, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(type, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(&#39;on&#39; + type, handler);\n        } else {\n            element[&#39;on&#39; + type] = handler;\n        }\n    },\n    // 解绑事件\n    removeHandler: function removeHandler(element, type, handler) {\n        if (element.removeEventListener) {\n            element.removeEventListener(type, handler, false);\n        } else if (element.detachEvent) {\n            element.detachEvent(&#39;on&#39; + type, handler);\n        } else {\n            element[&#39;on&#39; + type] = null;\n        }\n    },\n    // 获取事件对象event\n    getEvent: function getEvent(event) {\n        return event || window.event;\n    },\n    // 获取触发目标\n    getTarget: function getTarget(event) {\n        return event.target || event.srcElement;\n    },\n    // 阻止默认行为\n    preventDefault: function preventDefault(event) {\n        if (event.preventDefault) {\n            event.preventDefault()\n        } else {\n            event.returnValue = false;\n        }\n    },\n    // 取消冒泡\n    stopPropagation: function stopPropagation(event) {\n        if (event.stopPropagation) {\n            event.stopPropagation()\n        } else {\n            event.cancelBubble = true;\n        }\n    }\n}</code></pre></div>\n<h2 id=\"事件的代理委托的原理以及优缺点\" style=\"position:relative;\"><a href=\"#%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BB%A3%E7%90%86%E5%A7%94%E6%89%98%E7%9A%84%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E4%BC%98%E7%BC%BA%E7%82%B9\" aria-label=\"事件的代理委托的原理以及优缺点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件的代理/委托的原理以及优缺点</h2>\n<p>这是靠事件的冒泡机制来实现的，优点是</p>\n<blockquote>\n<p>1、可以大量节省内存占用，减少事件注册，比如在 table 上代理所有 td 的 click 事件就非常棒\n2、可以实现当新增子对象时无需再次对其绑定事件，对于动态内容部分尤为合适</p>\n</blockquote>\n<h2 id=\"手写原生-js【实现事件代理】，并要求兼容浏览器\" style=\"position:relative;\"><a href=\"#%E6%89%8B%E5%86%99%E5%8E%9F%E7%94%9F-js%E3%80%90%E5%AE%9E%E7%8E%B0%E4%BA%8B%E4%BB%B6%E4%BB%A3%E7%90%86%E3%80%91%EF%BC%8C%E5%B9%B6%E8%A6%81%E6%B1%82%E5%85%BC%E5%AE%B9%E6%B5%8F%E8%A7%88%E5%99%A8\" aria-label=\"手写原生 js【实现事件代理】，并要求兼容浏览器 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>手写原生 js【实现事件代理】，并要求兼容浏览器</h2>\n<p>考核对事件对象 event 的了解程度，以及在 IE 下对应的属性名。其实此时如果你说就是用<code class=\"language-text\">target/currentTarget</code>，以及 IE 下的<code class=\"language-text\">srcElement/this</code>，基本就可以略过了</p>\n<p>绑到按钮上：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var btn = document.getElementById(&quot;myBtn&quot;);\nbtn.addEventListener(&quot;click&quot;,function(){\n\tconsole.log(event.currentTarget === this);//true\n\tconsole.log(event.target === this);//true\n},false);</code></pre></div>\n<p>绑到 document 上：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var btn = document.getElementById(&quot;myBtn&quot;);\ndocument.body.onclick = function(){\n\tconsole.log(event.currentTarget === this );//true\n\tconsole.log(document.body === this );//true\n\tconsole.log(event.target === btn);//true\n}</code></pre></div>\n<h2 id=\"实现事件模型\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E7%8E%B0%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9E%8B\" aria-label=\"实现事件模型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现事件模型</h2>\n<p>一个 bind 一个 trigger，分别实现绑定事件和触发事件，核心需求就是可以对某一个事件名称绑定多个事件响应函数，然后触发这个事件名称时，依次按绑定顺序触发相应的响应函数。</p>\n<p>大致实现思路就是创建一个类或是匿名函数，在 bind 和 trigger 函数外层作用域创建一个字典对象，用于存储注册的事件及响应函数列表，bind 时，如果字典没有则创建一个，key 是事件名称，value 是数组，里面放着当前注册的响应函数，如果字段中有，那么就直接 push 到数组即可。trigger 时调出来依次触发事件响应函数即可。</p>\n<h2 id=\"事件如何派发也就是事件广播（dispatchevent）\" style=\"position:relative;\"><a href=\"#%E4%BA%8B%E4%BB%B6%E5%A6%82%E4%BD%95%E6%B4%BE%E5%8F%91%E4%B9%9F%E5%B0%B1%E6%98%AF%E4%BA%8B%E4%BB%B6%E5%B9%BF%E6%92%AD%EF%BC%88dispatchevent%EF%BC%89\" aria-label=\"事件如何派发也就是事件广播（dispatchevent） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件如何派发也就是事件广播（dispatchEvent）</h2>\n<p>这个是自定义事件及事件触发的应用（createEvent/dispatchEvent, createEventObject/fireEvent）</p>\n<p>一般我们在元素上绑定事件后，是靠用户在这些元素上的鼠标行为来捕获或者触发事件的，或者自带的浏览器行为事件，比如 click，mouseover，load 等等，有些时候我们需要自定义事件或者在特定的情况下需要触发这些事件。这个时候我们可以使用 IE 下 fireEvent 方法，高级浏览器（chrome,firefox 等）有 dispatchEvent 方法。</p>\n<h2 id=\"小结\" style=\"position:relative;\"><a href=\"#%E5%B0%8F%E7%BB%93\" aria-label=\"小结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>小结</h2>\n<ol>\n<li>有必要限制一个页面中事件处理程序的数量，因为太多会占用大量内存，导致卡顿</li>\n<li>建立在事件冒泡机制上的事件委托技术，可以有效减少事件的处理程序的数量</li>\n<li>建议再浏览器写在页面之前移除页面的所有事件处理程序</li>\n</ol>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"http://www.w3cmark.com/2016/439.html\" target=\"_target\" rel=\"nofollow\">事件模型及事件代理/委托</a></li>\n</ul>","timeToRead":8,"wordCount":{"paragraphs":42,"sentences":42,"words":183},"fields":{"slug":"/shi-jian-mo-mu-xing/","relativePath":"2016/2016-10-23---shi-jian-mo-mu-xing/index.md"},"excerpt":"DOM 事件流 分为三个阶段：事件捕获阶段、目标阶段、事件冒泡阶段。 事件捕获老版本浏览器（IE<=8）不支持，但是事件冒泡可以放心使用。 12 事件处理程序 一共四类写法，基本都见过，看下写法就知道怎么回事儿了。…","frontmatter":{"title":"事件模型","date":"23 Oct 2016","tags":["DOM"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<h2 id=\"什么是-arguments\" style=\"position:relative;\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-arguments\" aria-label=\"什么是 arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是 arguments</h2>\n<p>arguments 是一个类数组的对象，代表传给一个 function 的参数列表。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function printArgs() {\n    console.log(arguments);\n}\n\nprintArgs(&quot;A&quot;, &quot;a&quot;, 0, { foo: &quot;Hello, arguments&quot; })；\n执行结果是：\n[&quot;A&quot;, &quot;a&quot;, 0, Object]</code></pre></div>\n<h2 id=\"arguments-操作\" style=\"position:relative;\"><a href=\"#arguments-%E6%93%8D%E4%BD%9C\" aria-label=\"arguments 操作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>arguments 操作</h2>\n<h3 id=\"arguments-length\" style=\"position:relative;\"><a href=\"#arguments-length\" aria-label=\"arguments length permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>arguments length</h3>\n<p>arguments 是个类数组对象，其包含一个 length 属性，可以用 arguments.length 来获得传入函数的参数个数。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function func() {\n    console.log(&quot;The number of parameters is &quot; + arguments.length);\n}</code></pre></div>\n<h3 id=\"arguments-转数组\" style=\"position:relative;\"><a href=\"#arguments-%E8%BD%AC%E6%95%B0%E7%BB%84\" aria-label=\"arguments 转数组 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>arguments 转数组</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Array.prototype.slice.call(arguments);\n[].slice.call(arguments);</code></pre></div>\n<h3 id=\"arguments-传递出去\" style=\"position:relative;\"><a href=\"#arguments-%E4%BC%A0%E9%80%92%E5%87%BA%E5%8E%BB\" aria-label=\"arguments 传递出去 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>arguments 传递出去</h3>\n<p>将函数的 arguments 对象泄露出去了，最终的结果就是 V8 引擎将会跳过优化，导致相当大的性能损失。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// Leaking arguments example1:\nfunction getArgs() {\n    return arguments;\n}\n// good arguments example1:\nfunction getArgs() {\n    const args = [].slice.call(arguments);//slice返回新数组\n    return args;\n}</code></pre></div>\n<h3 id=\"修改-arguments-值\" style=\"position:relative;\"><a href=\"#%E4%BF%AE%E6%94%B9-arguments-%E5%80%BC\" aria-label=\"修改 arguments 值 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>修改 arguments 值</h3>\n<p>在严格模式与非严格模式下，修改函数参数值表现的结果不一样。在严格模式下，函数中的参数与 arguments 对象没有联系，修改一个值不会改变另一个值。而在非严格模式下，两个会同步影响。</p>\n<h3 id=\"将参数从一个函数传递到另一个函数\" style=\"position:relative;\"><a href=\"#%E5%B0%86%E5%8F%82%E6%95%B0%E4%BB%8E%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BC%A0%E9%80%92%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0\" aria-label=\"将参数从一个函数传递到另一个函数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将参数从一个函数传递到另一个函数</h3>\n<p>下面是将参数从一个函数传递到另一个函数的推荐做法。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function foo() {\n    bar.apply(this, arguments);\n}\nfunction bar(a, b, c) {\n    // logic\n}</code></pre></div>\n<h3 id=\"arguments-与重载\" style=\"position:relative;\"><a href=\"#arguments-%E4%B8%8E%E9%87%8D%E8%BD%BD\" aria-label=\"arguments 与重载 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>arguments 与重载</h3>\n<p>利用 arguments 模拟重载。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function add(num1, num2, num3) {\n    if (arguments.length === 2) {\n        console.log(&quot;Result is &quot; + (num1 + num2));\n    }\n    else if (arguments.length === 3) {\n        console.log(&quot;Result is &quot; + (num1 + num2 + num3));\n    }\n}</code></pre></div>\n<h2 id=\"es6-中的-arguments\" style=\"position:relative;\"><a href=\"#es6-%E4%B8%AD%E7%9A%84-arguments\" aria-label=\"es6 中的 arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 中的 arguments</h2>\n<h3 id=\"扩展操作符\" style=\"position:relative;\"><a href=\"#%E6%89%A9%E5%B1%95%E6%93%8D%E4%BD%9C%E7%AC%A6\" aria-label=\"扩展操作符 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>扩展操作符</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function func() {\n    console.log(...arguments);\n}\n\nfunc(1, 2, 3);\n执行结果是：\n1 2 3</code></pre></div>\n<h3 id=\"rest-参数\" style=\"position:relative;\"><a href=\"#rest-%E5%8F%82%E6%95%B0\" aria-label=\"rest 参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rest 参数</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function func(firstArg, ...restArgs) {\n    console.log(Array.isArray(restArgs));\n    console.log(firstArg, restArgs);\n}\n\nfunc(1, 2, 3);\n执行结果是：\ntrue\n1 [2, 3]</code></pre></div>\n<p>从上面的结果可以看出，Rest 参数表示除了明确指定剩下的参数集合，类型是 Array。</p>\n<h3 id=\"默认参数\" style=\"position:relative;\"><a href=\"#%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0\" aria-label=\"默认参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>默认参数</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function func(firstArg = 0, secondArg = 1) {\n    console.log(arguments[0], arguments[1]);\n    console.log(firstArg, secondArg);\n}\n\nfunc(99);\n执行结果是：\n99 undefined\n99 1</code></pre></div>\n<p>可见，默认参数对 arguments 没有影响，arguments 还是仅仅表示调用函数时所传入的所有参数。</p>\n<h3 id=\"arguments-转数组-1\" style=\"position:relative;\"><a href=\"#arguments-%E8%BD%AC%E6%95%B0%E7%BB%84-1\" aria-label=\"arguments 转数组 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>arguments 转数组</h3>\n<p>Array.from() 是个非常推荐的方法，其可以将所有类数组对象转换成数组。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000007091243\" target=\"_target\" rel=\"nofollow\">JavaScript arguments 对象全面介绍</a></li>\n</ul>","timeToRead":3,"wordCount":{"paragraphs":24,"sentences":24,"words":76},"fields":{"slug":"/JavaScriptarguments-dui-xiang-quan/","relativePath":"2016/2016-10-22---JavaScriptarguments-dui-xiang-quan/index.md"},"excerpt":"什么是 arguments arguments 是一个类数组的对象，代表传给一个 function 的参数列表。 arguments 操作 arguments length arguments…","frontmatter":{"title":"JavaScript arguments 对象全面介绍","date":"22 Oct 2016","tags":["JavaScript"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<h2 id=\"安装\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85\" aria-label=\"安装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装</h2>\n<p><code class=\"language-text\">npm install -g yarn</code></p>\n<h2 id=\"常用命令\" style=\"position:relative;\"><a href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\" aria-label=\"常用命令 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常用命令</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">npm 命令</th>\n<th align=\"center\">yarn 命令</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm install</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn</code></td>\n<td align=\"center\">install 安装是默认行为</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm install taco --save</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn add taco</code></td>\n<td align=\"center\">taco 包立即被保存到 package.json 中</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm uninstall taco --save</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn remove taco</code></td>\n<td align=\"center\">在 yarn 中，在 package.json 中添加（add）和移除（remove）等行为是默认的</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm install taco --save-dev</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn add taco --dev</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm update --save</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn upgrade</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm install taco --global</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn global add taco</code></td>\n<td align=\"center\">请谨慎使用 global 标记</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm init</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn init</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm link</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn link</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm outdated</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn outdated</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm publish</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn publish</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm run</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn run</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm cache clean</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn cache clean</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm login</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn login</code></td>\n<td align=\"center\">运行命令</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">npm test</code></td>\n<td align=\"center\"><code class=\"language-text\">yarn test</code></td>\n<td align=\"center\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"yarn-独有命令\" style=\"position:relative;\"><a href=\"#yarn-%E7%8B%AC%E6%9C%89%E5%91%BD%E4%BB%A4\" aria-label=\"yarn 独有命令 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Yarn 独有命令</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">yarn 命令</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code class=\"language-text\">yarn licenses ls</code></td>\n<td align=\"center\">允许你检查依赖的许可信息</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">yarn licenses generate</code></td>\n<td align=\"center\">自动创建依赖免责声明 license</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">yarn why taco</code></td>\n<td align=\"center\">检查为什么会安装 taco，详细列出依赖它的其他包</td>\n</tr>\n</tbody>\n</table>","timeToRead":2,"wordCount":{"paragraphs":4,"sentences":4,"words":4},"fields":{"slug":"/Yarn-ming-ling/","relativePath":"2016/2016-12-03---Yarn-ming-ling/index.md"},"excerpt":"安装  常用命令 npm 命令 yarn 命令 说明   install 安装是默认行为   taco 包立即被保存到 package.json 中   在 yarn 中，在 package.json 中添加（add…","frontmatter":{"title":"Yarn命令","date":"03 Dec 2016","tags":["Yarn"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/shi-jian-mo-mu-xing/","prev":"/Yarn-ming-ling/","next":"/JavaScriptarguments-dui-xiang-quan/"}},"staticQueryHashes":["3240721340","63159454"]}