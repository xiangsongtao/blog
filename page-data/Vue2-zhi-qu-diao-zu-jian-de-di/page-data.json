{"componentChunkName":"component---src-templates-blog-post-js","path":"/Vue2-zhi-qu-diao-zu-jian-de-di/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/me.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangsongtao","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangsongtao.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/me.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangsongtao","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangsongtao.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<p>这个是在组件开发中遇到的问题，当时我在编写 button 的组件，模板是这样的：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>disable-hover button ion-button<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[modeClass,typeClass,shapeClass,sizeClass,colorClass,roleClass,strongClass]<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-effect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>使用是这样子的：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;ion-button @click.native=&quot;primary()&quot; color=&quot;primary&quot;&gt;primary&lt;/ion-button&gt;</code></pre></div>\n<p>根据 Vue2.0 官方文档关于父子组件通讯的原则，父组件通过 prop 传递数据给子组件，子组件触发事件给父组件。但父组件想在子组件上监听自己的 click 的话，需要加上<code class=\"language-text\">native</code>修饰符，故写法就像上面这样。</p>\n<p>好吧，处女座的毛病又来了。像 button 这样常用的组件如果加上 native 的话是感觉很突兀的。虽然组件设计有自身的考虑，因此我想将 click 的 native 去掉，思路如下：</p>\n<ol>\n<li>子组件监听父组件给的 click 事件，</li>\n<li>子组件内部处理 click 事件然后向外发送 click 事件：<code class=\"language-text\">$emit(&quot;click&quot;.fn)</code></li>\n</ol>\n<p>改造后的代码如下(亲测可用)：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>disable-hover button ion-button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_click<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[modeClass,typeClass,shapeClass,sizeClass,colorClass,roleClass,strongClass]<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-effect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/babel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">_click</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>父组件中这样使用：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;ion-button @click=&quot;primary()&quot; color=&quot;primary&quot;&gt;primary&lt;/ion-button&gt;</code></pre></div>\n<p>也许读者能看出来，我正在参照 IONIC2.X 的组件 API 写 Vue2.0 的功能组件，目前只完成了：ActionSheet、Button、Icon、Alert、Toast 这几个，一边看 IONIC 源码，一边将思路总结写成 Vue 代码，也就是花点时间。积累自己的组件库希望以后能开发快点。</p>\n<p>现在项目地址在<a href=\"https://github.com/xiangsongtao/VueMobile\" target=\"_target\" rel=\"nofollow\">这里</a>，前期以实现功能为主，不建议用在生产环境，读读代码实现思路就好，中文备注都做好了。</p>\n<p>(完)</p>","timeToRead":2,"wordCount":{"paragraphs":11,"sentences":11,"words":73},"fields":{"slug":"/Vue2-zhi-qu-diao-zu-jian-de-di/","relativePath":"2016/2016-12-25---Vue2-zhi-qu-diao-zu-jian-de-di/index.md"},"excerpt":"这个是在组件开发中遇到的问题，当时我在编写 button 的组件，模板是这样的： 使用是这样子的： 根据 Vue2.0 官方文档关于父子组件通讯的原则，父组件通过 prop…","frontmatter":{"title":"Vue2之去掉组件的click事件的native修饰","date":"25 Dec 2016","tags":["Vue"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<p>这个不是业务的要求，但是看到每次进入页面就重新渲染 DOM 然后再获取数据更新 DOM，觉得作为一个前端工程师有必要优化下的加载逻辑，正好 vue 提供了<code class=\"language-text\">keep-alive</code>的功能，所以就试用了下。当然，干任何事儿都不会一帆风顺的，在路上的磕磕碰碰在所难免，故在此记录下遇到的问题，希望看到这篇文章的人能有所帮助。ps：这个也没多难。</p>\n<p>HTML 部分：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>keep-alive</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-view</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>keep-alive</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>JavaScript 部分：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token function-variable function\">created</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">mounted</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">activated</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">deactivated</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<h2 id=\"1-什么阶段获取数据\" style=\"position:relative;\"><a href=\"#1-%E4%BB%80%E4%B9%88%E9%98%B6%E6%AE%B5%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE\" aria-label=\"1 什么阶段获取数据 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 什么阶段获取数据</h2>\n<p>页面生命周期钩子如上面的代码所示，这四个是最常用到的部分。这部分需要注意下，当引入<code class=\"language-text\">keep-alive</code>的时候，页面第一次进入，钩子的触发顺序 created-> mounted-> activated，退出时触发 deactivated。当再次进入（前进或者后退）时，只触发 activated。</p>\n<p>我们知道<code class=\"language-text\">keep-alive</code>之后页面模板第一次初始化解析变成 HTML 片段后，再次进入就不在重新解析而是读取内存中的数据，即，只有当数据变化时，才使用 VirtualDOM 进行 diff 更新。故，页面进入的数据获取应该在 activated 中也放一份。数据下载完毕手动操作 DOM 的部分也应该在 activated 中执行才会生效。</p>\n<p>所以，应该 activated 中留一份数据获取的代码，或者不要 created 部分，直接将 created 中的代码转移到 activated 中。</p>\n<h2 id=\"2-code-classlanguage-textroutecode中的数据读不到\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-textroutecode%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%BB%E4%B8%8D%E5%88%B0\" aria-label=\"2 code classlanguage textroutecode中的数据读不到 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">$route</code>中的数据读不到</h2>\n<p>以前的写法是在 data 中将需要的<code class=\"language-text\">$route</code>数据进行赋值，便于其余方法使用，但是使用了<code class=\"language-text\">keep-alive</code>后数据需要进入页面在 activated 中再次获取，才能达到更新的目的。定义一个 initData 方法，然后在 activated 中启动。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">initData</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        _this<span class=\"token punctuation\">.</span>fromLocation <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>fromLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _this<span class=\"token punctuation\">.</span>toLocation <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>toLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _this<span class=\"token punctuation\">.</span>activeIndex <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>activeIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        _this<span class=\"token punctuation\">.</span>policyType <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>policyType<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2 id=\"3-当页动态修改-url\" style=\"position:relative;\"><a href=\"#3-%E5%BD%93%E9%A1%B5%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9-url\" aria-label=\"3 当页动态修改 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 当页动态修改 url</h2>\n<p>需求描述：当页面在进行轮播操作的时候希望能记录当前显示的轮播 ID(activeIndex)。当进入下一个页面再返回的时候能记住之前的选择，将轮播打到之前的 ID 位置。所以我想将这部分信息固化在 url 中，轮播发生变化时，修改 URL。这样实现比较符最小修改原则，其余页面不用变动。</p>\n<p>之前的写法是将 activeIndex 放在<code class=\"language-text\">$route</code>的 query 中，当轮播后，将\nactiveIndex 的值存入<code class=\"language-text\">$route.query.activeIndex</code>中，然后<code class=\"language-text\">$router.replace</code>当前路由，理论上应该能发生变化，但实际没有。</p>\n<p>查看文档后说，<code class=\"language-text\">$route</code>是只读模式。当然，对象部分是他监管不到的，我修改了并不是正统的做法。</p>\n<p><strong>神奇的地方来了</strong>：当我将 activeIndex 记在 params 中，轮播变动修改 params 中的参数，然后<code class=\"language-text\">$router.replace</code>当前路由，却能发生对应的变化。代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> swiperInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Swiper</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#swiper\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  pagination<span class=\"token operator\">:</span> <span class=\"token string\">\".swiper-pagination\"</span><span class=\"token punctuation\">,</span>\n  paginationClickable<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  initialSlide<span class=\"token operator\">:</span> activeIndex<span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onSlideChangeEnd</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">swiper</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> _activeIndex <span class=\"token operator\">=</span> swiper<span class=\"token punctuation\">.</span>activeIndex<span class=\"token punctuation\">;</span>\n    _this<span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>activeIndex <span class=\"token operator\">=</span> _activeIndex<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// $router我放到了window上方便调用</span>\n    window<span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> _this<span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n      params<span class=\"token operator\">:</span> _this<span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">,</span>\n      query<span class=\"token operator\">:</span> _this<span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 根据activeIndex，在这里初始化下面显示的数据</span>\n    _this<span class=\"token punctuation\">.</span>transferDetail <span class=\"token operator\">=</span> _this<span class=\"token punctuation\">.</span>allData<span class=\"token punctuation\">.</span>plans<span class=\"token punctuation\">[</span>_activeIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>segments<span class=\"token punctuation\">;</span>\n    _this<span class=\"token punctuation\">.</span><span class=\"token function\">clearBusDetailFoldState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"4-事件如何处理\" style=\"position:relative;\"><a href=\"#4-%E4%BA%8B%E4%BB%B6%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86\" aria-label=\"4 事件如何处理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 事件如何处理</h2>\n<p>估计你也能猜到，发生的问题是事件绑定了很多次，比如上传点击 input 监听 change 事件，突然显示了多张相同图片的问题。</p>\n<p>也就是说，DOM 在编译后就缓存在内容中了，如果再次进入还再进行事件绑定初始化则就会发生这个问题。</p>\n<p>解决办法：在 mounted 中绑定事件，因为这个只执行一次，并且 DOM 已准备好。如果插件绑定后还要再执行一下事件的 handler 函数的话，那就提取出来，放在 activated 中执行。比如：根据输入内容自动增长 textarea 的高度，这部分需要监听 textarea 的 input 和 change 事件，并且页面进入后还要再次执行一次 handler 函数，更新 textarea 高度（避免上次输入的影响）。</p>\n<h2 id=\"5-地图组件处理\" style=\"position:relative;\"><a href=\"#5-%E5%9C%B0%E5%9B%BE%E7%BB%84%E4%BB%B6%E5%A4%84%E7%90%86\" aria-label=\"5 地图组件处理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 地图组件处理</h2>\n<p>想必这是使用<code class=\"language-text\">keep-alive</code>最直接的性能表现。之前是进入地图页面后进行地图渲染+线路标记；现在是清除以前的线路标记绘制新的线路，性能优化可想而知！</p>\n<p>我这里使用的是高德地图，在 mounted 中初始化 map，代码示例如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"transferMap\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      map<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">initData</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">searchTransfer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 地图渲染 这个在transfer-map.html中使用</span>\n    <span class=\"token function-variable function\">renderTransferMap</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">transferMap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">mounted</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AMap<span class=\"token punctuation\">.</span>Map</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"container\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      showBuildingBlock<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      animateEnable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      resizeEnable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      zoom<span class=\"token operator\">:</span> <span class=\"token number\">12</span> <span class=\"token comment\">//地图显示的缩放级别</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">activated</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    _this<span class=\"token punctuation\">.</span><span class=\"token function\">initData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 设置title</span>\n    <span class=\"token function\">setDocumentTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"换乘地图\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _this<span class=\"token punctuation\">.</span><span class=\"token function\">searchTransfer</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">.</span>policyType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 数据加载完成</span>\n      <span class=\"token comment\">// 换乘地图页面</span>\n      <span class=\"token keyword\">let</span> transferMap <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>plans<span class=\"token punctuation\">[</span>_this<span class=\"token punctuation\">.</span>activeIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      transferMap<span class=\"token punctuation\">.</span>origin <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">;</span>\n      transferMap<span class=\"token punctuation\">.</span>destination <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 填数据</span>\n      _this<span class=\"token punctuation\">.</span>transferMap <span class=\"token operator\">=</span> transferMap<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 地图渲染</span>\n      _this<span class=\"token punctuation\">.</span><span class=\"token function\">renderTransferMap</span><span class=\"token punctuation\">(</span>transferMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">deactivated</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 清理地图之前的标记</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">clearMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"6-documenttitle-修改\" style=\"position:relative;\"><a href=\"#6-documenttitle-%E4%BF%AE%E6%94%B9\" aria-label=\"6 documenttitle 修改 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. document.title 修改</h2>\n<p>这个不是<code class=\"language-text\">keep-alive</code>的问题，不过我也在这里分享下。</p>\n<p>问题是，使用下面这段方法，可以修改 Title，但是页面来回切换多次后就不生效了，我也不知道为啥，放到 setTimeout 中就直接不执行。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">document.title = &#39;页面名称&#39;;</code></pre></div>\n<p>下面是使用 2 种环境的修复方法：</p>\n<p>纯 js 实现</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">setDocumentTitle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//以下代码可以解决以上问题，不依赖jq</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//利用iframe的onload事件刷新页面</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> iframe <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iframe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    iframe<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"/favicon.ico\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 必须</span>\n    iframe<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>visibility <span class=\"token operator\">=</span> <span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">;</span>\n    iframe<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">\"1px\"</span><span class=\"token punctuation\">;</span>\n    iframe<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token string\">\"1px\"</span><span class=\"token punctuation\">;</span>\n    iframe<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>jQuery/Zepto 实现</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">setDocumentTitle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//需要jQuery</span>\n  <span class=\"token keyword\">var</span> $body <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// hack在微信等webview中无法修改document.title的情况</span>\n  <span class=\"token keyword\">var</span> $iframe <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;iframe src=\"/favicon.ico\">&lt;/iframe>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  $iframe\n    <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        $iframe<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">appendTo</span><span class=\"token punctuation\">(</span>$body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>以上内容的更新请查看我的博客，<a href=\"http://xiangsongtao.com/article/5853b2c0044bf1353af82fbf\" target=\"_target\" rel=\"nofollow\">点这里</a>。</p>\n<p>(完)</p>","timeToRead":6,"wordCount":{"paragraphs":29,"sentences":29,"words":232},"fields":{"slug":"/lu-you-kai-qi-keep-alive-shi-de/","relativePath":"2016/2016-12-16---lu-you-kai-qi-keep-alive-shi-de/index.md"},"excerpt":"这个不是业务的要求，但是看到每次进入页面就重新渲染 DOM 然后再获取数据更新 DOM，觉得作为一个前端工程师有必要优化下的加载逻辑，正好 vue…","frontmatter":{"title":"路由开启keep-alive时的注意点","date":"16 Dec 2016","tags":["Vue"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<blockquote>\n<p>下面列出来的是 JavaScript 总结大纲，详细内容会继续展开，待续。。</p>\n</blockquote>\n<h2 id=\"基础\" style=\"position:relative;\"><a href=\"#%E5%9F%BA%E7%A1%80\" aria-label=\"基础 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基础</h2>\n<ul>\n<li>\n<p>数据类型相关</p>\n<ul>\n<li>基础类型(Number/String/Boolean/Null/undefined)</li>\n<li>引用类型(object/function/array/date)</li>\n<li>深浅拷贝</li>\n<li>类型对应的操作方法</li>\n</ul>\n</li>\n<li>\n<p>函数相关</p>\n<ul>\n<li>内部属性(this)</li>\n<li>外部属性(arguments/length/name/protorype)</li>\n<li>call/apply</li>\n<li>bind</li>\n<li>作用域及作用域链</li>\n<li>类/闭包/原型继承</li>\n<li>模块化</li>\n<li>错误及调试</li>\n</ul>\n</li>\n<li>\n<p>Ajax</p>\n<ul>\n<li>创建过程</li>\n<li>响应码 readystate</li>\n<li>跨域请求</li>\n<li>请求方式</li>\n<li>jsonp</li>\n</ul>\n</li>\n<li>\n<p>jQuery</p>\n<ul>\n<li>流式 API</li>\n<li>DOM 操作</li>\n<li>通用工具及方法</li>\n<li>选择器及事件队列</li>\n<li>ajax 方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"进阶\" style=\"position:relative;\"><a href=\"#%E8%BF%9B%E9%98%B6\" aria-label=\"进阶 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>进阶</h2>\n<ul>\n<li>雅虎军规熟记</li>\n<li>代码优化</li>\n<li>HTML/CSS/JavaScript 书写结构优化</li>\n<li>请求优化</li>\n<li>合理分流</li>\n<li>\n<p>移动端性能优化</p>\n<ul>\n<li>网络传输优化</li>\n<li>DOM 操作优化</li>\n<li>内存资源优化</li>\n<li>体验优化</li>\n</ul>\n</li>\n<li>\n<p>常见算法</p>\n<ul>\n<li>冒泡排序</li>\n<li>插入排序</li>\n<li>希尔排序</li>\n<li>快速排序</li>\n</ul>\n</li>\n<li>\n<p>数据结构</p>\n<ul>\n<li>数组</li>\n<li>列表</li>\n<li>栈</li>\n<li>队列</li>\n<li>链表</li>\n<li>字典</li>\n<li>散列</li>\n<li>集合</li>\n<li>二叉树</li>\n<li>图</li>\n<li>排序算法</li>\n<li>检索算法</li>\n</ul>\n</li>\n<li>\n<p>高性能 JavaScript</p>\n<ul>\n<li>脚本加载和执行</li>\n<li>数据存储</li>\n<li>DOM 操作</li>\n<li>算法和流程控制</li>\n<li>字符串及正则</li>\n<li>控制 js 处理时长</li>\n<li>ajax 异步数据的运用</li>\n<li>语言使用习惯(eval/with/new/原生方法)</li>\n<li>js 压缩/Gzip/md5 命名/CDN</li>\n</ul>\n</li>\n<li>\n<p>常用 JS 框架</p>\n<ul>\n<li>reactjs</li>\n<li>vuejs</li>\n<li>angularjs 1.x</li>\n<li>jquery</li>\n<li>zepto</li>\n<li>lodash</li>\n<li>nodejs</li>\n<li>express</li>\n</ul>\n</li>\n<li>\n<p>构建工具</p>\n<ul>\n<li>gulp</li>\n<li>webpack</li>\n<li>fis</li>\n<li>yeoman</li>\n</ul>\n</li>\n<li>\n<p>MVC/MVVM 概念</p>\n<ul>\n<li>区别</li>\n<li>框架代表</li>\n<li>使用范围</li>\n</ul>\n</li>\n<li>\n<p>ECMAScript5</p>\n<ul>\n<li>语法</li>\n<li>babel</li>\n<li>promise</li>\n</ul>\n</li>\n</ul>","timeToRead":2,"wordCount":{"paragraphs":89,"sentences":89,"words":136},"fields":{"slug":"/JavaScript-he-hu-xin-ji-neng-nai-dian/","relativePath":"2016/2016-12-27---JavaScript-he-hu-xin-ji-neng-nai-dian/index.md"},"excerpt":"下面列出来的是 JavaScript 总结大纲，详细内容会继续展开，待续。。 基础 数据类型相关 基础类型(Number/String/Boolean/Null/undefined) 引用类型(object…","frontmatter":{"title":"JavaScript 核心技能点","date":"27 Dec 2016","tags":["随笔"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/Vue2-zhi-qu-diao-zu-jian-de-di/","prev":"/JavaScript-he-hu-xin-ji-neng-nai-dian/","next":"/lu-you-kai-qi-keep-alive-shi-de/"}},"staticQueryHashes":["3240721340","63159454"]}