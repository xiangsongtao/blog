{"componentChunkName":"component---src-templates-blog-post-js","path":"/Fastclick-yuan-li-qian-jian-xi/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<h3 id=\"为什么使用-fastclick\" style=\"position:relative;\"><a href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-fastclick\" aria-label=\"为什么使用 fastclick permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>为什么使用 FastClick</h3>\n<p>在移动端 H5 开发过程中，关于点触可能会遇到如下两个问题：</p>\n<ul>\n<li>手动点击与真正触发<code class=\"language-text\">click</code>事件会存在 300ms 的延迟</li>\n<li>点击穿透问题（点击行为会穿透元素触发非父子关系元素的事件）</li>\n</ul>\n<p>延迟的存在时因为浏览器想知道你<a href=\"https://developers.google.com/mobile/articles/fast_buttons\" target=\"_target\" rel=\"nofollow\">是否在进行双击操作</a>；而点击穿透是因为 300ms 延迟触发时的副作用。而使用 fastclick 能很好的解决这个问题，增加使用者的体验。</p>\n<h3 id=\"可以不使用的场景\" style=\"position:relative;\"><a href=\"#%E5%8F%AF%E4%BB%A5%E4%B8%8D%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9C%BA%E6%99%AF\" aria-label=\"可以不使用的场景 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>可以不使用的场景</h3>\n<p>不必使用的浏览器环境如下：</p>\n<ul>\n<li>Android + Chrome >32</li>\n<li>Android + Chrome + <code class=\"language-text\">meta=&quot;user-scalable=no&quot;</code></li>\n<li>部分黑莓手机环境（可略过）</li>\n<li>部分 WindowsPhone 环境（可略过）</li>\n</ul>\n<p>这部分的判断在下面的方法中有体现，如果当前环境支持快速点击，则 FastClick 会自动跳过初始化。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">FastClick<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">notNeeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"原理过程\" style=\"position:relative;\"><a href=\"#%E5%8E%9F%E7%90%86%E8%BF%87%E7%A8%8B\" aria-label=\"原理过程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>原理过程</h3>\n<p>如果完整的描述 FastClick 过程需要考虑多种场景的兼容，<strong>这里就描述一个按钮点击过程的处理</strong>，下面是用来描述的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 业务代码</span>\n<span class=\"token keyword\">var</span> $test <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$test<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1 click\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// FastClick简单实现</span>\n<span class=\"token keyword\">var</span> targetElement <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 记录点击的元素</span>\n  targetElement <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 阻止默认事件（屏蔽之后的click事件）</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> touch <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 合成click事件，并添加可跟踪属性forwardedTouchEvent</span>\n  <span class=\"token keyword\">var</span> clickEvent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MouseEvents\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  clickEvent<span class=\"token punctuation\">.</span><span class=\"token function\">initMouseEvent</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    window<span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>screenX<span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>screenY<span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  clickEvent<span class=\"token punctuation\">.</span>forwardedTouchEvent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 自定义的</span>\n  targetElement<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>clickEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"这里进行过程说明：\" style=\"position:relative;\"><a href=\"#%E8%BF%99%E9%87%8C%E8%BF%9B%E8%A1%8C%E8%BF%87%E7%A8%8B%E8%AF%B4%E6%98%8E%EF%BC%9A\" aria-label=\"这里进行过程说明： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>这里进行过程说明：</h4>\n<h5 id=\"1-业务正常使用-click-绑定事件\" style=\"position:relative;\"><a href=\"#1-%E4%B8%9A%E5%8A%A1%E6%AD%A3%E5%B8%B8%E4%BD%BF%E7%94%A8-click-%E7%BB%91%E5%AE%9A%E4%BA%8B%E4%BB%B6\" aria-label=\"1 业务正常使用 click 绑定事件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 业务正常使用 click 绑定事件</h5>\n<h5 id=\"2-在-documentbody-绑定code-classlanguage-texttouchstartcode和code-classlanguage-texttouchendcode\" style=\"position:relative;\"><a href=\"#2-%E5%9C%A8-documentbody-%E7%BB%91%E5%AE%9Acode-classlanguage-texttouchstartcode%E5%92%8Ccode-classlanguage-texttouchendcode\" aria-label=\"2 在 documentbody 绑定code classlanguage texttouchstartcode和code classlanguage texttouchendcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 在 document.body 绑定<code class=\"language-text\">touchstart</code>和<code class=\"language-text\">touchend</code></h5>\n<p><strong><code class=\"language-text\">touchstart</code></strong></p>\n<p>用于记录当前点击的元素 targetElement；</p>\n<p><strong><code class=\"language-text\">touchend</code></strong></p>\n<ul>\n<li>阻止默认事件（屏蔽之后的 click 事件）</li>\n<li>合成 click 事件，并添加可跟踪属性 forwardedTouchEvent</li>\n<li>在 targetElement 上触发<code class=\"language-text\">click</code>事件</li>\n<li>targetElement 上绑定的事件立即执行，完成 FastClick</li>\n</ul>\n<h5 id=\"3-执行业务自己的-click-事件\" style=\"position:relative;\"><a href=\"#3-%E6%89%A7%E8%A1%8C%E4%B8%9A%E5%8A%A1%E8%87%AA%E5%B7%B1%E7%9A%84-click-%E4%BA%8B%E4%BB%B6\" aria-label=\"3 执行业务自己的 click 事件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 执行业务自己的 click 事件</h5>\n<h3 id=\"总结\" style=\"position:relative;\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h3>\n<p>以上就完成了模拟 FastClick，是不是很简单。事件的执行过程需要了解：touch 事件先于 mouse 事件先于 click 执行，因此可以在 document.body 上绑定事件用于监听点触行为，根据需要模拟 click 触发真正需要响应的元素。</p>\n<p>(完)</p>","timeToRead":3,"wordCount":{"paragraphs":28,"sentences":28,"words":95},"fields":{"slug":"/Fastclick-yuan-li-qian-jian-xi/","relativePath":"2017/2017-12-08---Fastclick-yuan-li-qian-jian-xi/index.md"},"excerpt":"为什么使用 FastClick 在移动端 H5 开发过程中，关于点触可能会遇到如下两个问题： 手动点击与真正触发事件会存在 300ms…","frontmatter":{"title":"Fastclick原理浅析","date":"08 Dec 2017","tags":["Mobile"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<h3 id=\"简述\" style=\"position:relative;\"><a href=\"#%E7%AE%80%E8%BF%B0\" aria-label=\"简述 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>简述</h3>\n<p>这篇博文主要讲解<strong>前端组件库主题定制</strong>相关内容，只限于<strong>Scss/Sass、Less</strong>两种样式预处理语言，这两种语言能够简化 CSS 的工作流，使得开发者维护开发样式更得心应手，便于应对复杂的样式需求。</p>\n<p>对组件封装性好的库而我比较熟悉的有两个，React 和 Vue，这里我对这两个前端库封装的组件进行说明，涉及到的组件库包括：<a href=\"http://element-cn.eleme.io\" target=\"_target\" rel=\"nofollow\">element-ui</a>、<a href=\"https://www.iviewui.com/\" target=\"_target\" rel=\"nofollow\">iview</a>、<a href=\"https://ant.design\" target=\"_target\" rel=\"nofollow\">antd</a>、<a href=\"https://github.com/ionic-team/ionic\" target=\"_target\" rel=\"nofollow\">ionic</a>。</p>\n<h3 id=\"主题定制分类\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6%E5%88%86%E7%B1%BB\" aria-label=\"主题定制分类 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主题定制分类</h3>\n<p>组件库的编写者一般都会为开发者设计一些主题样式更换方案，主要是这两类：</p>\n<ol>\n<li>复写全部主题样式，一次性引入</li>\n<li>通过预处理器注入主题变量</li>\n</ol>\n<p>这里对这两类进行说明。</p>\n<h4 id=\"1-复写全部主题样式\" style=\"position:relative;\"><a href=\"#1-%E5%A4%8D%E5%86%99%E5%85%A8%E9%83%A8%E4%B8%BB%E9%A2%98%E6%A0%B7%E5%BC%8F\" aria-label=\"1 复写全部主题样式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 复写全部主题样式</h4>\n<h5 id=\"scss\" style=\"position:relative;\"><a href=\"#scss\" aria-label=\"scss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SCSS</h5>\n<p>这个在 PC 端比较常见，比如：<a href=\"http://element-cn.eleme.io/#/zh-CN/component/custom-theme\" target=\"_target\" rel=\"nofollow\">element-ui</a>中的第二个方案，虽然说是改变 SCSS 变量，但还是复写了全部主题样式。项目初始时加载全部组件的样式，这个场景在 PC 端并没有太大的问题。但是从性能优化的角度，并不推荐。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">/* 改变主题色变量 */</span>\n<span class=\"token property\"><span class=\"token variable\">$--color-primary</span></span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* 改变 icon 字体路径变量，必需 */</span>\n<span class=\"token property\"><span class=\"token variable\">$--font-path</span></span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"../node_modules/element-ui/lib/theme-chalk/fonts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"../node_modules/element-ui/packages/theme-chalk/src/index\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5 id=\"less\" style=\"position:relative;\"><a href=\"#less\" aria-label=\"less permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Less</h5>\n<p>此外，<a href=\"https://www.iviewui.com/docs/guide/theme\" target=\"_target\" rel=\"nofollow\">iview</a>使用 Less 作为预编译语言，给出的推荐主题定制方案全部都是复写全部主题样式的解决办法，和 element-ui 一致。</p>\n<div class=\"gatsby-highlight\" data-language=\"less\"><pre class=\"language-less\"><code class=\"language-less\"><span class=\"token variable\">@import</span> <span class=\"token string\">\"~iview/src/styles/index.less\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Here are the variables to cover, such as:</span>\n<span class=\"token variable\">@primary-color<span class=\"token punctuation\">:</span></span> #8c0776<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>因为 Less 和 Scss 变量作用域定义不一样，上面两个<code class=\"language-text\">@import</code>写法会有些不同，但都是一个意思。</p>\n</blockquote>\n<p>需要注意的是，这种方式已经载入了所有组件的样式，不需要也无法和按需加载插件<a href=\"https://www.npmjs.com/package/babel-plugin-import\" target=\"_target\" rel=\"nofollow\">babel-plugin-import</a>或<a href=\"https://www.npmjs.com/package/babel-plugin-component\" target=\"_target\" rel=\"nofollow\">babel-plugin-component</a>的 style 属性一起使用。</p>\n<h4 id=\"2-通过预处理器注入主题变量\" style=\"position:relative;\"><a href=\"#2-%E9%80%9A%E8%BF%87%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E6%B3%A8%E5%85%A5%E4%B8%BB%E9%A2%98%E5%8F%98%E9%87%8F\" aria-label=\"2 通过预处理器注入主题变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 通过预处理器注入主题变量</h4>\n<h5 id=\"less-1\" style=\"position:relative;\"><a href=\"#less-1\" aria-label=\"less 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Less</h5>\n<p>这里值得一提的是 Antd 组件库，这是我强烈推荐使用的组件库。它推荐使用<a href=\"https://ant.design/docs/react/customize-theme-cn\" target=\"_target\" rel=\"nofollow\">修改主题变量</a>的方式定制主题，使用了 Less 的 <a href=\"http://lesscss.org/usage/#using-less-in-the-browser-modify-variables\" target=\"_target\" rel=\"nofollow\"><strong>modifyVars</strong></a> 的方式来覆盖主题变量。比如将主题挂在<code class=\"language-text\">package.json</code>上：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"theme\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"primary-color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#1DA57A\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>这个方案之前在我做的项目中有使用，自己根据实现原理写逻辑代码不是很难。</p>\n<p>问题点是：每次修改变量都需要重启 dev 服务，刚开始对开发者不是很友好。当然，主题修改好后，并不是经常变动，这里可以原谅。</p>\n<h5 id=\"scss-1\" style=\"position:relative;\"><a href=\"#scss-1\" aria-label=\"scss 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SCSS</h5>\n<p>其实 SCSS 也能通过<strong>只修改主题变量</strong>的方式更改主题，这个是在读 IONIC 源码时发现的，<a href=\"https://github.com/ionic-team/ionic-app-scripts/blob/427e556460265da817a5975567ded2a00e5cb8bd/src/sass.ts#L137\" target=\"_target\" rel=\"nofollow\">源码位置</a>。它是通过<a href=\"https://github.com/sass/node-sass\" target=\"_target\" rel=\"nofollow\">node-sass</a>的<a href=\"https://github.com/sass/node-sass#data\" target=\"_target\" rel=\"nofollow\"><strong>options.data</strong></a>的方式覆盖主题。比如传入如下字符串：</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token string\">'@charset \"UTF-8\"; @import \"/xxx/xxx/project/to/theme/path/variables.scss\";'</span></code></pre></div>\n<p>构建时启用你定义的样式变量。我这里简单写了一个变量获取方式，<a href=\"https://github.com/vm-component/vimo/blob/master/examples/build/get-scss-variables.js\" target=\"_target\" rel=\"nofollow\">代码</a>。</p>\n<p>注意，这里需要你样式组件中的所有变量后都带上<code class=\"language-text\">!default</code>修饰，将生效等级降为最低。这里没有 Less 那样需要重启 dev-server 的问题，通过 webpack 构建，修改了引入的主题文件，项目将自动重构，较为方便。</p>\n<h3 id=\"总结\" style=\"position:relative;\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h3>\n<p>建议通过修改变量的方式来修改主题我认为是比较靠谱的，当主题与公司 UI 不符时，再使用样式复写的方式处理。</p>\n<blockquote>\n<p>个人还是比较喜欢 SCSS 的处理方式。</p>\n</blockquote>","timeToRead":4,"wordCount":{"paragraphs":27,"sentences":27,"words":130},"fields":{"slug":"/guan-yu-zu-jian-ku-de-di-zhu-ti-ding-zhi/","relativePath":"2017/2017-12-05---guan-yu-zu-jian-ku-de-di-zhu-ti-ding-zhi/index.md"},"excerpt":"简述 这篇博文主要讲解前端组件库主题定制相关内容，只限于Scss/Sass、Less两种样式预处理语言，这两种语言能够简化 CSS…","frontmatter":{"title":"关于组件库的主题定制","date":"05 Dec 2017","tags":["组件库","主题"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<h3 id=\"路由部分\" style=\"position:relative;\"><a href=\"#%E8%B7%AF%E7%94%B1%E9%83%A8%E5%88%86\" aria-label=\"路由部分 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>路由部分</h3>\n<p>以下是<code class=\"language-text\">dva/router</code>的导出项:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  routerRedux<span class=\"token punctuation\">,</span>\n  Router<span class=\"token punctuation\">,</span>\n  Switch<span class=\"token punctuation\">,</span>\n  Route<span class=\"token punctuation\">,</span>\n  Redirect<span class=\"token punctuation\">,</span>\n  Link<span class=\"token punctuation\">,</span>\n  NavLink\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"dva/router\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"routerredux\" style=\"position:relative;\"><a href=\"#routerredux\" aria-label=\"routerredux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>routerRedux</h4>\n<p>dva 中的源码如下:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>routerRedux <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"react-router-redux\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>routerRedux 是对<code class=\"language-text\">react-router-redux</code>的导出, 自身的初始化已在 dva 中完成, 一般用在非 RouteComponent 页面(不是函数式组件), 比如:</p>\n<ul>\n<li>PC 组件内</li>\n<li>外部库</li>\n<li>modals</li>\n<li>函数式组件</li>\n</ul>\n<p>这样使用:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>routerRedux<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/form/step-form\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>RouteComponent 组件可以直接在<code class=\"language-text\">this.props</code>中拿到.</p>\n<h4 id=\"code-classlanguage-textltrouter-historyhistorygtcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textltrouter-historyhistorygtcode\" aria-label=\"code classlanguage textltrouter historyhistorygtcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Router history:History&gt;</code></h4>\n<p><code class=\"language-text\">&lt;Router&gt;</code>组件源自<code class=\"language-text\">react-router</code>插件, 按照源码的说明:</p>\n<blockquote>\n<p>The public API for putting history on context.</p>\n</blockquote>\n<p>也就是说, 将传入的<code class=\"language-text\">history</code>实例通过 React 组件的形式注入 context 中, 以便于子组件通过 context 拿到 router 信息, 这里的<code class=\"language-text\">router</code>结构信息如下:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n\thistory<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">,</span>\n\troute<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    \t\tlocation<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">,</span>\n    \t\tmatch<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>match\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里需要注意的是, 传入的 history 是特意化的 history 实例, 比如这三类:</p>\n<ul>\n<li>createBrowserHistory</li>\n<li>createMemoryHistory</li>\n<li>createHashHistory</li>\n</ul>\n<p>因此, 在 dva 中不再需要<code class=\"language-text\">&lt;BrowserRouter&gt;</code>, <code class=\"language-text\">&lt;HashRouter&gt;</code>, <code class=\"language-text\">&lt;MemoryRouter&gt;</code>三个组件, 这里不再解释.</p>\n<p>对于在组件树中的组件, 通过以下方式就能拿到路由信息:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Analysis</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>router<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nAnalysis<span class=\"token punctuation\">.</span>contextTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  router<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>ps: react-router 就是对 history 的再次封装</p>\n</blockquote>\n<h4 id=\"code-classlanguage-textltswitchgtcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textltswitchgtcode\" aria-label=\"code classlanguage textltswitchgtcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Switch&gt;</code></h4>\n<p>只渲染出第一个与当前访问地址匹配的 <code class=\"language-text\">&lt;Route&gt;</code> 或 <code class=\"language-text\">&lt;Redirect&gt;</code>。</p>\n<h4 id=\"code-classlanguage-textltredirect-tostringobject-fromstring-pushbooleangtcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textltredirect-tostringobject-fromstring-pushbooleangtcode\" aria-label=\"code classlanguage textltredirect tostringobject fromstring pushbooleangtcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Redirect to:string|object from:string push:boolean&gt;</code></h4>\n<p>渲染时将导航到一个新地址，这个新地址覆盖在访问历史信息里面的本该访问的那个地址。</p>\n<h4 id=\"code-classlanguage-textltroute-component--render--children-path-string-exact-bool-strict-boolgtcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textltroute-component--render--children-path-string-exact-bool-strict-boolgtcode\" aria-label=\"code classlanguage textltroute component  render  children path string exact bool strict boolgtcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Route component | render | children path: string exact: bool strict: bool&gt;</code></h4>\n<p>它最基本的职责就是当页面的访问地址与 Route 上的 path 匹配时，就渲染出对应的 UI 界面。即: 页面插入点.</p>\n<h4 id=\"code-classlanguage-textltlinkgtcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textltlinkgtcode\" aria-label=\"code classlanguage textltlinkgtcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Link&gt;</code></h4>\n<p>为你的应用提供声明式，无障碍导航。</p>\n<ul>\n<li>to: string</li>\n<li>replace: bool</li>\n</ul>\n<h4 id=\"code-classlanguage-textltnavlinkgtcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textltnavlinkgtcode\" aria-label=\"code classlanguage textltnavlinkgtcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;NavLink&gt;</code></h4>\n<p>这是 <Link> 的特殊版，顾名思义这就是为页面导航准备的。因为导航需要有 “激活状态”。</p>\n<ul>\n<li>activeClassName: string</li>\n<li>exact: bool</li>\n<li>strict: bool</li>\n<li>isActive: func</li>\n</ul>\n<h2 id=\"参考文章\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\" aria-label=\"参考文章 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考文章</h2>\n<ul>\n<li><a href=\"http://blog.csdn.net/sinat_17775997/article/details/69218382\" target=\"_target\" rel=\"nofollow\">初探 React Router 4.0</a></li>\n</ul>","timeToRead":3,"wordCount":{"paragraphs":40,"sentences":40,"words":112},"fields":{"slug":"/dva/","relativePath":"2017/2017-12-27---dva/index.md"},"excerpt":"路由部分 以下是的导出项: routerRedux dva 中的源码如下: routerRedux 是对的导出, 自身的初始化已在 dva 中完成, 一般用在非 RouteComponent…","frontmatter":{"title":"dva","date":"27 Dec 2017","tags":["React"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/Fastclick-yuan-li-qian-jian-xi/","prev":"/dva/","next":"/guan-yu-zu-jian-ku-de-di-zhu-ti-ding-zhi/"}},"staticQueryHashes":["3240721340","63159454"]}