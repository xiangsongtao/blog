{"componentChunkName":"component---src-templates-blog-post-js","path":"/Vimo-jie-shao/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/me.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangsongtao","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangsongtao.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/me.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangsongtao","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangsongtao.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<p>Vimo 是一个移动端混合框架的解决方案，包含了移动设备平台信息的初始化置、基础 H5 组件及 HyBrid 组件的注册安装、公共方法包装等。决定要写这个框架也是因为自己去年一年的工作需要做个总结，故以此为载体，将我对 H5 移动端的理解及认识总结在里面。</p>\n<p>Vimo 是 VueMobile 的昵称，也是名字的由来，代表他是基于 Vue.js 为基础实现的。对于框架的开发，我自认为我对框架前瞻性思维和经验还是不足，借鉴与学习也许就是我现在最该着手去做的。因为开发过 IONIC 应用，认为 IONIC 在处理组件传参指纹、平台特性初始化等方面做得很好，所以就以此为蓝图进行模仿。因此，在阅读 Vimo 源码的时候应该能看到很多 IONIC 的身影。</p>\n<p>我相信每个致力于技术方向的开发人员心里面都会有一个金字塔，金字塔的底部就是自己领域的知识积累，中间是经验与技巧，最上面应该就要实现自己的知识体系与框架思想。VImo 就是一个我的一个 Top，在开发完“杭州公交 H5”项目后，认识到这个过程是必须要走的。</p>\n<blockquote>\n<p>也是为了在框架的基础上快开发，避免不必要的设计麻烦，节省时间多陪陪家人。</p>\n</blockquote>\n<p>关于 Vimo 接下来的介绍，我将以问题的形式进行：</p>\n<h2 id=\"1-什么是混合框架-设计的目的是什么\" style=\"position:relative;\"><a href=\"#1-%E4%BB%80%E4%B9%88%E6%98%AF%E6%B7%B7%E5%90%88%E6%A1%86%E6%9E%B6-%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%9B%AE%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88\" aria-label=\"1 什么是混合框架 设计的目的是什么 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 什么是混合框架, 设计的目的是什么?</h2>\n<p>设计的目的：便于在各个系统(网页/平台/壳子)中都能步调一致的工作，将不同的部分抽离出页面，也便于调试！</p>\n<h2 id=\"问题搜集\" style=\"position:relative;\"><a href=\"#%E9%97%AE%E9%A2%98%E6%90%9C%E9%9B%86\" aria-label=\"问题搜集 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题搜集</h2>\n<p><strong>什么是混合框架, 设计的目的是什么?</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">纯 H5 实现</th>\n<th align=\"center\">纯 App 方案</th>\n<th align=\"center\">HyBrid 方案</th>\n<th align=\"center\">类 ReactNative 方案</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">效率高, 性能低</td>\n<td align=\"center\">效率低, 性能高, 灵活性低</td>\n<td align=\"center\">折中, 需要 bridge</td>\n<td align=\"center\">特殊业务需要定制化开发插件</td>\n</tr>\n</tbody>\n</table>\n<p>设计的目的：便于在各个系统(网页/平台/壳子)中都能步调一致的工作，将不同的部分抽离出页面，也便于调试！</p>\n<p>现在的一种这种方案:</p>\n<ul>\n<li>Vimo 设计思路来源于 IONIC, 为何选用 Vue 重构?</li>\n<li>IONIC 的设计可以借鉴学习, 我对 vue 比较熟, 简单+快</li>\n<li>IONIC Angular2.x + Typescript 陡峭+维护复杂</li>\n<li>react 不熟, 但是从测试角度来看, vue 稍强</li>\n<li>组件间嵌套规则是怎样的, 公共服务是如何注册到 this 上的? 为何要这样做?</li>\n</ul>\n<p>App -> Nav -> | Page | -> Header/Content/Footer</p>\n<p>覆盖大多数场景的布局结构</p>\n<ul>\n<li>各个模块的作用介绍, 和简单的实现思路?</li>\n</ul>\n<p>App: 主体\nNav: 路由切换的 wrap, 动画部分\nPage: 业务页面</p>\n<ul>\n<li>从我的角度来看你 Vimo 的不足和需要改进的地方</li>\n<li>计划: IONIC 的皮肤+ vue 的核心, 展示 IOS/md/wp/wechat/ali/cus</li>\n<li>只需要一个主题</li>\n<li>IONIC 实现有些复杂, 有些代码没看懂</li>\n<li>组件主要依据功能清单写的.</li>\n<li>对 test 支持</li>\n<li>hybrid 如何进行安装的由 hybrid 自己安装</li>\n</ul>\n<p>改进的地方：</p>\n<ol>\n<li>没实际的项目测试及运用，</li>\n<li>关于样式的处理，计划简单点, 例如只支持 IOS 的</li>\n<li>设计大多数是向类杭州公交【富 APP】方向靠，如果对单个页面的业务支持需要再改版.</li>\n<li>列表组件及附属组件有些事不必要的. 需要剔除</li>\n</ol>","timeToRead":3,"wordCount":{"paragraphs":32,"sentences":34,"words":164},"fields":{"slug":"/Vimo-jie-shao/","relativePath":"2017/2017-02-23---Vimo-jie-shao/index.md"},"excerpt":"Vimo 是一个移动端混合框架的解决方案，包含了移动设备平台信息的初始化置、基础 H5 组件及 HyBrid…","frontmatter":{"title":"Vimo介绍","date":"23 Feb 2017","tags":["Vue","Vimo"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<ul>\n<li>切图 - Photosho - 切图插件 Cutterman - 标注插件 Parker - 图片压缩 ImageOptim/HummingBird</li>\n<li>HTML - HTML 基础 - 基础标签技术性 - 语义化及 SEO - meta 属性 - 移动端 viewport 设置 - 块级元素/行内元素 - HTML 媒体 - HTML API - SSE/Web Works/拖放(了解) - 存储/定位/全屏/页面状态(是否当前浏览) - 全局属性 - contenteditable（是否允许编辑） - draggable（是否允许拖动） - drapzone（被拖动的目标被拖放到元素中会发生什么） - hidden - spellcheck（拼写检查） - id/class/title/dir/tabindex/lang - HTML 图形 - SVG/Canvas(了解) - 快速编辑 Emmet</li>\n<li>\n<p>CSS - CSS 选择器(了解写法对浏览器性能的开销) - CSS 核心点 - 浮动与清除浮动 - 居中 - 透明滤镜 - 布局 - display/position - float - flex - overflow - 基础样式 - 背景/边框/文本/字体/连接/表格/轮廓/3D - 用户界面 - 盒模型 - transform 变换 - transform（二维变换，平移、缩放、扭曲） - transforn-origin - transition 过度 - transition-property：检索或设置对象中的参与过渡的属性[all] - transition-duration - transition-timing-function - transition-delay - animation 动画 - CSS 引用方式 - 外部样式表 - 内部样式表 - 内联样式表 - 常用布局 (了解 HTML 书写顺序对网页渲染性能的影响) - CSS hack (常用的有总结)</p>\n<p>  \t- CSS前处理器\n- Scss\n- CSS后处理器\n- PostCss/Autoprefix\n- BEM命名法(面向对象的CSS)</p>\n</li>\n<li>JavaScript - Js 引用方式 - 外部/内联 - Script 异步加载方式 - async - 异步下载, 下载完毕后立即执行 - defer - 异步下载, 等待 DOM 解析完毕触发 DOMContentLoaded 事件之前 - 数据类型 - 数值类型 - 引用类型 - Object - Array 基础属性/方法 - Date 基础属性/方法 - RegExp 常用实例 - String 基础属性/方法 - 类型检测 - typeof/instance of/Object 类型拆分 - 深浅拷贝 (总结过) - 函数 - 理解 this - 作用于及作用域链 - 类 (原生写法/ES6) - call/apply - 绑定 this 的 - 闭包 - 模块化 - ES6 - Math - 常用方法 - DOM - DOM 基础操作(需要不定时查看文档) - 事件绑定/代理/队列 - BOM - 获取浏览器参数 - JSON - 对象的深拷贝 - 其他 - setTimeout 异步 - setInternal/requestAnimationFrame - try/catch - ES6 (掌握及使用了 70%) - 加密库 - md5/base64/sha1</li>\n<li>综合 - 页面性能优化及调试(雅虎军规) - 缓存处理 - 调试 - PC: Chrome - Mobile: 微信开发者工具/二维码/ - 线上抓包: Charles - API 测试: Postman - 跨域处理</li>\n<li>前端自动化 - Gulp(很熟悉, 能直接写任务) - Webpack(知道原理, 正在使用) - 依赖管理: npm/cnpm/yarn</li>\n<li>IDE: WebStorm/Brackets</li>\n<li>版本管理 - SVN(CornerStone) - Git(SourceTree/GitHub Desktop)</li>\n<li>框架 - jQuery/zepto - Angular1.x/Vue2.x - Leaflet - IONIC1.x - Lodash/Moment/…</li>\n<li>软技能 - 写作能力(正在锻炼) - 协作(能一个人做完的不交给两个人做) - 沟通(需要磨合)</li>\n<li>想学的 - Weex - IONIC 2.x - Nodejs - 达到熟练的程度</li>\n<li>今年计划 - Vimo: 基于 Vue2.x 的移动端 Hybrid 框架(完成 40%) - Vida: 基于 Vue2.x 的桌面框架(未开进行) - 深入了解 Nodejs 的中途岛模式(未开进行) - 发布 50 篇技术文章(不是硬性的)</li>\n</ul>","timeToRead":2,"wordCount":{"paragraphs":12,"sentences":12,"words":270},"fields":{"slug":"/lie-feng-qiu-de-di-qian-duan-ji-neng-nai/","relativePath":"2017/2017-02-19---lie-feng-qiu-de-di-qian-duan-ji-neng-nai/index.md"},"excerpt":"切图 - Photosho - 切图插件 Cutterman - 标注插件 Parker - 图片压缩 ImageOptim/HummingBird HTML - HTML 基础 - 基础标签技术性 - 语义化及 SEO…","frontmatter":{"title":"烈风裘的前端技能","date":"19 Feb 2017","tags":["随笔"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<p>最近在做 VImo 前端 Hybrid 框架编写，基础组件完成的差不多了，在组件模块之外还需要一个日志模块，关于日志模块的设计先从需求开始(自己给自己找需求)，大概是这样：在手机模式下，希望能有一个将代码中以 console 打印出来的信息显示在这个界面上的模块，包括 log、error、warn 等信息， 这样方便在手机上调试能看到错误信息，或者是 log 信息。</p>\n<p>因此，第一版的做法估计大家都会，拦截 console 方法， 将 arguments 信息转存到一个数组，然后将数组中的数据显示在这个界面上。界面用 js 动态生成，然后内容 append 到 body 里面就好，难度不大。</p>\n<p>但是，仔细一想，这个是有问题的：既然我都拦截了 console，如果我想统计 error 信息，并将错误信息发送到异常监控平台，也许又是一顿改；或者 PM 给了另一个需求：将监控用户行为的代码埋点发送到处理埋点的平台，也许又要加班了。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">try{\n\thelloWord()\n}catch(err){\n\tsendReport(err)\n}\n\nvar res = {\n\t// ...\n\tfail:function(){\n\t\tconsole.error(&#39;Can not find data! getUser.js::&lt;Function&gt;findMethod&#39;)\n\t}\n}</code></pre></div>\n<p>这里需要解释下埋点，乍一看，这个好像和拦截 console 没关系，我们需要换个角度来看下：一般定制化的统计都是需要定向埋点的，这就需要监听目标位置触发的事件，然后执行埋点程序，像下面这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$here.click(function(){\n\tuserEvent.send(&#39;hereClick-1&#39;)\n})</code></pre></div>\n<p>发送使用的是 ajax 还是图片这个由业务自己选择，本质上也是一个单向的数据传递，这个和发送页面异常信息是一样，可以理解成“我埋了一个错误”，呵呵。</p>\n<p>将共性提取出来，就是下面这个的图：</p>\n<p><img src=\"\"></p>\n<p>我们可以将网页看做一个分布式不连续的类 App 应用，当然，SPA 单页应用会更纯粹一些。应用对外信息操作分为两类：</p>\n<ol>\n<li>双向通信：比如 Ajax 数据请求，或者发送数据</li>\n<li>单向传递状态信息：错误异常监控、埋点等</li>\n</ol>\n<p>因此，这里涉及的日志模块就是为第二类准备的，功能清单如下：</p>\n<ol>\n<li>拦截 console 方法，如果是 error、warn、assert 方法则提取错误信息，一般为 string</li>\n<li>$log 服务添加自定义的 error、warn、assert 方法，可以传递更为复杂的错误对象</li>\n<li>对传入的错误信息进行归一化，try/catch 和 onerror 的错误属性是不一样的，这里需要统一</li>\n<li>埋点的实现方法和$log 完全相同</li>\n</ol>\n<p>将前端的代码当做一个分布式的类 App</p>\n<h2 id=\"app-对外通信方式\" style=\"position:relative;\"><a href=\"#app-%E5%AF%B9%E5%A4%96%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F\" aria-label=\"app 对外通信方式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App 对外通信方式</h2>\n<h3 id=\"http-请求\" style=\"position:relative;\"><a href=\"#http-%E8%AF%B7%E6%B1%82\" aria-label=\"http 请求 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>http 请求</h3>\n<h3 id=\"app-日志\" style=\"position:relative;\"><a href=\"#app-%E6%97%A5%E5%BF%97\" aria-label=\"app 日志 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App 日志</h3>\n<p>普通日志(log/debug/info)+异常日志(error/assert/warn)+埋点信息(analystics)</p>\n<p>移动端需要将日志搜集显示在手机屏幕上的需求</p>\n<p>普通的日志使用方式(显示级别不一样):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$log.log(&#39;message&#39;);\n$log.info(&#39;message&#39;);\n$log.debug(&#39;message&#39;);</code></pre></div>\n<p>异常的日志使用方式:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$log.warn(&#39;message&#39;, &#39;position&#39;);\n$log.error(&#39;message&#39;, &#39;position&#39;);\n$log.assert(isFalse, &#39;message&#39;, &#39;position&#39;);\n$log.assert(isFalse, &#39;message&#39;, &#39;./src/test.js::&lt;Function&gt;testMethod&#39;);</code></pre></div>\n<h2 id=\"异常搜集方式\" style=\"position:relative;\"><a href=\"#%E5%BC%82%E5%B8%B8%E6%90%9C%E9%9B%86%E6%96%B9%E5%BC%8F\" aria-label=\"异常搜集方式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>异常搜集方式</h2>\n<h3 id=\"主动发送\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E5%8A%A8%E5%8F%91%E9%80%81\" aria-label=\"主动发送 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主动发送</h3>\n<p>用于逻辑错误或状态错误.</p>\n<p>在代码中的异常位置手写记录代码:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n\tfail:function(){\n\t\t$log.error(&#39;无法得到服务器数据&#39;, &#39;./src/test.js &lt;Function&gt;testMethod&#39;)\n\t}\n}</code></pre></div>\n<h3 id=\"trycatch\" style=\"position:relative;\"><a href=\"#trycatch\" aria-label=\"trycatch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>try/catch</h3>\n<p>能不捕获的异常有 7 类,:</p>\n<ol>\n<li>SyntaxError: 语法错误</li>\n<li>ReferenceError: 引用错误 要用的东西没找到</li>\n<li>RangeError: 范围错误 专指参数超范围</li>\n<li>TypeError: 类型错误 错误的调用了对象的方法</li>\n<li>EvalError: eval()方法错误的使用与 url 相关函数参数不正确，主要是 encodeURI()、decodeURI()、\nencodeURIComponent()、decodeURIComponent()、escape()和 unescape()这六个函数。\neg: decodeURI(‘%2’)\nUncaught URIError: URI malformed</li>\n<li>URIError: url 地址错误\neval 函数没有被正确执行</li>\n<li>执行 ifream 中的方法</li>\n<li>json.parse()</li>\n<li>外部定义的变量, 比如 hrbyid 中定义的全局属性及方法</li>\n</ol>\n<p>1-4 在开发过程中避免,\n5-8 需要代码运行时判断(try/catch)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">try{\n\t// ....code\n}catch(err){\n\t$log.error(&#39;无法执行代码&#39;, &#39;./src/test.js::&lt;Function&gt;testMethod&#39;, err)\n}</code></pre></div>\n<h3 id=\"windowonerror\" style=\"position:relative;\"><a href=\"#windowonerror\" aria-label=\"windowonerror permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window.onerror</h3>\n<h2 id=\"异常搜集问题点\" style=\"position:relative;\"><a href=\"#%E5%BC%82%E5%B8%B8%E6%90%9C%E9%9B%86%E9%97%AE%E9%A2%98%E7%82%B9\" aria-label=\"异常搜集问题点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>异常搜集问题点</h2>\n<ol>\n<li>Script error 跨域问题. -> “Script error.“,</li>\n<li>try/catch, window.onerror -> 压缩代码无法定位(由本地$log 接管封装)</li>\n<li>window.onerror 只能有一个</li>\n<li>采样率(大 PV 的情况下)</li>\n<li>try/catch, window.onerror 返回的参数需要归一化</li>\n<li>error 不同途径的参数丢失</li>\n<li>message 在 console 中的展示形式</li>\n</ol>\n<h2 id=\"支持单页-spa-也支持多页\" style=\"position:relative;\"><a href=\"#%E6%94%AF%E6%8C%81%E5%8D%95%E9%A1%B5-spa-%E4%B9%9F%E6%94%AF%E6%8C%81%E5%A4%9A%E9%A1%B5\" aria-label=\"支持单页 spa 也支持多页 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>支持单页 SPA 也支持多页</h2>\n<p>localstroage 中备份, 初始化时先检查是否有备份. 注意 3Mb 的限制</p>\n<h2 id=\"关于埋点\" style=\"position:relative;\"><a href=\"#%E5%85%B3%E4%BA%8E%E5%9F%8B%E7%82%B9\" aria-label=\"关于埋点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>关于埋点</h2>\n<p>这里使用的是定向侵入式埋点.</p>\n<p>这类的埋点都是由事件触发: performance/pointer(click/touch)/scroll/setTimeout/自定义(swiper/goBack/appLoad/appExit/), 触发之后发送 log 信息:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$analytics(&#39;type&#39;, id)</code></pre></div>\n<p>如果是 pointer 类事件, 则在 dom 中添加属性: data-analytics-id=”_id”, _id 这部分可以通过 Vuex 全局维护(类似于 i18n)</p>","timeToRead":5,"wordCount":{"paragraphs":53,"sentences":55,"words":273},"fields":{"slug":"/qian-duan-dai-ma-yi-chang-jian-kong/","relativePath":"2017/2017-03-9---qian-duan-dai-ma-yi-chang-jian-kong/index.md"},"excerpt":"最近在做 VImo 前端 Hybrid…","frontmatter":{"title":"前端代码异常监控模块设计","date":"09 Mar 2017","tags":["前端监控"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/Vimo-jie-shao/","prev":"/qian-duan-dai-ma-yi-chang-jian-kong/","next":"/lie-feng-qiu-de-di-qian-duan-ji-neng-nai/"}},"staticQueryHashes":["3240721340","63159454"]}