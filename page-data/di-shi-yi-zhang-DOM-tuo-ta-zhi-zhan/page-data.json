{"componentChunkName":"component---src-templates-blog-post-js","path":"/di-shi-yi-zhang-DOM-tuo-ta-zhi-zhan/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<h3 id=\"1-dom-选择符-api\" style=\"position:relative;\"><a href=\"#1-dom-%E9%80%89%E6%8B%A9%E7%AC%A6-api\" aria-label=\"1 dom 选择符 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DOM 选择符 API</h3>\n<p>根据 <strong>CSS 选择符</strong> 选择与某个模式匹配的 DOM 元素.</p>\n<ul>\n<li><code class=\"language-text\">querySelector()</code></li>\n</ul>\n<p>IE8+, 返回第一个匹配的 Node</p>\n<ul>\n<li><code class=\"language-text\">querySelectorAll()</code></li>\n</ul>\n<p>IE8+, 返回 NodeList</p>\n<ul>\n<li><code class=\"language-text\">matchesSelector()</code></li>\n</ul>\n<p>IE9+, 如果调用元素与该选择符匹配，返回 true；否则，返回 false。</p>\n<p>这个 API 并未全部支持, 可用下面方式使用:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">matchesSelector</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> selector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>matchesSelector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">matchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>msMatchesSelector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">msMatchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>mozMatchesSelector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">mozMatchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>webkitMatchesSelector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">webkitMatchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not supported.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">matchesSelector</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> <span class=\"token string\">\"body.page1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//执行操作</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"2-elementnode-类型-node-查询增强-api\" style=\"position:relative;\"><a href=\"#2-elementnode-%E7%B1%BB%E5%9E%8B-node-%E6%9F%A5%E8%AF%A2%E5%A2%9E%E5%BC%BA-api\" aria-label=\"2 elementnode 类型 node 查询增强 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ElementNode 类型 Node 查询增强 API</h3>\n<ul>\n<li>childElementCount：返回子元素（不包括文本节点和注释）的个数。</li>\n<li>firstElementChild：指向第一个子元素；firstChild 的元素版。</li>\n<li>lastElementChild：指向最后一个子元素；lastChild 的元素版。</li>\n<li>previousElementSibling：指向前一个同辈元素；previousSibling 的元素版。</li>\n<li>nextElementSibling：指向后一个同辈元素；nextSibling 的元素版。</li>\n</ul>\n<p>支持情况: IE 9+</p>\n<h3 id=\"3-html5-中操作code-classlanguage-textclasscode属性的方法和传统方法的对比\" style=\"position:relative;\"><a href=\"#3-html5-%E4%B8%AD%E6%93%8D%E4%BD%9Ccode-classlanguage-textclasscode%E5%B1%9E%E6%80%A7%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E4%BC%A0%E7%BB%9F%E6%96%B9%E6%B3%95%E7%9A%84%E5%AF%B9%E6%AF%94\" aria-label=\"3 html5 中操作code classlanguage textclasscode属性的方法和传统方法的对比 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. HTML5 中操作<code class=\"language-text\">class</code>属性的方法和传统方法的对比?</h3>\n<ul>\n<li>传统方法使用<code class=\"language-text\">className</code>属性对字符串的处理来更改 class:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//删除\"user\"类</span>\n\n<span class=\"token comment\">//首先，取得类名字符串并拆分成数组</span>\n<span class=\"token keyword\">var</span> classNames <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\s+/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//找到要删的类名 var pos = -1, i, len;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> classNames<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>classNames<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pos <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//删除类名</span>\nclassNames<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//把剩下的类名拼成字符串并重新设置</span>\ndiv<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> classNames<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>HTML5 使用<code class=\"language-text\">classList</code>属性, Firefox 3.6+和 Chrome</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//删除\"disabled\"类</span>\ndiv<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//添加\"current\"类</span>\ndiv<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"current\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//切换\"user\"类</span>\ndiv<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//确定元素中是否包含既定的类名</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//执行操作</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//迭代类名</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"4-焦点管理\" style=\"position:relative;\"><a href=\"#4-%E7%84%A6%E7%82%B9%E7%AE%A1%E7%90%86\" aria-label=\"4 焦点管理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 焦点管理</h3>\n<ul>\n<li><code class=\"language-text\">document.activeElement()</code>: 始终会引用 DOM 中当前获得了焦点的元素</li>\n<li><code class=\"language-text\">document.hasFocus()</code>: 用于确定文档是否获得了焦点</li>\n</ul>\n<h3 id=\"5-htmldocument-的变化\" style=\"position:relative;\"><a href=\"#5-htmldocument-%E7%9A%84%E5%8F%98%E5%8C%96\" aria-label=\"5 htmldocument 的变化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. HTMLDocument 的变化</h3>\n<h4 id=\"documentreadystate\" style=\"position:relative;\"><a href=\"#documentreadystate\" aria-label=\"documentreadystate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>document.readyState</h4>\n<p>通过它来实现一个指示文档已经加载完成的指示器, 支持情况: IE4+</p>\n<ul>\n<li>loading，正在加载文档；</li>\n<li>complete，已经加载完文档。</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">docReady</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n    document<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token string\">\"complete\"</span> <span class=\"token operator\">||</span>\n    document<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token string\">\"interactive\"</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> completed<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> completed<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* istanbul ignore next */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">completed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> completed<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> completed<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"documentcompatmode\" style=\"position:relative;\"><a href=\"#documentcompatmode\" aria-label=\"documentcompatmode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>document.compatMode</h4>\n<ul>\n<li>标准模式(CSS1Compat), 比如 doctype 设置为<code class=\"language-text\">&lt;!DOCTYPE html&gt;</code>时</li>\n<li>混杂模式(BackCompat, 向后兼容模式)的 doctype 可以是:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">HTML</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>判断代码:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>compatMode <span class=\"token operator\">==</span> <span class=\"token string\">\"CSS1Compat\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标准模式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \"BackCompat\"</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"混杂模式, 向后兼容模式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"documenthead\" style=\"position:relative;\"><a href=\"#documenthead\" aria-label=\"documenthead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>document.head</h4>\n<p>作为对 document.body 引用文档的<body>元素的补充，HTML5 新增了 document.head 属性， 引用文档的<head>元素</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>head <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"6-html5-中自定义数据属性的应用-如何兼容不支持浏览器\" style=\"position:relative;\"><a href=\"#6-html5-%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E5%B1%9E%E6%80%A7%E7%9A%84%E5%BA%94%E7%94%A8-%E5%A6%82%E4%BD%95%E5%85%BC%E5%AE%B9%E4%B8%8D%E6%94%AF%E6%8C%81%E6%B5%8F%E8%A7%88%E5%99%A8\" aria-label=\"6 html5 中自定义数据属性的应用 如何兼容不支持浏览器 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. HTML5 中自定义数据属性的应用? 如何兼容不支持浏览器?</h3>\n<ul>\n<li>用于元素渲染外的信息, 需要添加”data-”头, 但是获取时不需要”data”.</li>\n<li>用于<strong>跟踪连接/混搭引用/插件参数/埋点数据</strong>等应用</li>\n<li>Firefox 6+和 Chrome</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myDiv<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-appId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>12345<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-myname</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Nicholas<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//本例中使用的方法仅用于演示</span>\n<span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//取得自定义属性的值</span>\n<span class=\"token keyword\">var</span> appId <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>appId<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myName <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>myname<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//设置值</span>\ndiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>appId <span class=\"token operator\">=</span> <span class=\"token number\">23456</span><span class=\"token punctuation\">;</span>\ndiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>myname <span class=\"token operator\">=</span> <span class=\"token string\">\"Michael\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如果不兼容, 可参考下面代码:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myDiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myDiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>attribute <span class=\"token operator\">=</span> <span class=\"token string\">\"valueXX\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置自定义属性</span>\n  <span class=\"token keyword\">var</span> theValue <span class=\"token operator\">=</span> myDiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>attribute<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取自定义属性</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  myDiv<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-attribute\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"valueXX\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置自定义属性</span>\n  <span class=\"token keyword\">var</span> theValue <span class=\"token operator\">=</span> myDiv<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-attribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取自定义属性</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"7-插入标记字符串的方式有哪些及优势和问题\" style=\"position:relative;\"><a href=\"#7-%E6%8F%92%E5%85%A5%E6%A0%87%E8%AE%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8F%8A%E4%BC%98%E5%8A%BF%E5%92%8C%E9%97%AE%E9%A2%98\" aria-label=\"7 插入标记字符串的方式有哪些及优势和问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 插入标记字符串的方式有哪些及优势和问题?</h3>\n<p>传统的方式是通过创建一个个节点再拼接插入, 量大会比较麻烦, 有三种形式可以使用:</p>\n<h4 id=\"innerhtml\" style=\"position:relative;\"><a href=\"#innerhtml\" aria-label=\"innerhtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>innerHTML</h4>\n<ul>\n<li>读模式: 获取指定节点的<strong>所有子节点对应的 HTML 标记字符串</strong>.</li>\n<li>写模式: 根据指定的值创建新的 DOM 树, 然后在用这个 DOM 数完全<strong>替换调用元素原先的所有子节点</strong></li>\n<li><strong>不要指望所有浏览器返回的值时是一致的</strong></li>\n<li><strong>写和读两次的值也可能不一样</strong>, 原因是返回的字符串是根据原始 HTML 字符串创建的 DOM 数经过序列化后的结果</li>\n<li>插入<code class=\"language-text\">&lt;script&gt;</code> 时可能会有些限制, 在大多数浏览器中，通过 innerHTML 插入 <code class=\"language-text\">&lt;script&gt;</code> 元素并不会执行其中的脚本(<strong>IE8 及更早版本是唯一能在这种情况下执行脚本的浏览器</strong>，但必须满足一 些条件。解决办法就是在插入的 script 前再插入一个有作用域的元素, 比如文本/空字符的 div/<strong>隐藏的 input(首选)</strong>等).</li>\n<li>插入脚本还是使用别的方式吧</li>\n<li>插入<code class=\"language-text\">&lt;style&gt;</code>大多数浏览器都支持, IE8 及更早版本的 Hack 这里不做说明, 代码如下:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;style type=\"text/css\">body {background-color: red; }&lt;/style>'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"outerhtml\" style=\"position:relative;\"><a href=\"#outerhtml\" aria-label=\"outerhtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>outerHTML</h4>\n<p>用法和 innerHTML 类似, 不过是所有结果都包含自身.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 使用 outerHTML 属性以下面这种方式设置值：</span>\ndiv<span class=\"token punctuation\">.</span>outerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;p>This is a paragraph.&lt;/p>\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 这行代码完成的操作与下面这些 DOM 脚本代码一样：</span>\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a paragraph.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndiv<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">replaceChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> div<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"insertadjacenthtml\" style=\"position:relative;\"><a href=\"#insertadjacenthtml\" aria-label=\"insertadjacenthtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>insertAdjacentHTML()</h4>\n<p>四个插入位置的字符串说明如下代码所示, 字符串说明会比较难懂:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//作为前一个同辈元素插入</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforebegin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;p>Hello world!&lt;/p>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//作为第一个子元素插入</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"afterbegin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;p>Hello world!&lt;/p>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//作为最后一个子元素插入</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;p>Hello world!&lt;/p>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//作为后一个同辈元素插入</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"afterend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;p>Hello world!&lt;/p>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"内存与性能问题注意\" style=\"position:relative;\"><a href=\"#%E5%86%85%E5%AD%98%E4%B8%8E%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98%E6%B3%A8%E6%84%8F\" aria-label=\"内存与性能问题注意 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内存与性能问题注意</h4>\n<ul>\n<li>使用上述 API 比单独创建元素要高效的多, 建议使用</li>\n<li>删除元素前<strong>别忘记解绑事件监听</strong>, 否则出现内存泄露</li>\n<li>这是 innerHTML 或者 outerHTML 会创建 HTML 解析器, 一次频繁创建会影响性能, <strong>建议控制调用上述三个 API 的次数</strong>, 比如缓存字符串中间结果</li>\n</ul>\n<h3 id=\"8-scrollintoview方法\" style=\"position:relative;\"><a href=\"#8-scrollintoview%E6%96%B9%E6%B3%95\" aria-label=\"8 scrollintoview方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. scrollIntoView()方法</h3>\n<h3 id=\"8-在移动端当键盘遮挡输入框该如何处理\" style=\"position:relative;\"><a href=\"#8-%E5%9C%A8%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BD%93%E9%94%AE%E7%9B%98%E9%81%AE%E6%8C%A1%E8%BE%93%E5%85%A5%E6%A1%86%E8%AF%A5%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86\" aria-label=\"8 在移动端当键盘遮挡输入框该如何处理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 在移动端当键盘遮挡输入框该如何处理?</h3>\n<blockquote>\n<p>文章来源: <a href=\"https://github.com/justjavac/the-front-end-knowledge-you-may-dont-know/issues/3\" target=\"_target\" rel=\"nofollow\">https://github.com/justjavac/the-front-end-knowledge-you-may-dont-know/issues/3</a></p>\n</blockquote>\n<p>使用<code class=\"language-text\">Element.scrollIntoViewIfNeeded(opt_center)</code>, 就是在需要的时候将元素滚动到可视区域。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//让元素可见, 窗口滚动 之后会让调用元素的顶部与视口顶部尽可能平齐</span>\ndocument<span class=\"token punctuation\">.</span>forms<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">scrollIntoView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>forms<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">scrollIntoView</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Safari 和 Chrome 实现了这个方法</span>\ndocument<span class=\"token punctuation\">.</span>forms<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">scrollIntoViewIfNeeded</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 只是让元素可见</span>\ndocument<span class=\"token punctuation\">.</span>forms<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">scrollIntoView</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","timeToRead":8,"wordCount":{"paragraphs":61,"sentences":62,"words":224},"fields":{"slug":"/di-shi-yi-zhang-DOM-tuo-ta-zhi-zhan/","relativePath":"2018/2018-03-04---di-shi-yi-zhang-DOM-tuo-ta-zhi-zhan/index.md"},"excerpt":"1. DOM 选择符 API 根据 CSS 选择符 选择与某个模式匹配的 DOM 元素.  IE8+, 返回第一个匹配的 Node  IE8+, 返回 NodeList  IE…","frontmatter":{"title":"第十一章 DOM拓展","date":"04 Mar 2018","tags":["JS高程"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<h3 id=\"1-对-dom-树形结构的理解\" style=\"position:relative;\"><a href=\"#1-%E5%AF%B9-dom-%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E7%9A%84%E7%90%86%E8%A7%A3\" aria-label=\"1 对 dom 树形结构的理解 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 对 DOM 树形结构的理解?</h3>\n<h4 id=\"dom-解释\" style=\"position:relative;\"><a href=\"#dom-%E8%A7%A3%E9%87%8A\" aria-label=\"dom 解释 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 解释</h4>\n<p><strong>DOM(文档对象模型)</strong>, 是针对类 HTML 层次化节点树<strong>操作</strong>的一个<strong>API(应用程序编程接口)</strong>集合. 用于更改底层文档及外观结构.</p>\n<h4 id=\"根节点\" style=\"position:relative;\"><a href=\"#%E6%A0%B9%E8%8A%82%E7%82%B9\" aria-label=\"根节点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>根节点</h4>\n<p>树中的节点可以由多种<strong>Node 类型</strong>组成, 根节点称之为<strong>文档元素</strong>(传说的<code class=\"language-text\">document</code>), 即<code class=\"language-text\">&lt;html&gt;&lt;/html&gt;</code>.</p>\n<h4 id=\"node-类型\" style=\"position:relative;\"><a href=\"#node-%E7%B1%BB%E5%9E%8B\" aria-label=\"node 类型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node 类型</h4>\n<p>类型可以是:</p>\n<ul>\n<li><strong>Node.ELEMENT_NODE(1)</strong>；子元素</li>\n<li>Node.ATTRIBUTE_NODE(2)；</li>\n<li><strong>Node.TEXT_NODE(3)</strong>； 文本</li>\n<li>Node.CDATA<em>SECTION</em>NODE(4)；</li>\n<li>Node.ENTITY<em>REFERENCE</em>NODE(5)；</li>\n<li>Node.ENTITY_NODE(6)；</li>\n<li>Node.PROCESSING<em>INSTRUCTION</em>NODE(7)；</li>\n<li><strong>Node.COMMENT_NODE(8)</strong>；注释</li>\n<li><strong>Node.DOCUMENT_NODE(9)</strong>；表示整个 HTML 页面, document</li>\n<li>Node.DOCUMENT<em>TYPE</em>NODE(10)；</li>\n<li>Node.DOCUMENT<em>FRAGMENT</em>NODE(11)；</li>\n<li>Node.NOTATION_NODE(12)</li>\n</ul>\n<p>每个类型所具有的 API 及同名 API 的含义不同, 使用前先判断下.</p>\n<p>此外, <code class=\"language-text\">NodeList</code>类型是类数组对象, 如果要像数组使用, 需要转化一下:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"node-查找-api\" style=\"position:relative;\"><a href=\"#node-%E6%9F%A5%E6%89%BE-api\" aria-label=\"node 查找 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node 查找 API</h4>\n<p>关于 Node 前后的关系属性需要知道的名称有:</p>\n<ul>\n<li><code class=\"language-text\">firstChild()</code></li>\n<li><code class=\"language-text\">lastChild()</code></li>\n<li><code class=\"language-text\">parentNode()</code></li>\n<li><code class=\"language-text\">childNodes()</code> (注意<code class=\"language-text\">hanChildNodes()</code>函数判断是否有子节点)</li>\n<li><code class=\"language-text\">nextSlibing()</code></li>\n<li><code class=\"language-text\">previousSlibling()</code></li>\n</ul>\n<h4 id=\"node-操作-api\" style=\"position:relative;\"><a href=\"#node-%E6%93%8D%E4%BD%9C-api\" aria-label=\"node 操作 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node 操作 API</h4>\n<ul>\n<li><code class=\"language-text\">appendChild()</code> 向 childNodes 列表的末尾添加一个节点, 更新完毕返回新增节点</li>\n<li><code class=\"language-text\">insertBefore()</code> 在某个特定的位置上插入节点</li>\n<li><code class=\"language-text\">replaceChild()</code></li>\n<li><code class=\"language-text\">removeChild()</code></li>\n<li><code class=\"language-text\">cloneNode()</code> 建议复制前先移除上面的事件绑定, IE 有问题</li>\n</ul>\n<h3 id=\"2-code-classlanguage-textltdoctypegtcode是什么含义-不写或写错会有什么后果\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-textltdoctypegtcode%E6%98%AF%E4%BB%80%E4%B9%88%E5%90%AB%E4%B9%89-%E4%B8%8D%E5%86%99%E6%88%96%E5%86%99%E9%94%99%E4%BC%9A%E6%9C%89%E4%BB%80%E4%B9%88%E5%90%8E%E6%9E%9C\" aria-label=\"2 code classlanguage textltdoctypegtcode是什么含义 不写或写错会有什么后果 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">&lt;!DOCTYPE&gt;</code>是什么含义, 不写或写错会有什么后果?</h3>\n<p>用来声明文档类型, 通过<code class=\"language-text\">document.doctype</code>获得. 用于告诉浏览器当前的文档所使用标记(标签)版本, <strong>影响最终的页面呈现效果</strong>!</p>\n<p>如果页面没写着行说明, 则浏览器解析页面会出现怪异行为, 比如盒模型/size 解析/内联元素尺寸/图片对齐方式等.</p>\n<h3 id=\"3-如何获取对-code-classlanguage-textbodycode--code-classlanguage-texthtmlcode-node-节点的引用\" style=\"position:relative;\"><a href=\"#3-%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AF%B9-code-classlanguage-textbodycode--code-classlanguage-texthtmlcode-node-%E8%8A%82%E7%82%B9%E7%9A%84%E5%BC%95%E7%94%A8\" aria-label=\"3 如何获取对 code classlanguage textbodycode  code classlanguage texthtmlcode node 节点的引用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 如何获取对 <code class=\"language-text\">body</code> / <code class=\"language-text\">html</code> Node 节点的引用?</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 同理</span>\n<span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"4-在code-classlanguage-textltdoctypegtcode前或者code-classlanguage-textlthtmlgtcode前后写注释会有什么影响\" style=\"position:relative;\"><a href=\"#4-%E5%9C%A8code-classlanguage-textltdoctypegtcode%E5%89%8D%E6%88%96%E8%80%85code-classlanguage-textlthtmlgtcode%E5%89%8D%E5%90%8E%E5%86%99%E6%B3%A8%E9%87%8A%E4%BC%9A%E6%9C%89%E4%BB%80%E4%B9%88%E5%BD%B1%E5%93%8D\" aria-label=\"4 在code classlanguage textltdoctypegtcode前或者code classlanguage textlthtmlgtcode前后写注释会有什么影响 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 在<code class=\"language-text\">&lt;!DOCTYPE&gt;</code>前或者<code class=\"language-text\">&lt;html&gt;</code>前后写注释会有什么影响?</h3>\n<p>不同浏览器间对注释的解释不一致, 导致了位于<html>元素外部的注释没有什么用处.</p>\n<p>另外, document 属性是只读的, 在其前后插入 Node 不可行.</p>\n<h3 id=\"5-不同域或者子域因为跨域安全限制-不能-js-直接通信-怎么破\" style=\"position:relative;\"><a href=\"#5-%E4%B8%8D%E5%90%8C%E5%9F%9F%E6%88%96%E8%80%85%E5%AD%90%E5%9F%9F%E5%9B%A0%E4%B8%BA%E8%B7%A8%E5%9F%9F%E5%AE%89%E5%85%A8%E9%99%90%E5%88%B6-%E4%B8%8D%E8%83%BD-js-%E7%9B%B4%E6%8E%A5%E9%80%9A%E4%BF%A1-%E6%80%8E%E4%B9%88%E7%A0%B4\" aria-label=\"5 不同域或者子域因为跨域安全限制 不能 js 直接通信 怎么破 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 不同域或者子域因为跨域安全限制, 不能 JS 直接通信, 怎么破?</h3>\n<ul>\n<li>不同域无法破解</li>\n<li>相同子域可修改<code class=\"language-text\">document.domain</code>解决</li>\n</ul>\n<p>比如: p2p.wrox.com 和 wrox.com js 通信, 可在 p2p.wrox.com 的网页中设置:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>domain <span class=\"token operator\">=</span> <span class=\"token string\">\"wrox.com\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>之后即可通讯, 如果 wrox.com -> p2p.wrox.com 这样是不行的.</p>\n<h3 id=\"6-code-classlanguage-textdocumentwritecode在文档加载结束前后使用有什么差异\" style=\"position:relative;\"><a href=\"#6-code-classlanguage-textdocumentwritecode%E5%9C%A8%E6%96%87%E6%A1%A3%E5%8A%A0%E8%BD%BD%E7%BB%93%E6%9D%9F%E5%89%8D%E5%90%8E%E4%BD%BF%E7%94%A8%E6%9C%89%E4%BB%80%E4%B9%88%E5%B7%AE%E5%BC%82\" aria-label=\"6 code classlanguage textdocumentwritecode在文档加载结束前后使用有什么差异 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. <code class=\"language-text\">document.write()</code>在文档加载结束前后使用有什么差异?</h3>\n<ul>\n<li>文档加载结束前: 会在输出流中写入内部文本, 可<strong>用于动态包含外部资源</strong></li>\n<li>文档加载结束后: 会用内部文本重写整个页面</li>\n</ul>\n<h3 id=\"7-这段代码的问题是\" style=\"position:relative;\"><a href=\"#7-%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98%E6%98%AF\" aria-label=\"7 这段代码的问题是 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 这段代码的问题是?</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>document.write() Example 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n\tdocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;script type=\\\"text/javascript\\\" src=\\\"file.js\\\">\"</span>\n\t<span class=\"token operator\">+</span> \"</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\");\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>代码到这里<code class=\"language-text\">+ &quot;&lt;/script&gt;&quot;);</code>会终止, 页面最后一行显示<code class=\"language-text\">&quot;);</code>文本.</p>\n<p>解决办法是将<code class=\"language-text\">+ &quot;&lt;/script&gt;&quot;);</code>替换为<code class=\"language-text\">+ &quot;&lt;\\/script&gt;&quot;);</code></p>\n<h3 id=\"8-动态插入脚本的一般过程\" style=\"position:relative;\"><a href=\"#8-%E5%8A%A8%E6%80%81%E6%8F%92%E5%85%A5%E8%84%9A%E6%9C%AC%E7%9A%84%E4%B8%80%E8%88%AC%E8%BF%87%E7%A8%8B\" aria-label=\"8 动态插入脚本的一般过程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 动态插入脚本的一般过程?</h3>\n<h4 id=\"插入外部文件\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E5%85%A5%E5%A4%96%E9%83%A8%E6%96%87%E4%BB%B6\" aria-label=\"插入外部文件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插入外部文件</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadScript</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"直接插入代码\" style=\"position:relative;\"><a href=\"#%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81\" aria-label=\"直接插入代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>直接插入代码</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadScriptString</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    script<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    script<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"9-插入样式的一般过程\" style=\"position:relative;\"><a href=\"#9-%E6%8F%92%E5%85%A5%E6%A0%B7%E5%BC%8F%E7%9A%84%E4%B8%80%E8%88%AC%E8%BF%87%E7%A8%8B\" aria-label=\"9 插入样式的一般过程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 插入样式的一般过程?</h3>\n<p><strong>!!样式插入到 head 中!!</strong></p>\n<h4 id=\"插入外部文件-1\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E5%85%A5%E5%A4%96%E9%83%A8%E6%96%87%E4%BB%B6-1\" aria-label=\"插入外部文件 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插入外部文件</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadStyles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>rel <span class=\"token operator\">=</span> <span class=\"token string\">\"stylesheet\"</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/css\"</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"直接插入代码-1\" style=\"position:relative;\"><a href=\"#%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81-1\" aria-label=\"直接插入代码 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>直接插入代码</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadStyleString</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">css</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  style<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/css\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">.</span>styleSheet<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">=</span> css<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"10-nodelist-特性理解\" style=\"position:relative;\"><a href=\"#10-nodelist-%E7%89%B9%E6%80%A7%E7%90%86%E8%A7%A3\" aria-label=\"10 nodelist 特性理解 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. NodeList 特性理解?</h3>\n<ul>\n<li><strong>动态</strong>的集合, 当文档更新后再次获取 NodeList 能拿到更新结果</li>\n<li>操作 DOM 很耗时, <strong>应该尽量减少访问 NodeList 的次数</strong>. 因为每次访问 NodeList，都会运行一次基于文档的查询.</li>\n</ul>","timeToRead":7,"wordCount":{"paragraphs":63,"sentences":67,"words":181},"fields":{"slug":"/di-shi-zhang-DOM/","relativePath":"2018/2018-03-04---di-shi-zhang-DOM/index.md"},"excerpt":"1. 对 DOM 树形结构的理解? DOM 解释 DOM(文档对象模型), 是针对类 HTML 层次化节点树操作的一个API(应用程序编程接口)集合. 用于更改底层文档及外观结构. 根节点 树中的节点可以由多种Node…","frontmatter":{"title":"第十章 DOM","date":"04 Mar 2018","tags":["JS高程"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<h3 id=\"1-为什么code-classlanguage-textelestylecode属性获取到的样式信息不全\" style=\"position:relative;\"><a href=\"#1-%E4%B8%BA%E4%BB%80%E4%B9%88code-classlanguage-textelestylecode%E5%B1%9E%E6%80%A7%E8%8E%B7%E5%8F%96%E5%88%B0%E7%9A%84%E6%A0%B7%E5%BC%8F%E4%BF%A1%E6%81%AF%E4%B8%8D%E5%85%A8\" aria-label=\"1 为什么code classlanguage textelestylecode属性获取到的样式信息不全 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 为什么<code class=\"language-text\">ele.style</code>属性获取到的样式信息不全?</h3>\n<p>这个 style 对象 是 CSSStyleDeclaration 的实例，包含着<strong>通过 HTML 的 style 特性指定</strong>的所有样式信息，但<strong>不包含</strong>与<strong>外部</strong>样式表或<strong>嵌入</strong>样式表经层叠而来的样式。</p>\n<blockquote>\n<p>不同方式定义的样式(<code class=\"language-text\">&lt;link&gt;</code>/<code class=\"language-text\">&lt;script&gt;</code>/在元素上定义)是有差异的!!!</p>\n</blockquote>\n<p>使用<code class=\"language-text\">getComputedStyle()</code>可以获取包含当前元素的<strong>所有计算的样式</strong>. 方法接收两个参数: 要取得计算样式的元素和一个伪元素字符串（例如”:after”）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> myDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> computedStyle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>defaultView<span class=\"token punctuation\">.</span><span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>myDiv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>注意<strong>综合属性</strong>的返回值, 比如 border</li>\n<li>无论在哪个浏览器中，最重要的一条是要记住所有计算的样式都是<strong>只读</strong>的</li>\n</ul>\n<h3 id=\"2-getboundingclientrect获取元素尺寸\" style=\"position:relative;\"><a href=\"#2-getboundingclientrect%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E5%B0%BA%E5%AF%B8\" aria-label=\"2 getboundingclientrect获取元素尺寸 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. getBoundingClientRect()获取元素尺寸</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> scrollTop <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> scrollLeft <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollLeft<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>getBoundingClientRect<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> arguments<span class=\"token punctuation\">.</span>callee<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">!=</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      temp<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">=</span> <span class=\"token string\">\"position:absolute;left:0;top:0;\"</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      arguments<span class=\"token punctuation\">.</span>callee<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> scrollTop<span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      temp <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> rect <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> offset <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">.</span>callee<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      left<span class=\"token operator\">:</span> rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">,</span>\n      right<span class=\"token operator\">:</span> rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">,</span>\n      top<span class=\"token operator\">:</span> rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">,</span>\n      bottom<span class=\"token operator\">:</span> rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> offset\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> actualLeft <span class=\"token operator\">=</span> <span class=\"token function\">getElementLeft</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> actualTop <span class=\"token operator\">=</span> <span class=\"token function\">getElementTop</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      left<span class=\"token operator\">:</span> actualLeft <span class=\"token operator\">-</span> scrollLeft<span class=\"token punctuation\">,</span>\n      right<span class=\"token operator\">:</span> actualLeft <span class=\"token operator\">+</span> element<span class=\"token punctuation\">.</span>offsetWidth <span class=\"token operator\">-</span> scrollLeft<span class=\"token punctuation\">,</span>\n      top<span class=\"token operator\">:</span> actualTop <span class=\"token operator\">-</span> scrollTop<span class=\"token punctuation\">,</span>\n      bottom<span class=\"token operator\">:</span> actualTop <span class=\"token operator\">+</span> element<span class=\"token punctuation\">.</span>offsetHeight <span class=\"token operator\">-</span> scrollTop\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"3-dom-遍历接口\" style=\"position:relative;\"><a href=\"#3-dom-%E9%81%8D%E5%8E%86%E6%8E%A5%E5%8F%A3\" aria-label=\"3 dom 遍历接口 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. DOM 遍历接口</h3>\n<p>实际使用比较少, 可能会在 VDOM 中使用. IE9+</p>\n<h3 id=\"4-如何获取页面滚动高度\" style=\"position:relative;\"><a href=\"#4-%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E9%AB%98%E5%BA%A6\" aria-label=\"4 如何获取页面滚动高度 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 如何获取页面滚动高度?</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> scrollTop <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>scrollY<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">document.documentElement.scrollTop</code>的兼容性不太好.</p>","timeToRead":2,"wordCount":{"paragraphs":11,"sentences":13,"words":43},"fields":{"slug":"/di-shi-er-zhang-DOM2-he-huo-hu-DOM3/","relativePath":"2018/2018-03-05---di-shi-er-zhang-DOM2-he-huo-hu-DOM3/index.md"},"excerpt":"1. 为什么属性获取到的样式信息不全? 这个 style 对象 是 CSSStyleDeclaration 的实例，包含着通过 HTML 的 style…","frontmatter":{"title":"第十二章 DOM2和DOM3","date":"05 Mar 2018","tags":["JS高程"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/di-shi-yi-zhang-DOM-tuo-ta-zhi-zhan/","prev":"/di-shi-er-zhang-DOM2-he-huo-hu-DOM3/","next":"/di-shi-zhang-DOM/"}},"staticQueryHashes":["3240721340","63159454"]}