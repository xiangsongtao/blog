{"componentChunkName":"component---src-templates-blog-post-js","path":"/guan-yu-zu-jian-ku-de-di-zhu-ti-ding-zhi/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.png","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.png","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<h3 id=\"简述\" style=\"position:relative;\"><a href=\"#%E7%AE%80%E8%BF%B0\" aria-label=\"简述 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>简述</h3>\n<p>这篇博文主要讲解<strong>前端组件库主题定制</strong>相关内容，只限于<strong>Scss/Sass、Less</strong>两种样式预处理语言，这两种语言能够简化 CSS 的工作流，使得开发者维护开发样式更得心应手，便于应对复杂的样式需求。</p>\n<p>对组件封装性好的库而我比较熟悉的有两个，React 和 Vue，这里我对这两个前端库封装的组件进行说明，涉及到的组件库包括：<a href=\"http://element-cn.eleme.io\" target=\"_target\" rel=\"nofollow\">element-ui</a>、<a href=\"https://www.iviewui.com/\" target=\"_target\" rel=\"nofollow\">iview</a>、<a href=\"https://ant.design\" target=\"_target\" rel=\"nofollow\">antd</a>、<a href=\"https://github.com/ionic-team/ionic\" target=\"_target\" rel=\"nofollow\">ionic</a>。</p>\n<h3 id=\"主题定制分类\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6%E5%88%86%E7%B1%BB\" aria-label=\"主题定制分类 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主题定制分类</h3>\n<p>组件库的编写者一般都会为开发者设计一些主题样式更换方案，主要是这两类：</p>\n<ol>\n<li>复写全部主题样式，一次性引入</li>\n<li>通过预处理器注入主题变量</li>\n</ol>\n<p>这里对这两类进行说明。</p>\n<h4 id=\"1-复写全部主题样式\" style=\"position:relative;\"><a href=\"#1-%E5%A4%8D%E5%86%99%E5%85%A8%E9%83%A8%E4%B8%BB%E9%A2%98%E6%A0%B7%E5%BC%8F\" aria-label=\"1 复写全部主题样式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 复写全部主题样式</h4>\n<h5 id=\"scss\" style=\"position:relative;\"><a href=\"#scss\" aria-label=\"scss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SCSS</h5>\n<p>这个在 PC 端比较常见，比如：<a href=\"http://element-cn.eleme.io/#/zh-CN/component/custom-theme\" target=\"_target\" rel=\"nofollow\">element-ui</a>中的第二个方案，虽然说是改变 SCSS 变量，但还是复写了全部主题样式。项目初始时加载全部组件的样式，这个场景在 PC 端并没有太大的问题。但是从性能优化的角度，并不推荐。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">/* 改变主题色变量 */</span>\n<span class=\"token property\"><span class=\"token variable\">$--color-primary</span></span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* 改变 icon 字体路径变量，必需 */</span>\n<span class=\"token property\"><span class=\"token variable\">$--font-path</span></span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"../node_modules/element-ui/lib/theme-chalk/fonts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">@import</span> <span class=\"token string\">\"../node_modules/element-ui/packages/theme-chalk/src/index\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5 id=\"less\" style=\"position:relative;\"><a href=\"#less\" aria-label=\"less permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Less</h5>\n<p>此外，<a href=\"https://www.iviewui.com/docs/guide/theme\" target=\"_target\" rel=\"nofollow\">iview</a>使用 Less 作为预编译语言，给出的推荐主题定制方案全部都是复写全部主题样式的解决办法，和 element-ui 一致。</p>\n<div class=\"gatsby-highlight\" data-language=\"less\"><pre class=\"language-less\"><code class=\"language-less\"><span class=\"token variable\">@import</span> <span class=\"token string\">\"~iview/src/styles/index.less\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Here are the variables to cover, such as:</span>\n<span class=\"token variable\">@primary-color<span class=\"token punctuation\">:</span></span> #8c0776<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>因为 Less 和 Scss 变量作用域定义不一样，上面两个<code class=\"language-text\">@import</code>写法会有些不同，但都是一个意思。</p>\n</blockquote>\n<p>需要注意的是，这种方式已经载入了所有组件的样式，不需要也无法和按需加载插件<a href=\"https://www.npmjs.com/package/babel-plugin-import\" target=\"_target\" rel=\"nofollow\">babel-plugin-import</a>或<a href=\"https://www.npmjs.com/package/babel-plugin-component\" target=\"_target\" rel=\"nofollow\">babel-plugin-component</a>的 style 属性一起使用。</p>\n<h4 id=\"2-通过预处理器注入主题变量\" style=\"position:relative;\"><a href=\"#2-%E9%80%9A%E8%BF%87%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E6%B3%A8%E5%85%A5%E4%B8%BB%E9%A2%98%E5%8F%98%E9%87%8F\" aria-label=\"2 通过预处理器注入主题变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 通过预处理器注入主题变量</h4>\n<h5 id=\"less-1\" style=\"position:relative;\"><a href=\"#less-1\" aria-label=\"less 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Less</h5>\n<p>这里值得一提的是 Antd 组件库，这是我强烈推荐使用的组件库。它推荐使用<a href=\"https://ant.design/docs/react/customize-theme-cn\" target=\"_target\" rel=\"nofollow\">修改主题变量</a>的方式定制主题，使用了 Less 的 <a href=\"http://lesscss.org/usage/#using-less-in-the-browser-modify-variables\" target=\"_target\" rel=\"nofollow\"><strong>modifyVars</strong></a> 的方式来覆盖主题变量。比如将主题挂在<code class=\"language-text\">package.json</code>上：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"theme\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"primary-color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#1DA57A\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>这个方案之前在我做的项目中有使用，自己根据实现原理写逻辑代码不是很难。</p>\n<p>问题点是：每次修改变量都需要重启 dev 服务，刚开始对开发者不是很友好。当然，主题修改好后，并不是经常变动，这里可以原谅。</p>\n<h5 id=\"scss-1\" style=\"position:relative;\"><a href=\"#scss-1\" aria-label=\"scss 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SCSS</h5>\n<p>其实 SCSS 也能通过<strong>只修改主题变量</strong>的方式更改主题，这个是在读 IONIC 源码时发现的，<a href=\"https://github.com/ionic-team/ionic-app-scripts/blob/427e556460265da817a5975567ded2a00e5cb8bd/src/sass.ts#L137\" target=\"_target\" rel=\"nofollow\">源码位置</a>。它是通过<a href=\"https://github.com/sass/node-sass\" target=\"_target\" rel=\"nofollow\">node-sass</a>的<a href=\"https://github.com/sass/node-sass#data\" target=\"_target\" rel=\"nofollow\"><strong>options.data</strong></a>的方式覆盖主题。比如传入如下字符串：</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token string\">'@charset \"UTF-8\"; @import \"/xxx/xxx/project/to/theme/path/variables.scss\";'</span></code></pre></div>\n<p>构建时启用你定义的样式变量。我这里简单写了一个变量获取方式，<a href=\"https://github.com/vm-component/vimo/blob/master/examples/build/get-scss-variables.js\" target=\"_target\" rel=\"nofollow\">代码</a>。</p>\n<p>注意，这里需要你样式组件中的所有变量后都带上<code class=\"language-text\">!default</code>修饰，将生效等级降为最低。这里没有 Less 那样需要重启 dev-server 的问题，通过 webpack 构建，修改了引入的主题文件，项目将自动重构，较为方便。</p>\n<h3 id=\"总结\" style=\"position:relative;\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h3>\n<p>建议通过修改变量的方式来修改主题我认为是比较靠谱的，当主题与公司 UI 不符时，再使用样式复写的方式处理。</p>\n<blockquote>\n<p>个人还是比较喜欢 SCSS 的处理方式。</p>\n</blockquote>","timeToRead":4,"wordCount":{"paragraphs":27,"sentences":27,"words":130},"fields":{"slug":"/guan-yu-zu-jian-ku-de-di-zhu-ti-ding-zhi/","relativePath":"2017/2017-12-05---guan-yu-zu-jian-ku-de-di-zhu-ti-ding-zhi/index.md"},"excerpt":"简述 这篇博文主要讲解前端组件库主题定制相关内容，只限于Scss/Sass、Less两种样式预处理语言，这两种语言能够简化 CSS…","frontmatter":{"title":"关于组件库的主题定制","date":"05 Dec 2017","tags":["组件库","主题"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<blockquote>\n<p>文章总结的时间是 2017/11/20</p>\n</blockquote>\n<p>本文是为了梳理 Babel 配置及使用而整理，因为看过使用 Babel 配置项目和文章，存在项目插件使用混乱、文章各种照搬、插件使用听风是雨、插件升级文章内容不再适用的问题。这里就目前最新使用的配置组合进行整理，涉及的插件包括以下三个：</p>\n<ul>\n<li>@babel/preset-env(^7.0.0-beta.32)</li>\n<li>@babel/preset-stage-x(7.0.0-beta.32), x-0,1,2,3</li>\n<li>@babel/polyfill(^7.0.0-beta.32)</li>\n</ul>\n<h2 id=\"babelpreset-env\" style=\"position:relative;\"><a href=\"#babelpreset-env\" aria-label=\"babelpreset env permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@babel/preset-env</h2>\n<h3 id=\"特性\" style=\"position:relative;\"><a href=\"#%E7%89%B9%E6%80%A7\" aria-label=\"特性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>特性</h3>\n<h4 id=\"替换之前所有code-classlanguage-textbabel-presets-es20xxcode插件\" style=\"position:relative;\"><a href=\"#%E6%9B%BF%E6%8D%A2%E4%B9%8B%E5%89%8D%E6%89%80%E6%9C%89code-classlanguage-textbabel-presets-es20xxcode%E6%8F%92%E4%BB%B6\" aria-label=\"替换之前所有code classlanguage textbabel presets es20xxcode插件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>替换之前所有<code class=\"language-text\">babel-presets-es20xx</code>插件</h4>\n<blockquote>\n<p>A Babel preset that compiles ES2015+ down to ES5 by automatically determining the Babel plugins and polyfills you need based on your targeted browser or runtime environments.</p>\n</blockquote>\n<p>也就是说，这是一个能根据运行环境为代码做相应的编译，<code class=\"language-text\">@babel/preset-env</code>的推出是为了解解决个性化输出目标代码的问题，通过<code class=\"language-text\">browserslist</code>语法解析需要支持的目标环境，根据环境将源代码转义到目标代码，可以实现代码精准适配。</p>\n<p>此外，<strong><code class=\"language-text\">@babel/preset-env</code>不包含<code class=\"language-text\">state-x</code>一些列插件</strong>，只支持最新推出版本的 JavaScript 语法（state-4），关于<code class=\"language-text\">state-x</code>后面会介绍。</p>\n<p>更进一步说明，请参考<a href=\"http://2ality.com/2017/02/babel-preset-env.html\" target=\"_target\" rel=\"nofollow\">Dr. Axel Rauschmayer</a>的介绍。这个插件对特殊平台的开发有很大帮助，比如：Electron、大屏、移动端(只考虑 webkit)等。</p>\n<h4 id=\"替换code-classlanguage-textbabelplugin-transform-runtimecode的使用\" style=\"position:relative;\"><a href=\"#%E6%9B%BF%E6%8D%A2code-classlanguage-textbabelplugin-transform-runtimecode%E7%9A%84%E4%BD%BF%E7%94%A8\" aria-label=\"替换code classlanguage textbabelplugin transform runtimecode的使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>替换<code class=\"language-text\">@babel/plugin-transform-runtime</code>的使用</h4>\n<p><code class=\"language-text\">@babel/plugin-transform-runtime</code>插件是为了解决：</p>\n<ul>\n<li>多个文件重复引用相同 helpers（帮助函数）-> 提取运行时</li>\n<li>新 API 方法全局污染 -> 局部引入</li>\n</ul>\n<p>这个插件推荐在编写 library/module 时使用。当然，以上问题可通过设置<code class=\"language-text\">useBuiltIns</code>搞定。</p>\n<h4 id=\"支持实例方法按需引入\" style=\"position:relative;\"><a href=\"#%E6%94%AF%E6%8C%81%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5\" aria-label=\"支持实例方法按需引入 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>支持实例方法按需引入</h4>\n<p>传统方式是手动从<code class=\"language-text\">core-js</code>引入需要的 ES6+特性，</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'core-js/fn/set'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'core-js/fn/array/from'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'core-js/fn/array/find-index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>或者一股脑全部引入：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"@babel/polyfill\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@babel/polyfill\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>同样，以上问题可通过设置<code class=\"language-text\">useBuiltIns</code>搞定。</p>\n<h3 id=\"使用说明\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\" aria-label=\"使用说明 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用说明</h3>\n<p>默认情况下，<code class=\"language-text\">@babel/preset-env</code>的效果和<code class=\"language-text\">@babel/preset-latest</code>一样，虽然上面的说明有提到 polyfills，但是也需要在配置中设置<code class=\"language-text\">useBuiltIns</code>才会生效。</p>\n<h3 id=\"主要配置\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E8%A6%81%E9%85%8D%E7%BD%AE\" aria-label=\"主要配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主要配置</h3>\n<h4 id=\"targets\" style=\"position:relative;\"><a href=\"#targets\" aria-label=\"targets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>targets</h4>\n<p><strong>设置支持环境</strong>，支持的<code class=\"language-text\">key</code>包括：chrome, opera, edge, firefox, safari, ie, ios, android, node, electron。</p>\n<p>例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"@babel/env\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"targets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"current\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"chrome\"</span><span class=\"token operator\">:</span> <span class=\"token number\">52</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"browsers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"last 2 versions\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"safari 7\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>其中，<strong><code class=\"language-text\">browserslist</code>可在<code class=\"language-text\">package.json</code>中配置</strong>，这个和设置 CSS 的 Autoprefixer 一致，配置优先级如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">targets.browsers &gt; package.json/browserslist</code></pre></div>\n<p>此外，<strong><code class=\"language-text\">browserslist</code>的配置满足最大匹配原则</strong>，比如需要同时支持在 IE 8 和 Chrome 55 下运行，则<code class=\"language-text\">preset-env</code>提供所有 IE 8 下需要的插件，即使 Chrome 55 可能不需要。</p>\n<h4 id=\"modules\" style=\"position:relative;\"><a href=\"#modules\" aria-label=\"modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>modules</h4>\n<p>选项用于模块转化规则设置，可选配置包括：“amd” | “umd” | “systemjs” | “commonjs” | false, 默认使用 “commonjs”。即，将代码中的 ES6 的<code class=\"language-text\">import</code>转为<code class=\"language-text\">require</code>。</p>\n<p>如果你当前的 webpack 构建环境是 2.x/3.x，推荐将<code class=\"language-text\">modules</code>设置为<code class=\"language-text\">false</code>，即交由 Webpack 来处理模块化，通过其 TreeShaking 特性将有效减少打包出来的 JS 文件大小。这部分参考这里的回答：<a href=\"https://www.zhihu.com/question/27917401/answer/223309781\" target=\"_target\" rel=\"nofollow\">ECMAScript 6 的模块相比 CommonJS 的 require (…)有什么优点？</a></p>\n<h4 id=\"usebuiltins\" style=\"position:relative;\"><a href=\"#usebuiltins\" aria-label=\"usebuiltins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useBuiltIns</h4>\n<blockquote>\n<p>A way to apply @babel/preset-env for polyfills (via @babel/polyfill).</p>\n</blockquote>\n<p>可选值包括：“usage” | “entry” | false, 默认为 false，表示不对 polyfills 处理，<strong>这个配置是引入 polyfills 的关键</strong>。</p>\n<h5 id=\"usebuiltinsusage\" style=\"position:relative;\"><a href=\"#usebuiltinsusage\" aria-label=\"usebuiltinsusage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>“useBuiltIns”:“usage”</h5>\n<p>在文件需要的位置单独按需引入，可以保证在每个 bundler 中只引入一份。例如：</p>\n<p><strong>In</strong></p>\n<p>a.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>b.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Out (if environment doesn’t support it)</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/modules/es6.promise\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/modules/es6.map\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Out (if environment supports it)</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>！！注意！！</strong></p>\n<p>当前模式类似于<code class=\"language-text\">@babel/plugin-transform-runtime</code>，polyfill 局部使用，制造一个沙盒环境，不造成全局污染，但是如上配置后，<strong><code class=\"language-text\">@babel/preset-env</code>能按需引入新实例方法</strong>，例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"foobar\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>而<code class=\"language-text\">@babel/plugin-transform-runtime</code>不行，需要自行从<code class=\"language-text\">core-js</code>中按需引入。我测试的情况和下面这篇文章所说完全不一致。</p>\n<blockquote>\n<p>原文：<a href=\"https://zhuanlan.zhihu.com/p/29506685\" target=\"_target\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/29506685</a></p>\n<p>当 useBuiltIns 设置为 usage 时，Babel 会在你使用到 ES2015+ 新特性时，自动添加 babel-polyfill 的引用，并且是 partial 级别的引用。</p>\n<blockquote>\n<p>请注意： usage 的行为类似 babel-transform-runtime，不会造成全局污染，<strong>因此也会不会对类似 Array.prototype.includes() 进行 polyfill</strong>。</p>\n</blockquote>\n</blockquote>\n<h5 id=\"usebuiltinsentry\" style=\"position:relative;\"><a href=\"#usebuiltinsentry\" aria-label=\"usebuiltinsentry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>“useBuiltIns”:“entry”</h5>\n<p>在项目入口引入一次（多次引入会报错）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"@babel/polyfill\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@babel/polyfill\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>插件<code class=\"language-text\">@babel/preset-env</code>会将把<code class=\"language-text\">@babel/polyfill</code>根据实际需求<strong>打散</strong>，只留下必须的，例如：</p>\n<p><strong>In</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"@babel/polyfill\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Out (different based on environment)</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/modules/es6.promise\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/modules/es7.string.pad-start\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/modules/es7.string.pad-end\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/modules/es7.array.includes\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>除了新 API，也可以是实例方法，不过最终包体积比使用<code class=\"language-text\">&quot;useBuiltIns&quot;:&quot;usage&quot;</code>大 30kb 左右（因项目而异）。</p>\n</blockquote>\n<h5 id=\"usebuiltins-false\" style=\"position:relative;\"><a href=\"#usebuiltins-false\" aria-label=\"usebuiltins false permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>“useBuiltIns”: false</h5>\n<p>不在代码中使用 polyfills，表现形式和<code class=\"language-text\">@babel/preset-latest</code>一样，当使用 ES6+语法及 API 时，在不支持的环境下会报错。</p>\n<h2 id=\"babelpreset-stage-x\" style=\"position:relative;\"><a href=\"#babelpreset-stage-x\" aria-label=\"babelpreset stage x permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@babel/preset-stage-x</h2>\n<p>这里需要说明下 ES 特性支持的提案，不同阶段的提案支持的内容不同，其中<code class=\"language-text\">stage-4</code>阶段提案中的特性将会在未来发布。</p>\n<p>关于各个 Stage 的说明参考<a href=\"http://babeljs.io/docs/plugins#stage-x-experimental-presets\" target=\"_target\" rel=\"nofollow\">这里</a>。上面介绍的<code class=\"language-text\">@babel/preset-env</code>或者<code class=\"language-text\">@babel/preset-latest</code>就是下面提到的<code class=\"language-text\">stage-4</code>。</p>\n<blockquote>\n<p>The TC39 categorizes proposals into the following stages:</p>\n<ul>\n<li>Stage 0 - Strawman: just an idea, possible Babel plugin.</li>\n<li>Stage 1 - Proposal: this is worth working on.</li>\n<li>Stage 2 - Draft: initial spec.</li>\n<li>Stage 3 - Candidate: complete spec and initial browser implementations.</li>\n<li>Stage 4 - Finished: will be added to the next yearly release.</li>\n</ul>\n</blockquote>\n<p>Stage 的包含顺序是：<strong>左边包含右边全部特性，即 stage-0 包含右边 1 / 2 / 3 的所有插件。</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">stage-0 &gt; ~1 &gt; ~2 &gt; ~3 &gt; ~4:</code></pre></div>\n<h3 id=\"疑问\" style=\"position:relative;\"><a href=\"#%E7%96%91%E9%97%AE\" aria-label=\"疑问 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>疑问</h3>\n<h4 id=\"1-这个和code-classlanguage-textbabelpreset-envcode的区别\" style=\"position:relative;\"><a href=\"#1-%E8%BF%99%E4%B8%AA%E5%92%8Ccode-classlanguage-textbabelpreset-envcode%E7%9A%84%E5%8C%BA%E5%88%AB\" aria-label=\"1 这个和code classlanguage textbabelpreset envcode的区别 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 这个和<code class=\"language-text\">@babel/preset-env</code>的区别</h4>\n<p><code class=\"language-text\">@babel/preset-env</code>会根据预设的浏览器兼容列表从<code class=\"language-text\">stage-4</code>选取必须的 plugin，也就是说，不引入别的<code class=\"language-text\">stage-x</code>，<code class=\"language-text\">@babel/preset-env</code>将只支持到<code class=\"language-text\">stage-4</code>。</p>\n<h3 id=\"建议\" style=\"position:relative;\"><a href=\"#%E5%BB%BA%E8%AE%AE\" aria-label=\"建议 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>建议</h3>\n<h4 id=\"1-如果是-react-用户，建议配到code-classlanguage-textbabelpreset-stage-0code\" style=\"position:relative;\"><a href=\"#1-%E5%A6%82%E6%9E%9C%E6%98%AF-react-%E7%94%A8%E6%88%B7%EF%BC%8C%E5%BB%BA%E8%AE%AE%E9%85%8D%E5%88%B0code-classlanguage-textbabelpreset-stage-0code\" aria-label=\"1 如果是 react 用户，建议配到code classlanguage textbabelpreset stage 0code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 如果是 React 用户，建议配到<code class=\"language-text\">@babel/preset-stage-0</code></h4>\n<p>其中的两个插件对于写 JSX 很有帮助。</p>\n<ul>\n<li>transform-do-expressions：if/else 三目运算展开</li>\n<li>transform-function-bind：this 绑定</li>\n</ul>\n<h4 id=\"2-通常使用建议配到code-classlanguage-textbabelpreset-stage-2code\" style=\"position:relative;\"><a href=\"#2-%E9%80%9A%E5%B8%B8%E4%BD%BF%E7%94%A8%E5%BB%BA%E8%AE%AE%E9%85%8D%E5%88%B0code-classlanguage-textbabelpreset-stage-2code\" aria-label=\"2 通常使用建议配到code classlanguage textbabelpreset stage 2code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 通常使用建议配到<code class=\"language-text\">@babel/preset-stage-2</code></h4>\n<p>插件包括：</p>\n<ul>\n<li>syntax-dynamic-import： 动态 import</li>\n<li>transform-class-properties：用于 class 的属性转化</li>\n<li>transform-object-rest-spread：用来处理 rest spread</li>\n<li>transform-async-generator-functions：用来处理 async 和 await</li>\n</ul>\n<h2 id=\"babelpolyfill\" style=\"position:relative;\"><a href=\"#babelpolyfill\" aria-label=\"babelpolyfill permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@babel/polyfill</h2>\n<p>这个插件是对<a href=\"https://www.npmjs.com/package/core-js\" target=\"_target\" rel=\"nofollow\">core-js</a>和<a href=\"https://www.npmjs.com/package/regenerator-runtime\" target=\"_target\" rel=\"nofollow\">regenerator-runtime</a>的再次封装，在<code class=\"language-text\">@babel/preset-env</code>中的<code class=\"language-text\">useBuiltIns: entry</code>用到，<a href=\"https://github.com/babel/babel/blob/master/packages/babel-polyfill/src/index.js\" target=\"_target\" rel=\"nofollow\">代码不多</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">.</span>_babelPolyfill<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"only one instance of @babel/polyfill is allowed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nglobal<span class=\"token punctuation\">.</span>_babelPolyfill <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/shim\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"regenerator-runtime/runtime\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>core-js/shim</strong></p>\n<blockquote>\n<p>shim only: Only includes the standard methods.</p>\n</blockquote>\n<p>只包含了纳入标准的<strong>API</strong>及<strong>实例化方法</strong>，例如下列常见的。注意，这里没有 generator/async，如果需要，那就安装插件<code class=\"language-text\">@babel/preset-stage-3</code>（或者 0 / 1 / 2）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./modules/es6.string.trim'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./modules/es6.string.includes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./modules/es7.array.includes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./modules/es6.promise'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p><strong>regenerator-runtime/runtime</strong></p>\n<blockquote>\n<p>Standalone runtime for Regenerator-compiled generator and async functions.</p>\n</blockquote>\n<p>主要是给 generator/async 做支持的插件。</p>\n<h2 id=\"总结\" style=\"position:relative;\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>这里需要理解下三个概念：</p>\n<ul>\n<li>最新 ES 语法：比如，箭头函数</li>\n<li>最新 ES API：，比如，Promise</li>\n<li>最新 ES 实例方法：比如，String.protorype.includes</li>\n</ul>\n<p><code class=\"language-text\">@babel/preset-env</code>默认支持<strong>语法</strong>转化，需要开启<code class=\"language-text\">useBuiltIns</code>配置才能转化<strong>API</strong>和<strong>实例方法</strong>。</p>\n<p>此外，不管是写项目还是写 Library/Module，使用<code class=\"language-text\">@babel/preset-env</code>并正确配置就行。多看英文原稿说明，中文总结看看就好，别太当真。</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/@babel/preset-env\" target=\"_target\" rel=\"nofollow\">@babel/preset-env</a></li>\n<li><a href=\"https://www.npmjs.com/package/@babel/preset-stage-0\" target=\"_target\" rel=\"nofollow\">@babel/preset-stage-0</a></li>\n<li><a href=\"https://www.npmjs.com/package/@babel/preset-stage-1\" target=\"_target\" rel=\"nofollow\">@babel/preset-stage-1</a></li>\n<li><a href=\"https://www.npmjs.com/package/@babel/preset-stage-2\" target=\"_target\" rel=\"nofollow\">@babel/preset-stage-2</a></li>\n<li><a href=\"https://www.npmjs.com/package/@babel/preset-stage-3\" target=\"_target\" rel=\"nofollow\">@babel/preset-stage-3</a></li>\n<li><a href=\"https://www.cnblogs.com/chris-oil/p/5717544.html\" target=\"_target\" rel=\"nofollow\">stage 的区别</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/25961891\" target=\"_target\" rel=\"nofollow\">弄清楚 babel 的 stage</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/29506685\" target=\"_target\" rel=\"nofollow\">再见，babel-preset-2015</a></li>\n<li><a href=\"https://www.zhihu.com/question/27917401/answer/223309781\" target=\"_target\" rel=\"nofollow\">ECMAScript 6 的模块相比 CommonJS 的 require (…)有什么优点？</a></li>\n</ul>","timeToRead":10,"wordCount":{"paragraphs":106,"sentences":109,"words":543},"fields":{"slug":"/guan-yu-Babel-zui-xin-shi-yong-fang-shi/","relativePath":"2017/2017-11-19---guan-yu-Babel-zui-xin-shi-yong-fang-shi/index.md"},"excerpt":"文章总结的时间是 2017/11/20 本文是为了梳理 Babel 配置及使用而整理，因为看过使用 Babel…","frontmatter":{"title":"关于Babel最新使用方式","date":"19 Nov 2017","tags":["Babel","JavaScript"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<h3 id=\"为什么使用-fastclick\" style=\"position:relative;\"><a href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-fastclick\" aria-label=\"为什么使用 fastclick permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>为什么使用 FastClick</h3>\n<p>在移动端 H5 开发过程中，关于点触可能会遇到如下两个问题：</p>\n<ul>\n<li>手动点击与真正触发<code class=\"language-text\">click</code>事件会存在 300ms 的延迟</li>\n<li>点击穿透问题（点击行为会穿透元素触发非父子关系元素的事件）</li>\n</ul>\n<p>延迟的存在时因为浏览器想知道你<a href=\"https://developers.google.com/mobile/articles/fast_buttons\" target=\"_target\" rel=\"nofollow\">是否在进行双击操作</a>；而点击穿透是因为 300ms 延迟触发时的副作用。而使用 fastclick 能很好的解决这个问题，增加使用者的体验。</p>\n<h3 id=\"可以不使用的场景\" style=\"position:relative;\"><a href=\"#%E5%8F%AF%E4%BB%A5%E4%B8%8D%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9C%BA%E6%99%AF\" aria-label=\"可以不使用的场景 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>可以不使用的场景</h3>\n<p>不必使用的浏览器环境如下：</p>\n<ul>\n<li>Android + Chrome >32</li>\n<li>Android + Chrome + <code class=\"language-text\">meta=&quot;user-scalable=no&quot;</code></li>\n<li>部分黑莓手机环境（可略过）</li>\n<li>部分 WindowsPhone 环境（可略过）</li>\n</ul>\n<p>这部分的判断在下面的方法中有体现，如果当前环境支持快速点击，则 FastClick 会自动跳过初始化。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">FastClick<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">notNeeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">layer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"原理过程\" style=\"position:relative;\"><a href=\"#%E5%8E%9F%E7%90%86%E8%BF%87%E7%A8%8B\" aria-label=\"原理过程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>原理过程</h3>\n<p>如果完整的描述 FastClick 过程需要考虑多种场景的兼容，<strong>这里就描述一个按钮点击过程的处理</strong>，下面是用来描述的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 业务代码</span>\n<span class=\"token keyword\">var</span> $test <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$test<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1 click\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// FastClick简单实现</span>\n<span class=\"token keyword\">var</span> targetElement <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 记录点击的元素</span>\n  targetElement <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 阻止默认事件（屏蔽之后的click事件）</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> touch <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 合成click事件，并添加可跟踪属性forwardedTouchEvent</span>\n  <span class=\"token keyword\">var</span> clickEvent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MouseEvents\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  clickEvent<span class=\"token punctuation\">.</span><span class=\"token function\">initMouseEvent</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    window<span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>screenX<span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>screenY<span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  clickEvent<span class=\"token punctuation\">.</span>forwardedTouchEvent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 自定义的</span>\n  targetElement<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>clickEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"这里进行过程说明：\" style=\"position:relative;\"><a href=\"#%E8%BF%99%E9%87%8C%E8%BF%9B%E8%A1%8C%E8%BF%87%E7%A8%8B%E8%AF%B4%E6%98%8E%EF%BC%9A\" aria-label=\"这里进行过程说明： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>这里进行过程说明：</h4>\n<h5 id=\"1-业务正常使用-click-绑定事件\" style=\"position:relative;\"><a href=\"#1-%E4%B8%9A%E5%8A%A1%E6%AD%A3%E5%B8%B8%E4%BD%BF%E7%94%A8-click-%E7%BB%91%E5%AE%9A%E4%BA%8B%E4%BB%B6\" aria-label=\"1 业务正常使用 click 绑定事件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 业务正常使用 click 绑定事件</h5>\n<h5 id=\"2-在-documentbody-绑定code-classlanguage-texttouchstartcode和code-classlanguage-texttouchendcode\" style=\"position:relative;\"><a href=\"#2-%E5%9C%A8-documentbody-%E7%BB%91%E5%AE%9Acode-classlanguage-texttouchstartcode%E5%92%8Ccode-classlanguage-texttouchendcode\" aria-label=\"2 在 documentbody 绑定code classlanguage texttouchstartcode和code classlanguage texttouchendcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 在 document.body 绑定<code class=\"language-text\">touchstart</code>和<code class=\"language-text\">touchend</code></h5>\n<p><strong><code class=\"language-text\">touchstart</code></strong></p>\n<p>用于记录当前点击的元素 targetElement；</p>\n<p><strong><code class=\"language-text\">touchend</code></strong></p>\n<ul>\n<li>阻止默认事件（屏蔽之后的 click 事件）</li>\n<li>合成 click 事件，并添加可跟踪属性 forwardedTouchEvent</li>\n<li>在 targetElement 上触发<code class=\"language-text\">click</code>事件</li>\n<li>targetElement 上绑定的事件立即执行，完成 FastClick</li>\n</ul>\n<h5 id=\"3-执行业务自己的-click-事件\" style=\"position:relative;\"><a href=\"#3-%E6%89%A7%E8%A1%8C%E4%B8%9A%E5%8A%A1%E8%87%AA%E5%B7%B1%E7%9A%84-click-%E4%BA%8B%E4%BB%B6\" aria-label=\"3 执行业务自己的 click 事件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 执行业务自己的 click 事件</h5>\n<h3 id=\"总结\" style=\"position:relative;\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h3>\n<p>以上就完成了模拟 FastClick，是不是很简单。事件的执行过程需要了解：touch 事件先于 mouse 事件先于 click 执行，因此可以在 document.body 上绑定事件用于监听点触行为，根据需要模拟 click 触发真正需要响应的元素。</p>\n<p>(完)</p>","timeToRead":3,"wordCount":{"paragraphs":28,"sentences":28,"words":95},"fields":{"slug":"/Fastclick-yuan-li-qian-jian-xi/","relativePath":"2017/2017-12-08---Fastclick-yuan-li-qian-jian-xi/index.md"},"excerpt":"为什么使用 FastClick 在移动端 H5 开发过程中，关于点触可能会遇到如下两个问题： 手动点击与真正触发事件会存在 300ms…","frontmatter":{"title":"Fastclick原理浅析","date":"08 Dec 2017","tags":["Mobile"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/guan-yu-zu-jian-ku-de-di-zhu-ti-ding-zhi/","prev":"/Fastclick-yuan-li-qian-jian-xi/","next":"/guan-yu-Babel-zui-xin-shi-yong-fang-shi/"}},"staticQueryHashes":["3240721340","63159454"]}