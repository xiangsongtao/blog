{"componentChunkName":"component---src-templates-blog-post-js","path":"/jin-du-duo-xian-shi/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.png","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.png","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<h2 id=\"1spanjs-插件使用菊花\" style=\"position:relative;\"><a href=\"#1spanjs-%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E8%8F%8A%E8%8A%B1\" aria-label=\"1spanjs 插件使用菊花 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.spanjs 插件使用(菊花)</h2>\n<h3 id=\"显示效果（无限菊花）：\" style=\"position:relative;\"><a href=\"#%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C%EF%BC%88%E6%97%A0%E9%99%90%E8%8F%8A%E8%8A%B1%EF%BC%89%EF%BC%9A\" aria-label=\"显示效果（无限菊花）： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>显示效果（无限菊花）：</h3>\n<p><img src=\"http://pic002.cnblogs.com/images/2012/263737/2012110210275693.png\" alt=\"菊花状\"></p>\n<h3 id=\"快速开始：\" style=\"position:relative;\"><a href=\"#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B%EF%BC%9A\" aria-label=\"快速开始： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>快速开始：</h3>\n<p>-. HTML 页面插入代码</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    /*spin为承载进度条的块*/\n    &lt;div id=&quot;spin&quot;&gt;&lt;/div&gt;\n    &lt;script src=&quot;spin.js&quot;&gt;&lt;/script&gt;</code></pre></div>\n<p>-. 设置<strong>菊花</strong>的参数</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    var opts = {\n      \tlines: 12             // The number of lines to draw\n    \t, length: 7             // The length of each line\n    \t, width: 5              // The line thickness\n    \t, radius: 10            // The radius of the inner circle\n    \t, scale: 1.0            // Scales overall size of the spinner\n    \t, corners: 1            // Roundness (0..1)\n    \t, color: &#39;#000&#39;         // #rgb or #rrggbb\n    \t, opacity: 1/4          // Opacity of the lines\n    \t, rotate: 0             // Rotation offset\n    \t, direction: 1          // 1: clockwise, -1: counterclockwise\n    \t, speed: 1              // Rounds per second\n    \t, trail: 100            // Afterglow percentage\n    \t, fps: 20               // Frames per second when using setTimeout()\n    \t, zIndex: 2e9           // Use a high z-index by default\n    \t, className: &#39;spinner&#39;  // CSS class to assign to the element\n    \t, top: &#39;50%&#39;            // center vertically\n    \t, left: &#39;50%&#39;           // center horizontally\n    \t, shadow: false         // Whether to render a shadow\n    \t, hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n    \t, position: &#39;absolute&#39;  // Element positioning\n    }</code></pre></div>\n<p>-. 调用函数</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> var target = document.getElementById(&#39;spin&#39;);\n //定义opts参数下的样式\n var spinner = new Spinner(opts);\n //启动target\n spinner.spin(target);</code></pre></div>\n<p>-. 停止</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">spinner.stop(target);</code></pre></div>\n<p>-. 再开始</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">spinner.spin(target);</code></pre></div>\n<h2 id=\"2cprogressjs-插件菊花进度值\" style=\"position:relative;\"><a href=\"#2cprogressjs-%E6%8F%92%E4%BB%B6%E8%8F%8A%E8%8A%B1%E8%BF%9B%E5%BA%A6%E5%80%BC\" aria-label=\"2cprogressjs 插件菊花进度值 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.CProgressjs 插件(菊花+进度值)</h2>\n<h3 id=\"显示效果\" style=\"position:relative;\"><a href=\"#%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C\" aria-label=\"显示效果 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>显示效果:</h3>\n<p><img src=\"http://pic002.cnblogs.com/images/2012/36987/2012102316464528.jpg\" alt=\"菊花+进度值\"></p>\n<blockquote>\n<p><strong>可固定值,也可修改 limit value(终点值).</strong></p>\n</blockquote>\n<h3 id=\"快速开始\" style=\"position:relative;\"><a href=\"#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\" aria-label=\"快速开始 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>快速开始</h3>\n<p>-. HTML 页面插入代码</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/*承载进度条的块*/\n&lt;div id=&quot;p1&quot;&gt;&lt;/div&gt;\n/*在上面目录下自动创建的内容,105是图片的大小*/\n&lt;div class=&quot;jCProgress&quot; style=&quot;opacity: 1;&quot;&gt;\n\t&lt;div class=&quot;percent&quot;&gt;50&lt;/div&gt;\n\t&lt;canvas width=&quot;105&quot; height=&quot;105&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;</code></pre></div>\n<p>-. 设置<strong>菊花</strong>的参数并启动</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$(document).ready(function() {\n\t\t//变量承载\n        var myplugin;\n        //设置延迟,因为图片加载慢的问题\n        setTimeout(function() {\n            if (!myplugin) {\n            \t//**option设置**\n                opt = {\n                    percent: 0, // starting position\n                    img1: &#39;http://p.ar2oor.pl/cprogress/c1.png&#39;, // background\n                    img2: &#39;http://p.ar2oor.pl/cprogress/c3.png&#39;, // foreground\n                    speed: 10, // speed (timeout)\n                    PIStep: 0.05, // every step foreground area is bigger about this val\n                    //limit: 20, // end value\n                    loop: false, //if true, no matter if limit is set, progressbar will be running\n                    showPercent: true, //show hide percent\n                    onInit: function() {\n                        console.log(&#39;onInit&#39;);\n                    },\n                    onProgress: function(p) {\n                    //用于提示进度在0-100之间的信息展示\n                        console.log(&#39;onProgress&#39;, p);\n                    }, //p=current percent\n                    onComplete: function(p) {\n                    //如果进度完成\n                        console.log(&#39;onComplete&#39;, p);\n                    }\n                };\n                //手动更改当前的终点值\n                opt.limit = 40;\n                //在p1内添加元素,传入参数opt\n                myplugin = $(&#39;#p1&#39;).cprogress(opt);\n\n                //更改值后自动动画,可用于组件加载时调用\n                //设置myplugin中的属性\n                myplugin.options({\n                    limit: 50\n                });\n\n\n            }\n        }, 1000);\n    });</code></pre></div>\n<p>-. myplugin 的其余方法</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 创建参数\noptions = {\n \timg1: &#39;v1.png&#39;,\n \timg2: &#39;v2.png&#39;,\n \tspeed: 50,\n \tlimit: 70,\n};\n//创建cprogress\nmyplugin = $(&#39;#p1&#39;).cprogress(options);\n\n//通过事件创建cprogress\n$(&#39;#create&#39;).click(function(){\n    if(!myplugin){\n  \tmyplugin = $(&#39;#p1&#39;).cprogress(options);\n \t}\n});\n\n// 销毁\n$(&#39;#destroy&#39;).click(function(){\n \tif(myplugin){\n  \tmyplugin=myplugin.destroy();\n \t}\n});\n\n// 开始\n$(&#39;#play&#39;).click(function(){\n \tif(myplugin){\n  \tmyplugin.start();\n \t}\n});\n\n// 停止\n$(&#39;#pause&#39;).click(function(){\n \tif(myplugin){\n  \tmyplugin.stop();\n \t}\n});\n\n// 重置,从头开始再走一遍\n$(&#39;#reset&#39;).click(function(){\n \tif(myplugin){\n  \tmyplugin.reset();\n \t}\n});\n\n// 更改配置 (可以更改所有的配置)\n$(&#39;#speed10&#39;).click(function(){\n \tif(myplugin){\n \t//这里更改的是速度\n  \tmyplugin.options({speed: 10});\n \t}\n});</code></pre></div>\n<p>-. CSS 配置\n/<em>显示圆形进度的外层 div,自动创建的 div</em>/\n.jCProgress {\nposition: absolute;\nz-index: 9999999;\n/_ margin-top:-15px; /_ offset from the center <em>/\n}\n/</em>内部百分比进度数字 div*/</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.jCProgress &gt; div.percent {\n \tfont: 18px/27px &#39;BebasRegular&#39;, Arial, sans-serif;\n \tcolor:#ebebeb;\n \ttext-shadow: 1px 1px 1px #1f1f1f;\n\n \tposition:absolute;\n \tmargin-top:40px;\n \tmargin-left:22px;\n \ttext-align: center;\n \twidth:60px;\n}</code></pre></div>","timeToRead":4,"wordCount":{"paragraphs":15,"sentences":23,"words":49},"fields":{"slug":"/jin-du-duo-xian-shi/","relativePath":"2015/2015-11-11---jin-du-duo-xian-shi/index.md"},"excerpt":"1.spanjs 插件使用(菊花) 显示效果（无限菊花）： 菊花状 快速开始： -. HTML 页面插入代码 -. 设置菊花的参数 -. 调用函数 -. 停止 -. 再开始 2.CProgressjs…","frontmatter":{"title":"进度显示","date":"11 Nov 2015","tags":["插件"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<p><strong>跨域访问:</strong></p>\n<blockquote>\n<p>如果我们希望获取的数据和当前页面并不是一个域，著名的同源策略（不同域的客户端脚本在没明确授权的情况下，不能读写对方的资源）会因为安全原因决绝请求，也就是我们不能向其它域直接发送请求以获取资源。</p>\n</blockquote>\n<p><strong>iframe、img、style、script 等元素</strong>的 src 属性可以直接向不同域请求资源，jsonp 正是利用 script 标签跨域请求资源的</p>\n<p><strong>异域服务器的 php 代码:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n  <span class=\"token variable\">$path</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"DOCUMENT_ROOT\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'/books.xml'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$json</span><span class=\"token operator\">=</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">simplexml_load_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">$callbackFn</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'callback'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$callbackFn</span></span>(<span class=\"token interpolation\"><span class=\"token variable\">$json</span></span>);\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span></code></pre></div>\n<p>将 xml 数据转化成 json,之后将传入的 callback 的值作为函数名传入 json 数据,之后 echo.</p>\n<p><strong>本地 callback 函数</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">displayBooks</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">books</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">**</span><span class=\"token operator\">**</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>本地 jsonp 请求发送</strong></p>\n<p>写一个<code class=\"language-text\">&lt;script&gt;</code>标签用于跨域</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getBooks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"http://test.com/bookservice.php?callback=displayBooks\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getBooks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>jquery 实现</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getBooks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"http://test.com/bookservice.php\"</span><span class=\"token punctuation\">,</span>\n    dataType<span class=\"token operator\">:</span> <span class=\"token string\">\"jsonp\"</span><span class=\"token punctuation\">,</span>\n    jsonp<span class=\"token operator\">:</span> <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">,</span>\n    jsonpCallback<span class=\"token operator\">:</span> <span class=\"token string\">\"displayBooks\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","timeToRead":1,"wordCount":{"paragraphs":9,"sentences":9,"words":42},"fields":{"slug":"/JSONP-kua-yu-fang-wen-fu-wu/","relativePath":"2015/2015-11-11---JSONP-kua-yu-fang-wen-fu-wu/index.md"},"excerpt":"跨域访问: 如果我们希望获取的数据和当前页面并不是一个域，著名的同源策略（不同域的客户端脚本在没明确授权的情况下，不能读写对方的资源）会因为安全原因决绝请求，也就是我们不能向其它域直接发送请求以获取资源。 iframe…","frontmatter":{"title":"JSONP跨域访问服务","date":"11 Nov 2015","tags":["JSONP"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<blockquote>\n<p>第一次看官网的说明真是一头雾水,再次学习的时候感觉思路清晰很多,因此在这总结.</p>\n</blockquote>\n<h2 id=\"为什么使用-requirejs\" style=\"position:relative;\"><a href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-requirejs\" aria-label=\"为什么使用 requirejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>为什么使用 requirejs?</h2>\n<p><strong>下面是我认为的原因:</strong></p>\n<ol>\n<li>代码逻辑复杂需要模块化管理;</li>\n<li>在 js 文件中引入其他 js 文件的代码只能通过标签<code class=\"language-text\">&lt;script&gt;</code></li>\n<li>提升网页打开速度需要减少调用外部的 js 标签<code class=\"language-text\">&lt;script&gt;</code></li>\n</ol>\n<p>接下来我就从怎么使用开始吧.</p>\n<h2 id=\"需要在-html-代码中添加-requirejs-的code-classlanguage-textltscriptgtcode标签\" style=\"position:relative;\"><a href=\"#%E9%9C%80%E8%A6%81%E5%9C%A8-html-%E4%BB%A3%E7%A0%81%E4%B8%AD%E6%B7%BB%E5%8A%A0-requirejs-%E7%9A%84code-classlanguage-textltscriptgtcode%E6%A0%87%E7%AD%BE\" aria-label=\"需要在 html 代码中添加 requirejs 的code classlanguage textltscriptgtcode标签 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需要在 html 代码中添加 requirejs 的<code class=\"language-text\">&lt;script&gt;</code>标签</h2>\n<p><strong>两种方式都行:</strong><br>\n<code class=\"language-text\">&lt;script data-main=&quot;scripts/main.js&quot; src=&quot;scripts/require.js&quot;&gt;&lt;/script&gt;</code><br>\n<code class=\"language-text\">&lt;script data-main=&quot;scripts/main&quot; src=&quot;scripts/require.js&quot;&gt;&lt;/script&gt;</code></p>\n<ol>\n<li>将标签添加在<code class=\"language-text\">&lt;body&gt;</code>的末尾</li>\n<li>指定 js 文件的主入口位置<code class=\"language-text\">main.js</code></li>\n<li>指定<code class=\"language-text\">require.js</code>文件位置</li>\n</ol>\n<h2 id=\"配置-mainjs-文件\" style=\"position:relative;\"><a href=\"#%E9%85%8D%E7%BD%AE-mainjs-%E6%96%87%E4%BB%B6\" aria-label=\"配置 mainjs 文件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置 main.js 文件</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">**目录结构**\nwww/\n----index.html\n----js/\n--------app/\n------------sub.js\n------------inventory.js\n------------cart\n--------lib/\n------------jquery.js\n------------canvas.js\n--------main.js</code></pre></div>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">requirejs.config({\n\t//默认路径\n\tbaseUrl: &#39;js/lib&#39;,\n\n\t//在baseUrl默认路径的基础上,加载app.js文件,他现在\n\t//在lib文件夹的上级目录中(与js目录同级),不能再app后\n\t//加上js后缀!!!\n\t//在baseUrl目录下可以不用在paths中写明.例如canvas\n\tpaths: {\n    \tmain: &#39;../main&#39;,\n    \tjquery: &#39;jquery.1.1.min&#39;,\n    \tsub: &#39;../app/sub&#39;,\n    \tinventory.js: &#39;../app/inventory.js&#39;,\n    \tcart: &#39;../app/cart&#39;,\n\n\t}\n});\n\n// 主入口\n//前面是依赖的模块数组(也可以是模块的位置url), 后面是对应的**调用名字**(已经对位)\nrequirejs([&#39;jquery&#39;, &#39;canvas&#39;, &#39;app/sub&#39;],\nfunction     ($,      canvas,     sub) {\n\t//你的逻辑代码\n\t//sub.color;\n\t//sub(value);\n\t});</code></pre></div>\n<h2 id=\"定义模块-subjs\" style=\"position:relative;\"><a href=\"#%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%9D%97-subjs\" aria-label=\"定义模块 subjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>定义模块 sub.js</h2>\n<h3 id=\"1-如果只含有键值对的模块\" style=\"position:relative;\"><a href=\"#1-%E5%A6%82%E6%9E%9C%E5%8F%AA%E5%90%AB%E6%9C%89%E9%94%AE%E5%80%BC%E5%AF%B9%E7%9A%84%E6%A8%A1%E5%9D%97\" aria-label=\"1 如果只含有键值对的模块 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 如果只含有键值对的模块</h3>\n<p><strong>from sub.js</strong>\ndefine(function () {\n//做一些初始设置\n//return 出去的就是 sub 模块提供的信息\n//此处为一个 object\nreturn {\ncolor: “black”,\nsize: “unisize”\n}\n});</p>\n<h3 id=\"2-如果存在依赖的键值对的模块\" style=\"position:relative;\"><a href=\"#2-%E5%A6%82%E6%9E%9C%E5%AD%98%E5%9C%A8%E4%BE%9D%E8%B5%96%E7%9A%84%E9%94%AE%E5%80%BC%E5%AF%B9%E7%9A%84%E6%A8%A1%E5%9D%97\" aria-label=\"2 如果存在依赖的键值对的模块 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 如果存在依赖的键值对的模块</h3>\n<p><strong>from sub.js</strong>\n//可 requirejs 一样,前面是*.js 的 path(前面已定义),后面是回调函数(传入\n//对应的变量名)\ndefine([“cart”, “inventory”], function(cart, inventory) {\n//return 模块\nreturn {\ncolor: “blue”,\nsize: “large”,\naddToCart: function() {\ninventory.decrement(this);\ncart.add(this);\n}\n}\n}\n);</p>\n<h3 id=\"3-返回函数的模块\" style=\"position:relative;\"><a href=\"#3-%E8%BF%94%E5%9B%9E%E5%87%BD%E6%95%B0%E7%9A%84%E6%A8%A1%E5%9D%97\" aria-label=\"3 返回函数的模块 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 返回函数的模块</h3>\n<p><strong>from sub.js</strong>\n//和上面一样\ndefine([“cart”, “inventory”], function(cart, inventory) {\n//return 模块\nreturn function(color){\ncolor: “color”,\nsize: “large”,\naddToCart: function() {\ninventory.decrement(this);\ncart.add(this);\n}\n}\n}\n}\n);</p>\n<h3 id=\"4-包装-commonjs-的代码\" style=\"position:relative;\"><a href=\"#4-%E5%8C%85%E8%A3%85-commonjs-%E7%9A%84%E4%BB%A3%E7%A0%81\" aria-label=\"4 包装 commonjs 的代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 包装 CommonJS 的代码</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">**from sub.js**\n//\ndefine(function(require, exports, module) {\n\t//require需要的模块a和b,和上面一样的用法\n    var a = require(&#39;a&#39;),\n        b = require(&#39;b&#39;);\n\n    //Return CommonJS的结果\n    return function () {};\n\t}\n);</code></pre></div>\n<h3 id=\"5不建议在模块内部对模块直接命名\" style=\"position:relative;\"><a href=\"#5%E4%B8%8D%E5%BB%BA%E8%AE%AE%E5%9C%A8%E6%A8%A1%E5%9D%97%E5%86%85%E9%83%A8%E5%AF%B9%E6%A8%A1%E5%9D%97%E7%9B%B4%E6%8E%A5%E5%91%BD%E5%90%8D\" aria-label=\"5不建议在模块内部对模块直接命名 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.不建议在模块内部对模块直接命名</h3>\n<p>// “foo/title” 这样的命名不建议,\ndefine(“foo/title”,\n[“my/cart”, “my/inventory”],\nfunction(cart, inventory) {\n//Define foo/title object in here.\n}\n);</p>\n<p>其他注意事项</p>\n<hr>\n<h4 id=\"1一个文件一个模块\" style=\"position:relative;\"><a href=\"#1%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E4%B8%80%E4%B8%AA%E6%A8%A1%E5%9D%97\" aria-label=\"1一个文件一个模块 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.一个文件一个模块</h4>\n<h4 id=\"2-在-define-内部再次引用模块的情况\" style=\"position:relative;\"><a href=\"#2-%E5%9C%A8-define-%E5%86%85%E9%83%A8%E5%86%8D%E6%AC%A1%E5%BC%95%E7%94%A8%E6%A8%A1%E5%9D%97%E7%9A%84%E6%83%85%E5%86%B5\" aria-label=\"2 在 define 内部再次引用模块的情况 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 在 define 内部再次引用模块的情况</h4>\n<p><strong>需要将”require”本身作为一个依赖注入到模块中</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">define([&quot;require&quot;, &quot;./relative/name&quot;], function(require) {\n\tvar mod = require(&quot;./relative/name&quot;);\n});</code></pre></div>\n<h4 id=\"3-生成相对于模块的-url-地址\" style=\"position:relative;\"><a href=\"#3-%E7%94%9F%E6%88%90%E7%9B%B8%E5%AF%B9%E4%BA%8E%E6%A8%A1%E5%9D%97%E7%9A%84-url-%E5%9C%B0%E5%9D%80\" aria-label=\"3 生成相对于模块的 url 地址 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 生成相对于模块的 URL 地址</h4>\n<p><strong>需要将”require”本身作为一个依赖注入到模块中</strong>, 结果的 url 不需要加.js 后缀</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">define([&quot;require&quot;], function(require) {\n\tvar cssUrl = require.toUrl(&quot;./style.css&quot;);\n});</code></pre></div>\n<h2 id=\"循环依赖\" style=\"position:relative;\"><a href=\"#%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96\" aria-label=\"循环依赖 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>循环依赖</h2>\n<p>循环依赖(a 依赖 b，b 同时依赖 a),则在这种情形下当 b 调用 a 模块时，它会得到一个 undefined 的 a, 解决办法如下,将 require 作为依赖注入进来.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//Inside b.js:\ndefine([&quot;require&quot;, &quot;a&quot;],\n\tfunction(require, a) {\n    \t//在这种情形下当b调用a模块时，它会得到一个undefined的a,\n    \treturn function(title) {\n    \t\t//调用a中的doSomething()函数\n        \treturn require(&quot;a&quot;).doSomething();\n    \t}\n\t}\n);</code></pre></div>\n<h2 id=\"jsonp-服务依赖-官网的翻译真烂\" style=\"position:relative;\"><a href=\"#jsonp-%E6%9C%8D%E5%8A%A1%E4%BE%9D%E8%B5%96-%E5%AE%98%E7%BD%91%E7%9A%84%E7%BF%BB%E8%AF%91%E7%9C%9F%E7%83%82\" aria-label=\"jsonp 服务依赖 官网的翻译真烂 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSONP 服务依赖-官网的翻译真烂</h2>\n<p>仅支持返回值类型为 JSON object 的 JSONP 服务，其他返回类型如数组、字串、数字等都不能支持。<br>\n为了在 RequireJS 中使用 JSON 服务，需要指定一个 callback 参数,这里使用”defineFn”。这意味着你可将 JSONP URL 获取到的值看成是一个模块(返回的是一个函数 defineFn(jsonValue))。\nrequire([“http://example.com/api/data.json?callback=defineFn”],\nfunction (data) {\n//这里的 data 就是返回的 defineFn(jsonValue)\nconsole.log(data);\n}\n);</p>\n<h2 id=\"requirejs-的机制\" style=\"position:relative;\"><a href=\"#requirejs-%E7%9A%84%E6%9C%BA%E5%88%B6\" aria-label=\"requirejs 的机制 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requirejs 的机制</h2>\n<p>RequireJS 使用 head.appendChild()将每一个依赖加载为一个 script 标签。\nRequireJS 等待所有的依赖加载完毕，计算出模块定义函数正确调用顺序，然后依次调用它们。</p>\n<h2 id=\"requirejsconfig-的配置\" style=\"position:relative;\"><a href=\"#requirejsconfig-%E7%9A%84%E9%85%8D%E7%BD%AE\" aria-label=\"requirejsconfig 的配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requirejs.config 的配置</h2>\n<ul>\n<li><strong>baseUrl</strong> ：所有模块的查找根路径。</li>\n<li><strong>paths</strong> ：path 映射那些不直接放置于 baseUrl 下的模块名。设置 path 时起始位置是相对于 baseUrl 的，除非该 path 设置以”/“开头或含有 URL 协议（如 http:）。</li>\n<li>\n<p><strong>shim</strong>: 将 shim 定义模块设置为全局可用(类似于 path 的作用),设定该模块的依赖项,但不加载该依赖, 只是到用到 shim 定义模块时才加载依赖项, 类似于插件而存在</p>\n<p>  \t\trequirejs.config({\npath: {\njquery:“jquery”,\nunderscore:“underscore”\n},\nshim: {\n‘backbone’: {\ndeps: [‘underscore’, ‘jquery’],\nexports: ‘Backbone’\n},\n‘underscore’: {\nexports: ’_’\n},\n‘foo’: {\ndeps: [‘bar’],\nexports: ‘Foo’,\ninit: function (bar) {\nreturn this.Foo.noConflict();\n}\n}</p>\n<p>}\n});\ndefine([‘backbone’], function (Backbone) {\nreturn Backbone.Model.extend({});\n});\n**Backbone 强制依赖于 Underscore.js,非强制依赖于 jQuery/Zepto.故 **</p>\n</li>\n<li>shim 配置<strong>仅设置了代码的依赖关系</strong>，想要实际加载 shim 指定的或涉及的模块，仍然需要一个常规的 require/define 调用。设置 shim 本身不会触发代码的加载。</li>\n<li>成为 shim 脚本依赖的三个可选条件: - 使用其他”shim”模块作为 shim 脚本的依赖， - 在调用 define()之前定义了全局变量(如 jQuery 或 lodash)的 AMD 库, 这样调用不会出错(例如将 jquery 先在 path 中声明)。 - CMD 库</li>\n<li>\n<p><strong>map</strong>:对于给定的模块前缀，使用一个不同的模块 ID 来加载该模块。<br>\n该手段对于某些大型项目很重要：如有两类模块需要使用不同版本的”foo”，但它们之间仍需要一定的协同。 在那些基于上下文的多版本实现中很难做到这一点。而且，paths 配置仅用于为模块 ID 设置 root paths，而不是为了将一个模块 ID 映射到另一个。</p>\n<p>  \trequirejs.config({\nmap: {\n‘some/newmodule’: {\n‘foo’: ‘foo1.2’\n},\n‘some/oldmodule’: {\n‘foo’: ‘foo1.0’\n}\n}\n});</p>\n</li>\n</ul>\n<p>当“some/newmodule”调用了“require(‘foo’)”，它将获取到 foo1.2.js 文件；<br>\n而当“some/oldmodule”调用“`require(‘foo’)”时它将获取到 foo1.0.js。</p>\n<ul>\n<li>\n<p><strong>config</strong>:<strong>将配置信息向下传给一个模块</strong>。这些配置往往是 application 级别的信息，需要一个手段将它们向下传递给模块。在 RequireJS 中，基于 requirejs.config()的 config 配置项来实现。要获取这些信息的模块可以<strong>加载特殊的依赖“module”</strong>，并调用<strong>module.config()</strong>。</p>\n<p>  \trequirejs.config({</p>\n<p>config: {\n‘bar’: {\nsize: ‘large’\n},\n‘baz’: {\ncolor: ‘blue’\n}\n}\n});\n//调用 config 的内容\ndefine([‘module’], function (module) {\n//Will be the value ‘blue’\nvar color = module.config().color;\n});\n//commonJS 模式\ndefine(function (require, exports, module) {\n//Will be the value ‘large’\nvar color = module.config().size;\n});</p>\n</li>\n</ul>\n<p>版本支持, requirejs 延迟加载, 依赖注入!!!</p>\n<hr>\n<blockquote>\n<p><strong>require 函数</strong>的变态用法,直接上代码, 记住 require(或者 requirejs, 两个一样)是个函数.</p>\n</blockquote>\n<p>var reqOne = require.config({\ncontext: “version1”,\nbaseUrl: “version1”\n});</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\treqOne([&quot;require&quot;, &quot;alpha&quot;, &quot;beta&quot;,],function(require,   alpha,   beta) {</code></pre></div>\n<p>log(“alpha version is: ” + alpha.version); //prints 1\nlog(“beta version is: ” + beta.version); //prints 1</p>\n<p>setTimeout(function() {\n//延迟加载,需要在前面依赖’require’\nrequire([“omega”],function(omega) {\nlog(“version1 omega loaded with version: ” +omega.version);\n//prints 1\n}\n);\n}, 100);\n});</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\tvar reqTwo = require.config({\n  \t\tcontext: &quot;version2&quot;,\n  \t\tbaseUrl: &quot;version2&quot;\n\t});\n\n\treqTwo([&quot;require&quot;, &quot;alpha&quot;, &quot;beta&quot;],function(require,   alpha,   beta) {</code></pre></div>\n<p>log(“alpha version is: ” + alpha.version); //prints 2\nlog(“beta version is: ” + beta.version); //prints 2</p>\n<p>setTimeout(function() {\n//延迟加载,需要在前面依赖’require’\nrequire([“omega”],function(omega) {\nlog(“version2 omega loaded with version: ” +omega.version);\n//prints 2\n}\n);\n}, 100);\n});</p>\n<p>如果没有指定“require”依赖，则很可能会出现错误。</p>\n<p>paths 备错配置</p>\n<hr>\n<p>paths 配置如下:</p>\n<p>paths: {\njquery: [\n‘http://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min’,\n/如果没找到 CDN 则加载下面位置的 jquery\n‘lib/jquery’\n]\n}</p>\n<p>页面加载控制及 DOM Ready 事件监听</p>\n<hr>\n<p>需要与 DOM 交互的工作应等待 DOM Ready。现代的浏览器通过 DOMContentLoaded 事件来知会。但是，不是所有的浏览器都支持 DOMContentLoaded。<strong>domReady 模块</strong>实现了一个跨浏览器的方法来判定何时 DOM 已经 ready。下载并在你的项目中如此用它：</p>\n<p>require([‘domReady’], function (domReady) {\ndomReady(function () {\n//Dom ready 后调才执行这里的函数\n//需要操作 DOM 的代码放置在这里\n});\n});\n//ps,可以用下面的结构,与主结构分开,避免耗时导致其他 js 不执行\nvar reqDOM = requirejs.config({…});\nreqDOM([‘domReady’],function(domReady){\ndomReady(function () {\n//Dom ready 后调才执行这里的函数\n//需要操作 DOM 的代码放置在这里\n});\n});</p>\n<h2 id=\"requirejs-require-define-的区别\" style=\"position:relative;\"><a href=\"#requirejs-require-define-%E7%9A%84%E5%8C%BA%E5%88%AB\" aria-label=\"requirejs require define 的区别 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requirejs, require, define 的区别</h2>\n<blockquote>\n<p>requirejs, require 两个使用起来完全一样, 也找不到区别的方法…<br>\nrequirejs.config()或者 require.config()</p>\n</blockquote>\n<p>define 和 require 在依赖处理和回调执行上都是一样的，不一样的地方是<strong>define 的回调函数需要有 return 语句返回模块对象</strong>，这样 define 定义的模块才能被其他模块引用；<strong>require 的回调函数不需要 return 语句</strong>。</p>\n<blockquote>\n<p>著作权归作者所有。<br>\n商业转载请联系作者获得授权，非商业转载请注明出处。<br>\n作者：Xin You<br>\n链接：<a href=\"http://www.zhihu.com/question/21260764/answer/50194362\" target=\"_target\" rel=\"nofollow\">http://www.zhihu.com/question/21260764/answer/50194362</a><br>\n来源：知乎</p>\n</blockquote>\n<p>所以,<strong>define 定义 require 加载使用，这个理解是对的。</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">define([require,path/myMod1,path/moMod2], function(require){\n\tvar mod1 = require(&#39;path/myMod1&#39;), mod2 = require(&#39;path/myMod2&#39;);\n})\n\n其实逻辑上类似于\n\ndefine([require], function(require){\n\tvar mod1 = require(&#39;path/myMod1&#39;), mod2 = require(&#39;path/myMod2&#39;);\n})\n\n你只是把参数丢了而已，所以这样也行\n\ndefine([require,path/myMod1,path/moMod2], function(require){\n\tvar mod1 = arguments[1], mod2 = arguments[2];\n})\n\n所以，可以这么用\n\ndefine([require,path/myMod1,path/moMod2], function(require,mod1,mod2){\n\t// 这里 mod1 和 mod2 都准备好了，还可以用require继续加载别的\n})\n\n或者，改成你看到的那些例子\n\ndefine([path/myMod1,path/moMod2], function(mod1,mod2){\n})\n\n\n\n所以\n\ndefine([&#39;jquery.validate&#39;], function(validate){\n\t// 这里可以用validate，但是用不了jquery了？\n})\n\n这样本质上并没有问题，只不过你引用了这个插件，必然也是想用jquery的而不只是validate，\n\n所以\n\ndefine([&#39;jquery&#39;, &#39;jquery.validate&#39;], function(jquery, validate){\n\t// 这样才有jquery\n})\n\n像你一开始那样使用也行\n\ndefine([&#39;require&#39;, &#39;jquery.validate&#39;], function(require, validate){\n\tvar jquery = require(&#39;jquery&#39;);\n})</code></pre></div>","timeToRead":11,"wordCount":{"paragraphs":57,"sentences":57,"words":616},"fields":{"slug":"/RequireJS/","relativePath":"2015/2015-12-10---RequireJS/index.md"},"excerpt":"第一次看官网的说明真是一头雾水,再次学习的时候感觉思路清晰很多,因此在这总结. 为什么使用 requirejs? 下面是我认为的原因: 代码逻辑复杂需要模块化管理; 在 js 文件中引入其他 js…","frontmatter":{"title":"RequireJS","date":"10 Dec 2015","tags":["RequireJS"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/jin-du-duo-xian-shi/","prev":"/RequireJS/","next":"/JSONP-kua-yu-fang-wen-fu-wu/"}},"staticQueryHashes":["3240721340","63159454"]}