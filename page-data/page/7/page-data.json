{"componentChunkName":"component---src-pages-index-js","path":"/page/7","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","author":"@烈风裘","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","avatar":"/avatar/me.jpeg"}},{"node":{"id":"WALL-E","avatar":"/avatar/cleaner.jpg"}}]},"allMarkdownRemark":{"totalCount":87},"currentMarkdownRemark":{"totalCount":87,"edges":[{"node":{"excerpt":"这个是在组件开发中遇到的问题，当时我在编写 button 的组件，模板是这样的： 使用是这样子的： 根据 Vue2.0 官方文档关于父子组件通讯的原则，父组件通过 prop 传递数据给子组件，子组件触发事件给父组件。但父组件想在子组件上监听自己的 click 的话，需要加上修饰符，故写法就像上面这样。 好吧，处女座的毛病又来了。像 button 这样常用的组件如果加上 native 的话是感觉很突兀的。虽然组件设计有自身的考虑，因此我想将 click 的 native…","fields":{"slug":"/Vue2-zhi-qu-diao-zu-jian-de-di/"},"frontmatter":{"title":"Vue2之去掉组件的click事件的native修饰","tags":["Vue"],"star":false,"date":"25 Dec 2016","author":"烈风裘"}}},{"node":{"excerpt":"这个不是业务的要求，但是看到每次进入页面就重新渲染 DOM 然后再获取数据更新 DOM，觉得作为一个前端工程师有必要优化下的加载逻辑，正好 vue 提供了的功能，所以就试用了下。当然，干任何事儿都不会一帆风顺的，在路上的磕磕碰碰在所难免，故在此记录下遇到的问题，希望看到这篇文章的人能有所帮助。ps：这个也没多难。 HTML 部分： JavaScript 部分：…","fields":{"slug":"/lu-you-kai-qi-keep-alive-shi-de/"},"frontmatter":{"title":"路由开启keep-alive时的注意点","tags":["Vue"],"star":false,"date":"16 Dec 2016","author":"烈风裘"}}},{"node":{"excerpt":"这篇 PPT 是关于最近在做 H5 版杭州公交的经验分享，里面部分细节也包括工作一年的总结。 简介 简介 Vue 是我在 8 月份第一次接触，用周末两天时间熟悉了下 API 及 Vue 全家桶，框架学完练练手可以熟悉思路，在之后的项目中能马上使用到。所以我将我的博客从 Angualr1.3 改写到 Vue1.0，花了不少下班时间。项目是由 vue-cli 基础上开发，现已在 GitHub 上开源，另外还包括对博客支持的后台代码，使用的是 Node+Express+Mongodb。 之后 Vue…","fields":{"slug":"/VueIntroduce/"},"frontmatter":{"title":"Vue Introduce","tags":["Vue"],"star":false,"date":"11 Dec 2016","author":"烈风裘"}}},{"node":{"excerpt":"这篇文章主要介绍了如何在 WebStorm 中进行配置达到对 Vue 的完美支持，包括代码检查、自动排版等。 Plugins 安装 首先两个插件是必不可缺少的，这个需要在 WebStorm->Preferences->Plugins 中搜索’vue-for-idea’插件。另外’Vue.js’这个插件不好用，别安装！！ 默认模板修改 依次进入顺序： WebStorm->Preferences->Editor->Code Stype->File andCode Templates 之后选择 Vue…","fields":{"slug":"/WebStorm-zhong-dui-Vue-de-d/"},"frontmatter":{"title":"WebStorm中对Vue的支持","tags":["WebStorm","Vue"],"star":false,"date":"10 Dec 2016","author":"烈风裘"}}},{"node":{"excerpt":"相同的内容经过实战的熏陶再次看看会有不同的体验，这里对 Vue 官方文档再次学习，总结下使用过的与未使用的部分，以期在未来能写出更好的 Vue 代码。 Vue 构造器内部的事儿 为了方便函数调用及数据调用，在书写 Vue 的时候都是在 new Vue({})进行，我这里主要在函数内这个角度进行总结，希望能开拓你的角度。先上一个大概框架，这也是我在进行项目的时候多次复制粘贴的部分，之后我对下面的部分我逐一讲解： 1. 挂载位置 显式的在 HTML 中定义 Vue 的作用范围，使用 id…","fields":{"slug":"/Vue-xue-xi-xiao-jie/"},"frontmatter":{"title":"Vue学习小结","tags":["Vue"],"star":false,"date":"04 Dec 2016","author":"烈风裘"}}},{"node":{"excerpt":"安装  常用命令 npm 命令 yarn 命令 说明   install 安装是默认行为   taco 包立即被保存到 package.json 中   在 yarn 中，在 package.json 中添加（add）和移除（remove）等行为是默认的         请谨慎使用 global 标记                     运行命令    Yarn 独有命令 yarn 命令 说明  允许你检查依赖的许可信息  自动创建依赖免责声明 license  检查为什么会安装 taco…","fields":{"slug":"/Yarn-ming-ling/"},"frontmatter":{"title":"Yarn命令","tags":["Yarn"],"star":false,"date":"03 Dec 2016","author":"烈风裘"}}},{"node":{"excerpt":"DOM 事件流 分为三个阶段：事件捕获阶段、目标阶段、事件冒泡阶段。 事件捕获老版本浏览器（IE<=8）不支持，但是事件冒泡可以放心使用。 12 事件处理程序 一共四类写法，基本都见过，看下写法就知道怎么回事儿了。 1. HTML 事件处理程序 2. DOM0 级事件处理程序 3. DOM2 级事件处理程序 定义事件及删除事件的两个方法：addEventListener、removeEventListener。 第三个参数：true，表示在捕获阶段触发；false…","fields":{"slug":"/shi-jian-mo-mu-xing/"},"frontmatter":{"title":"事件模型","tags":["DOM"],"star":false,"date":"23 Oct 2016","author":"烈风裘"}}},{"node":{"excerpt":"什么是 arguments arguments 是一个类数组的对象，代表传给一个 function 的参数列表。 arguments 操作 arguments length arguments 是个类数组对象，其包含一个 length 属性，可以用 arguments.length 来获得传入函数的参数个数。 arguments 转数组 arguments 传递出去 将函数的 arguments 对象泄露出去了，最终的结果就是 V…","fields":{"slug":"/JavaScriptarguments-dui-xiang-quan/"},"frontmatter":{"title":"JavaScript arguments 对象全面介绍","tags":["JavaScript"],"star":false,"date":"22 Oct 2016","author":"烈风裘"}}},{"node":{"excerpt":"浏览器缓存机制一般分为两种：HTML Meta 标签控制缓存和 HTTP 头信息。 HTML Meta 标签控制缓存 非 HTTP 协议定义的缓存机制，如使用 HTML Meta 标签，Web 开发者可以在 HTML 页面的节点中加入标签，代码如下： 参数可以是以下值： expires(期限) 、Pragma(cache 模式)、Refresh(刷新) 、\nSet-Cookie(cookie 设定) 、Window-target(显示窗口的设定) 、\ncontent-Type…","fields":{"slug":"/ye-mian-huan-cun-she-zhi/"},"frontmatter":{"title":"页面缓存设置","tags":["缓存"],"star":false,"date":"22 Oct 2016","author":"烈风裘"}}},{"node":{"excerpt":"先描述下问题 Webapp 在上传图片的时候，会出现旋转 90° 的问题，但是在上传前预览图片是没问题的。这是因为什么呢？ 原因在这边博客中说的很清楚了，查看这里：移动端 Web 上传图片实践。也就是说，对于 IOS 或者上传数码相机拍摄的图片时，为了保证快读读写所以就没对图片进行方向矫正，而是使用一个字段 Orientation 保存方向。故对这种情况需要进行图片方向的纠正。 这种问题的修复有两种： 第一种方法是后台修正，插件 GraphicsMagick提供的 API…","fields":{"slug":"/tu-pian-ya-suo-su-ji-fang-xiang-xiu-zheng/"},"frontmatter":{"title":"图片压缩及方向修正","tags":["图片压缩","图片修正"],"star":false,"date":"20 Oct 2016","author":"烈风裘"}}}]}},"pageContext":{"skip":60,"limit":10}},"staticQueryHashes":["3240721340","63159454"]}