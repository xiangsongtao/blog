{"componentChunkName":"component---src-templates-blog-post-js","path":"/di-ba-zhang-BOM/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<h3 id=\"1-code-classlanguage-textwindowcodecode-classlanguage-texttopcodecode-classlanguage-textselfcodecode-classlanguage-textparentcodecode-classlanguage-textglobalcode这些对象的含义和区别\" style=\"position:relative;\"><a href=\"#1-code-classlanguage-textwindowcodecode-classlanguage-texttopcodecode-classlanguage-textselfcodecode-classlanguage-textparentcodecode-classlanguage-textglobalcode%E8%BF%99%E4%BA%9B%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%90%AB%E4%B9%89%E5%92%8C%E5%8C%BA%E5%88%AB\" aria-label=\"1 code classlanguage textwindowcodecode classlanguage texttopcodecode classlanguage textselfcodecode classlanguage textparentcodecode classlanguage textglobalcode这些对象的含义和区别 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <code class=\"language-text\">window</code>/<code class=\"language-text\">top</code>/<code class=\"language-text\">self</code>/<code class=\"language-text\">parent</code>/<code class=\"language-text\">Global</code>这些对象的含义和区别?</h3>\n<ul>\n<li><code class=\"language-text\">window</code>，它表示浏览器的一个实例</li>\n<li><code class=\"language-text\">window</code> 对象还是 ECMAScript 中的 <code class=\"language-text\">Global</code> 对象，因而所有全局变量和函数都是它的属性，且所有原生的构造 函数及其他函数也都存在于它的命名空间下</li>\n<li>此外, 页面可能包含很多 frames</li>\n<li><code class=\"language-text\">top</code> 对象始终指向最外围的框架(frames)，也就是整个浏览器窗口</li>\n<li><code class=\"language-text\">parent</code> 对象表示包含当前框架的框架，而 self 对象则回指 <code class=\"language-text\">window</code></li>\n<li>在没有框架的情况下，<code class=\"language-text\">parent</code> 一定等于 <code class=\"language-text\">top</code>（此时它们都等于 <code class=\"language-text\">window</code>）</li>\n<li>与框架有关的最后一个对象是 self，它始终指向 <code class=\"language-text\">window</code>；实际上，<code class=\"language-text\">self</code> 和 <code class=\"language-text\">window</code> 对象可以互 换使用, 引入 <code class=\"language-text\">self</code> 对象的目的只是为了与 <code class=\"language-text\">top</code> 和 <code class=\"language-text\">parent</code> 对象对应起来，因此它不格外包含其他值。</li>\n</ul>\n<h3 id=\"2-为什么不建议在全局对象上保存业务变量\" style=\"position:relative;\"><a href=\"#2-%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E5%9C%A8%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1%E4%B8%8A%E4%BF%9D%E5%AD%98%E4%B8%9A%E5%8A%A1%E5%8F%98%E9%87%8F\" aria-label=\"2 为什么不建议在全局对象上保存业务变量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 为什么不建议在全局对象上保存业务变量?</h3>\n<ul>\n<li>在全局作用域中定义了的变量和函数，它们被自动归在了 window 对象 名下</li>\n<li><strong>注意:</strong> 在 window 对象上定义属性在 IE>=9 时能安全删除. “自动行为”不可以.</li>\n<li>命名冲突等</li>\n<li>以上就是可能存在的问题</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">29</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// IE >=9 不能安全删除</span>\nwindow<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// IE >=9 可安全删除</span>\n\n<span class=\"token comment\">//在 IE &lt; 9 时抛出错误，在其他所有浏览器中都返回 false</span>\n<span class=\"token keyword\">delete</span> window<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//在 IE &lt; 9 时抛出错误，在其他所有浏览器中都返回 true</span>\n<span class=\"token keyword\">delete</span> window<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span> <span class=\"token comment\">//returns true</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//29</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//undefined</span></code></pre></div>\n<h3 id=\"3-获取窗口位置及移动窗口的接口有什么问题\" style=\"position:relative;\"><a href=\"#3-%E8%8E%B7%E5%8F%96%E7%AA%97%E5%8F%A3%E4%BD%8D%E7%BD%AE%E5%8F%8A%E7%A7%BB%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%9A%84%E6%8E%A5%E5%8F%A3%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98\" aria-label=\"3 获取窗口位置及移动窗口的接口有什么问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 获取窗口位置及移动窗口的接口有什么问题?</h3>\n<ul>\n<li><strong>无法在跨浏览器的条件下</strong>取得窗口左边和上边的<strong>精确坐标值</strong></li>\n<li>使用 moveTo() 和 moveBy() 方法倒是有可能将窗口精确地移动到一个新位置, 但是不一定会生效, 因为可能会被浏览器禁用</li>\n</ul>\n<h3 id=\"4-浏览器窗口大小-api-有什么使用问题\" style=\"position:relative;\"><a href=\"#4-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F-api-%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98\" aria-label=\"4 浏览器窗口大小 api 有什么使用问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 浏览器窗口大小 api 有什么使用问题?</h3>\n<ul>\n<li>无法确定浏览器窗口本身的大小，但却可以取得页面视口的大小</li>\n<li>使用 resizeTo()和 resizeBy()方法可以调整浏览器窗口的大小, 也有可能被浏览器禁用</li>\n</ul>\n<h3 id=\"5-使用-windowopen的问题\" style=\"position:relative;\"><a href=\"#5-%E4%BD%BF%E7%94%A8-windowopen%E7%9A%84%E9%97%AE%E9%A2%98\" aria-label=\"5 使用 windowopen的问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 使用 window.open()的问题?</h3>\n<p>可能会因为<strong>安全问题</strong>屏蔽代码自动开启新窗口.</p>\n<h3 id=\"6-historylength-的含义\" style=\"position:relative;\"><a href=\"#6-historylength-%E7%9A%84%E5%90%AB%E4%B9%89\" aria-label=\"6 historylength 的含义 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. history.length 的含义?</h3>\n<p>这个数量 包括所有历史记录，即所有向后和向前的记录。因此, <strong>无法通过这个判断当前页面进入的方式(前进/后退), 需要内建记录判断</strong>.</p>","timeToRead":3,"wordCount":{"paragraphs":23,"sentences":24,"words":90},"fields":{"slug":"/di-ba-zhang-BOM/","relativePath":"2018/2018-02-28---di-ba-zhang-BOM/index.md"},"excerpt":"1. ////这些对象的含义和区别? ，它表示浏览器的一个实例  对象还是 ECMAScript…","frontmatter":{"title":"第八章 BOM","date":"28 Feb 2018","tags":["JS高程"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<p>至少是我这里的前端开发都是自顶向下的模式, 即先按照支持程度最高的浏览器上开发, 之后再适配其他浏览器. 因此, 适配过程就需要对不同的客户端.</p>\n<h2 id=\"能力检测\" style=\"position:relative;\"><a href=\"#%E8%83%BD%E5%8A%9B%E6%A3%80%E6%B5%8B\" aria-label=\"能力检测 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>能力检测</h2>\n<p>H5 能力检测, 比如这个库: <a href=\"https://modernizr.com/\" target=\"_target\" rel=\"nofollow\">modernizr</a></p>\n<h2 id=\"怪癖检测bug-检测\" style=\"position:relative;\"><a href=\"#%E6%80%AA%E7%99%96%E6%A3%80%E6%B5%8Bbug-%E6%A3%80%E6%B5%8B\" aria-label=\"怪癖检测bug 检测 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>怪癖检测(Bug 检测)</h2>\n<p>一般情况下不推荐使用.</p>\n<h2 id=\"useragent-检测\" style=\"position:relative;\"><a href=\"#useragent-%E6%A3%80%E6%B5%8B\" aria-label=\"useragent 检测 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>userAgent 检测</h2>\n<p>一般通过正则匹配 userAgent 进行平台鉴别. 例如:</p>\n<ul>\n<li><a href=\"https://faisalman.github.io/ua-parser-js/\" target=\"_target\" rel=\"nofollow\">UAParser.js</a> Lightweight JavaScript-based User-Agent String Parser</li>\n</ul>","timeToRead":1,"wordCount":{"paragraphs":8,"sentences":10,"words":26},"fields":{"slug":"/di-jiu-zhang-ke-hu-duan-jian-ce/","relativePath":"2018/2018-02-28---di-jiu-zhang-ke-hu-duan-jian-ce/index.md"},"excerpt":"至少是我这里的前端开发都是自顶向下的模式, 即先按照支持程度最高的浏览器上开发, 之后再适配其他浏览器. 因此, 适配过程就需要对不同的客户端. 能力检测 H5 能力检测, 比如这个库: modernizr…","frontmatter":{"title":"第九章 客户端检测","date":"28 Feb 2018","tags":["JS高程"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<h3 id=\"1-对-dom-树形结构的理解\" style=\"position:relative;\"><a href=\"#1-%E5%AF%B9-dom-%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E7%9A%84%E7%90%86%E8%A7%A3\" aria-label=\"1 对 dom 树形结构的理解 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 对 DOM 树形结构的理解?</h3>\n<h4 id=\"dom-解释\" style=\"position:relative;\"><a href=\"#dom-%E8%A7%A3%E9%87%8A\" aria-label=\"dom 解释 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 解释</h4>\n<p><strong>DOM(文档对象模型)</strong>, 是针对类 HTML 层次化节点树<strong>操作</strong>的一个<strong>API(应用程序编程接口)</strong>集合. 用于更改底层文档及外观结构.</p>\n<h4 id=\"根节点\" style=\"position:relative;\"><a href=\"#%E6%A0%B9%E8%8A%82%E7%82%B9\" aria-label=\"根节点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>根节点</h4>\n<p>树中的节点可以由多种<strong>Node 类型</strong>组成, 根节点称之为<strong>文档元素</strong>(传说的<code class=\"language-text\">document</code>), 即<code class=\"language-text\">&lt;html&gt;&lt;/html&gt;</code>.</p>\n<h4 id=\"node-类型\" style=\"position:relative;\"><a href=\"#node-%E7%B1%BB%E5%9E%8B\" aria-label=\"node 类型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node 类型</h4>\n<p>类型可以是:</p>\n<ul>\n<li><strong>Node.ELEMENT_NODE(1)</strong>；子元素</li>\n<li>Node.ATTRIBUTE_NODE(2)；</li>\n<li><strong>Node.TEXT_NODE(3)</strong>； 文本</li>\n<li>Node.CDATA<em>SECTION</em>NODE(4)；</li>\n<li>Node.ENTITY<em>REFERENCE</em>NODE(5)；</li>\n<li>Node.ENTITY_NODE(6)；</li>\n<li>Node.PROCESSING<em>INSTRUCTION</em>NODE(7)；</li>\n<li><strong>Node.COMMENT_NODE(8)</strong>；注释</li>\n<li><strong>Node.DOCUMENT_NODE(9)</strong>；表示整个 HTML 页面, document</li>\n<li>Node.DOCUMENT<em>TYPE</em>NODE(10)；</li>\n<li>Node.DOCUMENT<em>FRAGMENT</em>NODE(11)；</li>\n<li>Node.NOTATION_NODE(12)</li>\n</ul>\n<p>每个类型所具有的 API 及同名 API 的含义不同, 使用前先判断下.</p>\n<p>此外, <code class=\"language-text\">NodeList</code>类型是类数组对象, 如果要像数组使用, 需要转化一下:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"node-查找-api\" style=\"position:relative;\"><a href=\"#node-%E6%9F%A5%E6%89%BE-api\" aria-label=\"node 查找 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node 查找 API</h4>\n<p>关于 Node 前后的关系属性需要知道的名称有:</p>\n<ul>\n<li><code class=\"language-text\">firstChild()</code></li>\n<li><code class=\"language-text\">lastChild()</code></li>\n<li><code class=\"language-text\">parentNode()</code></li>\n<li><code class=\"language-text\">childNodes()</code> (注意<code class=\"language-text\">hanChildNodes()</code>函数判断是否有子节点)</li>\n<li><code class=\"language-text\">nextSlibing()</code></li>\n<li><code class=\"language-text\">previousSlibling()</code></li>\n</ul>\n<h4 id=\"node-操作-api\" style=\"position:relative;\"><a href=\"#node-%E6%93%8D%E4%BD%9C-api\" aria-label=\"node 操作 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node 操作 API</h4>\n<ul>\n<li><code class=\"language-text\">appendChild()</code> 向 childNodes 列表的末尾添加一个节点, 更新完毕返回新增节点</li>\n<li><code class=\"language-text\">insertBefore()</code> 在某个特定的位置上插入节点</li>\n<li><code class=\"language-text\">replaceChild()</code></li>\n<li><code class=\"language-text\">removeChild()</code></li>\n<li><code class=\"language-text\">cloneNode()</code> 建议复制前先移除上面的事件绑定, IE 有问题</li>\n</ul>\n<h3 id=\"2-code-classlanguage-textltdoctypegtcode是什么含义-不写或写错会有什么后果\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-textltdoctypegtcode%E6%98%AF%E4%BB%80%E4%B9%88%E5%90%AB%E4%B9%89-%E4%B8%8D%E5%86%99%E6%88%96%E5%86%99%E9%94%99%E4%BC%9A%E6%9C%89%E4%BB%80%E4%B9%88%E5%90%8E%E6%9E%9C\" aria-label=\"2 code classlanguage textltdoctypegtcode是什么含义 不写或写错会有什么后果 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">&lt;!DOCTYPE&gt;</code>是什么含义, 不写或写错会有什么后果?</h3>\n<p>用来声明文档类型, 通过<code class=\"language-text\">document.doctype</code>获得. 用于告诉浏览器当前的文档所使用标记(标签)版本, <strong>影响最终的页面呈现效果</strong>!</p>\n<p>如果页面没写着行说明, 则浏览器解析页面会出现怪异行为, 比如盒模型/size 解析/内联元素尺寸/图片对齐方式等.</p>\n<h3 id=\"3-如何获取对-code-classlanguage-textbodycode--code-classlanguage-texthtmlcode-node-节点的引用\" style=\"position:relative;\"><a href=\"#3-%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AF%B9-code-classlanguage-textbodycode--code-classlanguage-texthtmlcode-node-%E8%8A%82%E7%82%B9%E7%9A%84%E5%BC%95%E7%94%A8\" aria-label=\"3 如何获取对 code classlanguage textbodycode  code classlanguage texthtmlcode node 节点的引用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 如何获取对 <code class=\"language-text\">body</code> / <code class=\"language-text\">html</code> Node 节点的引用?</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 同理</span>\n<span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"4-在code-classlanguage-textltdoctypegtcode前或者code-classlanguage-textlthtmlgtcode前后写注释会有什么影响\" style=\"position:relative;\"><a href=\"#4-%E5%9C%A8code-classlanguage-textltdoctypegtcode%E5%89%8D%E6%88%96%E8%80%85code-classlanguage-textlthtmlgtcode%E5%89%8D%E5%90%8E%E5%86%99%E6%B3%A8%E9%87%8A%E4%BC%9A%E6%9C%89%E4%BB%80%E4%B9%88%E5%BD%B1%E5%93%8D\" aria-label=\"4 在code classlanguage textltdoctypegtcode前或者code classlanguage textlthtmlgtcode前后写注释会有什么影响 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 在<code class=\"language-text\">&lt;!DOCTYPE&gt;</code>前或者<code class=\"language-text\">&lt;html&gt;</code>前后写注释会有什么影响?</h3>\n<p>不同浏览器间对注释的解释不一致, 导致了位于<html>元素外部的注释没有什么用处.</p>\n<p>另外, document 属性是只读的, 在其前后插入 Node 不可行.</p>\n<h3 id=\"5-不同域或者子域因为跨域安全限制-不能-js-直接通信-怎么破\" style=\"position:relative;\"><a href=\"#5-%E4%B8%8D%E5%90%8C%E5%9F%9F%E6%88%96%E8%80%85%E5%AD%90%E5%9F%9F%E5%9B%A0%E4%B8%BA%E8%B7%A8%E5%9F%9F%E5%AE%89%E5%85%A8%E9%99%90%E5%88%B6-%E4%B8%8D%E8%83%BD-js-%E7%9B%B4%E6%8E%A5%E9%80%9A%E4%BF%A1-%E6%80%8E%E4%B9%88%E7%A0%B4\" aria-label=\"5 不同域或者子域因为跨域安全限制 不能 js 直接通信 怎么破 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 不同域或者子域因为跨域安全限制, 不能 JS 直接通信, 怎么破?</h3>\n<ul>\n<li>不同域无法破解</li>\n<li>相同子域可修改<code class=\"language-text\">document.domain</code>解决</li>\n</ul>\n<p>比如: p2p.wrox.com 和 wrox.com js 通信, 可在 p2p.wrox.com 的网页中设置:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>domain <span class=\"token operator\">=</span> <span class=\"token string\">\"wrox.com\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>之后即可通讯, 如果 wrox.com -> p2p.wrox.com 这样是不行的.</p>\n<h3 id=\"6-code-classlanguage-textdocumentwritecode在文档加载结束前后使用有什么差异\" style=\"position:relative;\"><a href=\"#6-code-classlanguage-textdocumentwritecode%E5%9C%A8%E6%96%87%E6%A1%A3%E5%8A%A0%E8%BD%BD%E7%BB%93%E6%9D%9F%E5%89%8D%E5%90%8E%E4%BD%BF%E7%94%A8%E6%9C%89%E4%BB%80%E4%B9%88%E5%B7%AE%E5%BC%82\" aria-label=\"6 code classlanguage textdocumentwritecode在文档加载结束前后使用有什么差异 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. <code class=\"language-text\">document.write()</code>在文档加载结束前后使用有什么差异?</h3>\n<ul>\n<li>文档加载结束前: 会在输出流中写入内部文本, 可<strong>用于动态包含外部资源</strong></li>\n<li>文档加载结束后: 会用内部文本重写整个页面</li>\n</ul>\n<h3 id=\"7-这段代码的问题是\" style=\"position:relative;\"><a href=\"#7-%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98%E6%98%AF\" aria-label=\"7 这段代码的问题是 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 这段代码的问题是?</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>document.write() Example 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n\tdocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;script type=\\\"text/javascript\\\" src=\\\"file.js\\\">\"</span>\n\t<span class=\"token operator\">+</span> \"</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\");\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>代码到这里<code class=\"language-text\">+ &quot;&lt;/script&gt;&quot;);</code>会终止, 页面最后一行显示<code class=\"language-text\">&quot;);</code>文本.</p>\n<p>解决办法是将<code class=\"language-text\">+ &quot;&lt;/script&gt;&quot;);</code>替换为<code class=\"language-text\">+ &quot;&lt;\\/script&gt;&quot;);</code></p>\n<h3 id=\"8-动态插入脚本的一般过程\" style=\"position:relative;\"><a href=\"#8-%E5%8A%A8%E6%80%81%E6%8F%92%E5%85%A5%E8%84%9A%E6%9C%AC%E7%9A%84%E4%B8%80%E8%88%AC%E8%BF%87%E7%A8%8B\" aria-label=\"8 动态插入脚本的一般过程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 动态插入脚本的一般过程?</h3>\n<h4 id=\"插入外部文件\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E5%85%A5%E5%A4%96%E9%83%A8%E6%96%87%E4%BB%B6\" aria-label=\"插入外部文件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插入外部文件</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadScript</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"直接插入代码\" style=\"position:relative;\"><a href=\"#%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81\" aria-label=\"直接插入代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>直接插入代码</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadScriptString</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    script<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    script<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"9-插入样式的一般过程\" style=\"position:relative;\"><a href=\"#9-%E6%8F%92%E5%85%A5%E6%A0%B7%E5%BC%8F%E7%9A%84%E4%B8%80%E8%88%AC%E8%BF%87%E7%A8%8B\" aria-label=\"9 插入样式的一般过程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 插入样式的一般过程?</h3>\n<p><strong>!!样式插入到 head 中!!</strong></p>\n<h4 id=\"插入外部文件-1\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E5%85%A5%E5%A4%96%E9%83%A8%E6%96%87%E4%BB%B6-1\" aria-label=\"插入外部文件 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插入外部文件</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadStyles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>rel <span class=\"token operator\">=</span> <span class=\"token string\">\"stylesheet\"</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/css\"</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"直接插入代码-1\" style=\"position:relative;\"><a href=\"#%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81-1\" aria-label=\"直接插入代码 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>直接插入代码</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadStyleString</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">css</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  style<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/css\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">.</span>styleSheet<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">=</span> css<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"10-nodelist-特性理解\" style=\"position:relative;\"><a href=\"#10-nodelist-%E7%89%B9%E6%80%A7%E7%90%86%E8%A7%A3\" aria-label=\"10 nodelist 特性理解 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. NodeList 特性理解?</h3>\n<ul>\n<li><strong>动态</strong>的集合, 当文档更新后再次获取 NodeList 能拿到更新结果</li>\n<li>操作 DOM 很耗时, <strong>应该尽量减少访问 NodeList 的次数</strong>. 因为每次访问 NodeList，都会运行一次基于文档的查询.</li>\n</ul>","timeToRead":7,"wordCount":{"paragraphs":63,"sentences":67,"words":181},"fields":{"slug":"/di-shi-zhang-DOM/","relativePath":"2018/2018-03-04---di-shi-zhang-DOM/index.md"},"excerpt":"1. 对 DOM 树形结构的理解? DOM 解释 DOM(文档对象模型), 是针对类 HTML 层次化节点树操作的一个API(应用程序编程接口)集合. 用于更改底层文档及外观结构. 根节点 树中的节点可以由多种Node…","frontmatter":{"title":"第十章 DOM","date":"04 Mar 2018","tags":["JS高程"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/di-ba-zhang-BOM/","prev":"/di-shi-zhang-DOM/","next":"/di-jiu-zhang-ke-hu-duan-jian-ce/"}},"staticQueryHashes":["3240721340","63159454"]}