{"componentChunkName":"component---src-templates-blog-post-js","path":"/liu-lan-qi-jian-rong-xing-wen-ti-ji-jie/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/me.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangsongtao","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangsongtao.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/me.jpeg","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangsongtao","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangsongtao.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<p><img src=\"https://drscdn.500px.org/photo/72944089/m%3D2048/bee828b2bca1bca21d335bccae466489\" alt=\"可畏的前端\"></p>\n<p>浏览器兼容性问题是指因为不同的浏览器对同一段 CSS 代码或者 JS 代码解析不同导致页面显示效果不统一或者脚本执行错误的情况。一般情况下，我们希望用户无论使用什么浏览器来查看网页效果都应该是一样的。浏览器的兼容性问题是 Web 前端开发人员经常会碰到的和必须要解决的问题。</p>\n<p>浏览器兼容的部分一般分为 CSS 部分和 JS 部分，JS 部分请参考<a href=\"http://www.jianshu.com/p/8cd605d14e19\" target=\"_target\" rel=\"nofollow\">这里</a>。</p>\n<p>相关的问题已近在前端界整理的很充分了，大致的问题可总结如下：</p>\n<ul>\n<li>浏览器的初始化样式不同导致兼容性的问题</li>\n<li>局部样式解析不同导致的 bug</li>\n</ul>\n<blockquote>\n<p>有些文章把样式使用技巧也放到兼容性的问题里面，这有失偏颇，关于常用样式使用技巧在<a href=\"http://www.jianshu.com/p/25eaac282b0d\" target=\"_target\" rel=\"nofollow\">另一边文章</a>叙述，这里不重复。</p>\n</blockquote>\n<h2 id=\"1-浏览器的初始化样式不同导致兼容性的问题\" style=\"position:relative;\"><a href=\"#1-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E6%A0%B7%E5%BC%8F%E4%B8%8D%E5%90%8C%E5%AF%BC%E8%87%B4%E5%85%BC%E5%AE%B9%E6%80%A7%E7%9A%84%E9%97%AE%E9%A2%98\" aria-label=\"1 浏览器的初始化样式不同导致兼容性的问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 浏览器的初始化样式不同导致兼容性的问题</h2>\n<p>对于这个问题可以一上来就是用<code class=\"language-text\">*{margin:0;padding:0;}</code>，不过这个代码的杀伤力有些大，如果用户自定义样式未加载进来，则整个页面的布局毫无结构可言。</p>\n<p>所以这里出现两个浏览器默认样式重置库：<a href=\"http://necolas.github.io/normalize.css/\" target=\"_target\" rel=\"nofollow\">Normalize.css</a>和<a href=\"http://meyerweb.com/eric/tools/css/reset/\" target=\"_target\" rel=\"nofollow\">reset.css</a>，上面的链接是项目的介绍。</p>\n<p>关于这两个库的对比介绍也<a href=\"https://segmentfault.com/q/1010000000117189\" target=\"_target\" rel=\"nofollow\">比较详细</a>，简单的说：<strong>Normalize</strong> 的理念则是尽量保留浏览器的默认样式，不进行太多的重置；而<strong>Reset</strong>的目的，是将所有的浏览器的自带样式重置掉，这样更易于保持各浏览器渲染的一致性。</p>\n<p>浏览器默认样式重置就像是贴墙纸前先上一遍腻子将墙抹之后再贴。Normalize.css 或者 Reset.css 需要在所有样式引用前引用。就我个人而言，使用 Normalize.css 比较多一些。</p>\n<h2 id=\"2-局部样式解析不同导致的-bug\" style=\"position:relative;\"><a href=\"#2-%E5%B1%80%E9%83%A8%E6%A0%B7%E5%BC%8F%E8%A7%A3%E6%9E%90%E4%B8%8D%E5%90%8C%E5%AF%BC%E8%87%B4%E7%9A%84-bug\" aria-label=\"2 局部样式解析不同导致的 bug permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 局部样式解析不同导致的 bug</h2>\n<p>其实，这里主要是<strong>IE 浏览器</strong>和<strong>非 IE 浏览器</strong>之间的解析区别。如果使用了 normalize 或者 reset 后能处理大部分的问题，下面是剩余的部分：</p>\n<h4 id=\"21-透明度的兼容-css-设置\" style=\"position:relative;\"><a href=\"#21-%E9%80%8F%E6%98%8E%E5%BA%A6%E7%9A%84%E5%85%BC%E5%AE%B9-css-%E8%AE%BE%E7%BD%AE\" aria-label=\"21 透明度的兼容 css 设置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 透明度的兼容 CSS 设置</h4>\n<p><strong>解决方式：</strong></p>\n<ul>\n<li>IE：filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)。</li>\n<li>非 IE：opacity:0.6。</li>\n</ul>\n<h4 id=\"22-默认的盒子解析模型\" style=\"position:relative;\"><a href=\"#22-%E9%BB%98%E8%AE%A4%E7%9A%84%E7%9B%92%E5%AD%90%E8%A7%A3%E6%9E%90%E6%A8%A1%E5%9E%8B\" aria-label=\"22 默认的盒子解析模型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 默认的盒子解析模型</h4>\n<p>标准 w3c 盒子模型的范围包括 margin、border、padding、content，并且 content 部分不包含其他部分； IE 盒子模型的范围也包括 margin、border、padding、content。</p>\n<p>和标准 w3c 盒子模型不同的是：ie 盒子模型的 content 部分包含了 border 和 pading。</p>\n<p>因此，问题主要表现在 css 中的 width 是否计算 border 和 padding 的问题，这个是默认的盒子解析模型不同导致的。</p>\n<p><strong>IE6：</strong>中包括 border 和 padding<code class=\"language-text\">(box-sizing: border-box;)</code><br>\n<strong>IE7 和非 IE：</strong>width 宽度不包括 border 和 padding<code class=\"language-text\">(box-sizing: content-box;)</code></p>\n<p><strong>解决方式：</strong> 根据使用方式，写好 box-sizing 属性。</p>\n<h4 id=\"23-浮动问题\" style=\"position:relative;\"><a href=\"#23-%E6%B5%AE%E5%8A%A8%E9%97%AE%E9%A2%98\" aria-label=\"23 浮动问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3 浮动问题</h4>\n<p>主要表现是子元素使用了浮动，而父元素没有撑开盒子，下面是解决的代码，加载父元素上就好。</p>\n<p><strong>解决技巧：</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.clearfix:before, .clearfix:after</span> <span class=\"token punctuation\">{</span>   <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 1 */</span>   <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 2 */</span> <span class=\"token punctuation\">}</span>\n <span class=\"token selector\">.clearfix:after</span> <span class=\"token punctuation\">{</span>   <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"24-高度不适应\" style=\"position:relative;\"><a href=\"#24-%E9%AB%98%E5%BA%A6%E4%B8%8D%E9%80%82%E5%BA%94\" aria-label=\"24 高度不适应 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4 高度不适应</h4>\n<p>高度不适应是当内层对象的高度发生变化时外层高度不能自动进行调节，特别是当内层对象使用 margin 或 padding 时。</p>\n<p><strong>例如：</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">#box {background-color:#eee; }\n#box p {margin-top: 20px;margin-bottom: 20px; text-align:center; }\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>p对象中的内容＜/p>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>解决技巧：</strong></p>\n<ol>\n<li>在 P 对象上下各加 2 个空的 div 对象 CSS 代码{height:0px;overflow:hidden;}</li>\n<li>或者为 DIV 加上 border 属性</li>\n</ol>\n<h4 id=\"25-滚动条颜色设置\" style=\"position:relative;\"><a href=\"#25-%E6%BB%9A%E5%8A%A8%E6%9D%A1%E9%A2%9C%E8%89%B2%E8%AE%BE%E7%BD%AE\" aria-label=\"25 滚动条颜色设置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.5 滚动条颜色设置</h4>\n<p>IE 无法设置滚动条颜色了, 解决办法是将 body 换成 html</p>\n<p><strong>解决技巧：</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">scrollbar-face-color</span><span class=\"token punctuation\">:</span> #f6f6f6<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">scrollbar-highlight-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">scrollbar-shadow-color</span><span class=\"token punctuation\">:</span> #eeeeee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">scrollbar-3dlight-color</span><span class=\"token punctuation\">:</span> #eeeeee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">scrollbar-arrow-color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">scrollbar-track-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">scrollbar-darkshadow-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"26-超链接访问过后-hover-样式就不出现的问题\" style=\"position:relative;\"><a href=\"#26-%E8%B6%85%E9%93%BE%E6%8E%A5%E8%AE%BF%E9%97%AE%E8%BF%87%E5%90%8E-hover-%E6%A0%B7%E5%BC%8F%E5%B0%B1%E4%B8%8D%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98\" aria-label=\"26 超链接访问过后 hover 样式就不出现的问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.6 超链接访问过后 hover 样式就不出现的问题</h4>\n<p>被点击访问过的超链接样式不在具有 hover 和 active 了,很多人应该都遇到过这个问题,解决技巧是改变 CSS 属性的排列顺序: L-V-H-A</p>\n<p><strong>解决技巧：</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">a:link</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">a:visited</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">a:hover</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">a:active</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"27-条件注释\" style=\"position:relative;\"><a href=\"#27-%E6%9D%A1%E4%BB%B6%E6%B3%A8%E9%87%8A\" aria-label=\"27 条件注释 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.7 条件注释</h4>\n<p>在 html 中加入条件判断，选择激活哪些部分</p>\n<p><strong>解决技巧：</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">&lt;!--[if IE 7]>\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"ie7.css\" />\n&lt;![endif]--></span>\n\n<span class=\"token comment\">&lt;!--[if lte IE 6]>\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"ie.css\" />\n&lt;![endif]--></span>\n\nlte -- 小于等于\nlt  -- 小于\ngte --  大于等于\ngt  --  大于\n！ --  不等于</code></pre></div>\n<h4 id=\"28-background-attachmentfixed-在-ios-下失效的-hack\" style=\"position:relative;\"><a href=\"#28-background-attachmentfixed-%E5%9C%A8-ios-%E4%B8%8B%E5%A4%B1%E6%95%88%E7%9A%84-hack\" aria-label=\"28 background attachmentfixed 在 ios 下失效的 hack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.8 background-attachment:fixed 在 ios 下失效的 hack</h4>\n<p>ios 系统和某些移动端 background-attachment:fixed 不兼容性，没有任何效果，但可以 hack 一下就可以了，代码如下:</p>\n<p>ps：想在哪个标签加背景，可以在它 class 后:before.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">body:before {\n  content: &#39; &#39;;\n  position: fixed;\n  z-index: -1;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: url(path/to/image) center 0 no-repeat;\n  background-size: cover;\n}</code></pre></div>\n<h4 id=\"29-calc-使用\" style=\"position:relative;\"><a href=\"#29-calc-%E4%BD%BF%E7%94%A8\" aria-label=\"29 calc 使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.9 Calc 使用</h4>\n<p>浏览器支持的不是很好，而且在使用的时候要加上厂商前缀，达到兼容性。另外，注意减号之间的空格。</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>100% - 80px<span class=\"token punctuation\">)</span><span class=\"token selector\">;\n\n#formbox</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 130px<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/*加厂商前缀，操作符（+，-，*，/）两边要有空格）*/</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-moz-calc</span><span class=\"token punctuation\">(</span>100% / 6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">-webkit-calc</span><span class=\"token punctuation\">(</span>100% / 6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>100% / 6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"最后\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E5%90%8E\" aria-label=\"最后 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后</h2>\n<p>除去以上的总结，还有很多是关于在 IE6 下的 Hack，但是这个“老古董”在市面上的占有率已近相当低了，另外，按照由上到下的开发模式(优先兼容高级浏览器)，IE8 及以下的浏览器都可不用重点考虑。因此，关于样式兼容性的问题重点放到<strong>浏览器样式重置</strong>、<strong>flex 布局</strong>、<strong>CSS 预处理器(SCSS/Less)</strong>、<strong>CSS 后处理器(Autoprefixer/Postcss/Cssnano)</strong>上就可以解决大部分问题。</p>\n<p>此外，关于 Hack 的问题不需要全部记住，只需要记住大概的问题点，在做布局的时候尽量避免，遇到问题查问题。我认为这部分问题会随着技术或者浏览器的更迭而全部解决，因此不需要放太多精力。</p>\n<h2 id=\"参考连接\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E8%BF%9E%E6%8E%A5\" aria-label=\"参考连接 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考连接</h2>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/20094066\" target=\"_target\" rel=\"nofollow\">Normalize.css 与传统的 CSS Reset 有哪些区别</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003021766\" target=\"_target\" rel=\"nofollow\">关于 CSS Reset 那些事（一）之 历史演变与 Normalize.css</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003025718\" target=\"_target\" rel=\"nofollow\">关于 CSS Reset 那些事（二）之 Normalize.css 源码解读</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003028985\" target=\"_target\" rel=\"nofollow\">关于 CSS Reset 那些事（三）之 Normalize-zh.css 出炉</a></li>\n</ul>","timeToRead":8,"wordCount":{"paragraphs":55,"sentences":55,"words":295},"fields":{"slug":"/liu-lan-qi-jian-rong-xing-wen-ti-ji-jie/","relativePath":"2017/2017-02-08---liu-lan-qi-jian-rong-xing-wen-ti-ji-jie/index.md"},"excerpt":"可畏的前端 浏览器兼容性问题是指因为不同的浏览器对同一段 CSS 代码或者 JS…","frontmatter":{"title":"浏览器兼容性问题及解决方案(CSS部分)","date":"08 Feb 2017","tags":["兼容问题","CSS"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<p>移动端组件的编写和 PC 端组件的编写是不同的，PC 端组件见的通讯及状态共享很简单，基本上井水不犯河水，但是移动端组件的却不是这样：ion-title 组件希望共享自己的控制权，便于业务动态修改、menu 组件弹开的手，希望页面也能向右移动下、页面切换的时候，自动关闭 ActionSheet 组件等。下面是我在组件编写时踩得坑，如果感兴趣或者有同样的思考可以和我联系。</p>\n<h2 id=\"组件间通讯\" style=\"position:relative;\"><a href=\"#%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E8%AE%AF\" aria-label=\"组件间通讯 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>组件间通讯</h2>\n<p>基础组件的组件见通讯使用的比较多，比如 menu 组件打开需要通知 nav 组件是否移动等，如果直接上 Vuex，基础组件间的通讯与业务逻辑的通讯将混为一起，不方便开发调试。另外，项目是否上 Vuex 也是未知数，所以这里确定：vueMobile 组件间通讯走 EventBus，业务间状态同步是否上 Vuex 根据规模选择使用。这也算是自己编写组件前一致坚持的：</p>\n<blockquote>\n<p>我想在编写业务页面的时候，能清爽一点。</p>\n</blockquote>\n<p>下图是简单的机构说明：</p>\n<p><img src=\"\"></p>\n<h2 id=\"公共组件方法提取\" style=\"position:relative;\"><a href=\"#%E5%85%AC%E5%85%B1%E7%BB%84%E4%BB%B6%E6%96%B9%E6%B3%95%E6%8F%90%E5%8F%96\" aria-label=\"公共组件方法提取 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>公共组件方法提取</h2>\n<p>基础组件通过 Vue.install 安装到全局，但是组件中的某些方法是需要在业务代码中直接调用的，比如控制页面是否能滚动、是否能点击、设置标题、返回顶部等方法。另一方面，组件在注册返回的始终是构造器，而不是<code class=\"language-text\">鲜活的</code>组件实例：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 获取注册的组件（始终返回构造器）\nvar MyComponent = Vue.component(&#39;my-component&#39;)</code></pre></div>\n<p>也就是说：<strong>组件只有被页面初始化的时候才会存在生命，才存在这个组件内部的 this</strong>。</p>\n<h3 id=\"子组件希望共享对自己的控制权，这个怎么做？\" style=\"position:relative;\"><a href=\"#%E5%AD%90%E7%BB%84%E4%BB%B6%E5%B8%8C%E6%9C%9B%E5%85%B1%E4%BA%AB%E5%AF%B9%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%A7%E5%88%B6%E6%9D%83%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%80%8E%E4%B9%88%E5%81%9A%EF%BC%9F\" aria-label=\"子组件希望共享对自己的控制权，这个怎么做？ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>子组件希望共享对自己的控制权，这个怎么做？</h3>\n<p>比如业务页面中的<code class=\"language-text\">ion-title</code>组件自身实现了<code class=\"language-text\">setTitle</code>方法来控制 Title 的显示，但是这个方法希望在业务页面中能调用，方便用户自定义 Title(包括修改 document.title 的 Hack 方法)。例如如下的结构：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ion-page</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ion-header</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ion-navbar</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ion-title</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Demo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ion-title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ion-navbar</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ion-header</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ion-content</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">content</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ion-content</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ion-page</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>这样的需求实现有两个方法：</p>\n<ol>\n<li><strong>在业务 this 中找到子组件的 this</strong>：在业务页面的 this 通过逐层查找$children 中 ion-title 组件，然后执行找到的组件的 child.setTitle(val)方法。</li>\n<li><strong>子组件将自己放到全局</strong>：ion-title 组件初始化时，向全局挂载，比如挂载到 Vue 的 prototype 上：<code class=\"language-text\">Vue.prototype.setTitle=ins.setTitle</code>；或者挂载到 window 上。当页面切换后，需要重复此操作。挂载到 Vue 上，业务页面可以通过 this 访问到，并且页面模板也能直接使用，较为方便。</li>\n</ol>\n<p>另外，路由开启<code class=\"language-text\">keep-alive</code>时，组件也能正常工作的情况别忘记考虑，此时页面切换只有<code class=\"language-text\">activated/deactivated</code>钩子工作，业务内的组件不会因为外面是<code class=\"language-text\">keep-alive</code>而自我更新的，相当于变成了<strong>墓碑</strong>。</p>\n<p>此外，<code class=\"language-text\">ion-page</code>外层的<code class=\"language-text\">ion-app/ion-nav</code>是所有业务页面公用的，每次业务页面切换再提取父组件的内容可能不太合适。</p>\n<p>因此，vueMobile 组件是这样做的：</p>\n<ol>\n<li>业务页面的子组件使用 mixins 遍历 this 提取公共方法，提取方法在 created 和 activated 钩子上都注册方法，挂载前判断是否已挂载；</li>\n<li>业务页面的父组件使用 Vue.prototype 将自己挂载到全局上。</li>\n</ol>\n<p>下面是对这个过程的说明：</p>\n<p><img src=\"\"></p>\n<h2 id=\"backdrop-组件\" style=\"position:relative;\"><a href=\"#backdrop-%E7%BB%84%E4%BB%B6\" aria-label=\"backdrop 组件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Backdrop 组件</h2>\n<p>同时打开两个带有 Backdrop 的 Loading 组件，这个该怎么显示呢？答案是只显示一次 Backdrop！因此 Backdrop 组件的设计需要脱离 Loading、Toast、ChooseSheet 等组件。</p>\n<h2 id=\"choosesheet-组件\" style=\"position:relative;\"><a href=\"#choosesheet-%E7%BB%84%E4%BB%B6\" aria-label=\"choosesheet 组件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ChooseSheet 组件</h2>\n<p>其实这个组件是 ActionSheet 的变种，因为此组件的展现样式被发现在多处被使用到，比如：Timepicker、购物车、选择商品尺码、选择地址等。</p>","timeToRead":4,"wordCount":{"paragraphs":23,"sentences":23,"words":175},"fields":{"slug":"/vueMobile-zu-jian/","relativePath":"2017/2017-02-06---vueMobile-zu-jian/index.md"},"excerpt":"移动端组件的编写和 PC 端组件的编写是不同的，PC 端组件见的通讯及状态共享很简单，基本上井水不犯河水，但是移动端组件的却不是这样：ion-title 组件希望共享自己的控制权，便于业务动态修改、menu…","frontmatter":{"title":"vueMobile组件(组件间通讯)","date":"06 Feb 2017","tags":["Vue","Mobile","组件通信"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<ul>\n<li>切图 - Photosho - 切图插件 Cutterman - 标注插件 Parker - 图片压缩 ImageOptim/HummingBird</li>\n<li>HTML - HTML 基础 - 基础标签技术性 - 语义化及 SEO - meta 属性 - 移动端 viewport 设置 - 块级元素/行内元素 - HTML 媒体 - HTML API - SSE/Web Works/拖放(了解) - 存储/定位/全屏/页面状态(是否当前浏览) - 全局属性 - contenteditable（是否允许编辑） - draggable（是否允许拖动） - drapzone（被拖动的目标被拖放到元素中会发生什么） - hidden - spellcheck（拼写检查） - id/class/title/dir/tabindex/lang - HTML 图形 - SVG/Canvas(了解) - 快速编辑 Emmet</li>\n<li>\n<p>CSS - CSS 选择器(了解写法对浏览器性能的开销) - CSS 核心点 - 浮动与清除浮动 - 居中 - 透明滤镜 - 布局 - display/position - float - flex - overflow - 基础样式 - 背景/边框/文本/字体/连接/表格/轮廓/3D - 用户界面 - 盒模型 - transform 变换 - transform（二维变换，平移、缩放、扭曲） - transforn-origin - transition 过度 - transition-property：检索或设置对象中的参与过渡的属性[all] - transition-duration - transition-timing-function - transition-delay - animation 动画 - CSS 引用方式 - 外部样式表 - 内部样式表 - 内联样式表 - 常用布局 (了解 HTML 书写顺序对网页渲染性能的影响) - CSS hack (常用的有总结)</p>\n<p>  \t- CSS前处理器\n- Scss\n- CSS后处理器\n- PostCss/Autoprefix\n- BEM命名法(面向对象的CSS)</p>\n</li>\n<li>JavaScript - Js 引用方式 - 外部/内联 - Script 异步加载方式 - async - 异步下载, 下载完毕后立即执行 - defer - 异步下载, 等待 DOM 解析完毕触发 DOMContentLoaded 事件之前 - 数据类型 - 数值类型 - 引用类型 - Object - Array 基础属性/方法 - Date 基础属性/方法 - RegExp 常用实例 - String 基础属性/方法 - 类型检测 - typeof/instance of/Object 类型拆分 - 深浅拷贝 (总结过) - 函数 - 理解 this - 作用于及作用域链 - 类 (原生写法/ES6) - call/apply - 绑定 this 的 - 闭包 - 模块化 - ES6 - Math - 常用方法 - DOM - DOM 基础操作(需要不定时查看文档) - 事件绑定/代理/队列 - BOM - 获取浏览器参数 - JSON - 对象的深拷贝 - 其他 - setTimeout 异步 - setInternal/requestAnimationFrame - try/catch - ES6 (掌握及使用了 70%) - 加密库 - md5/base64/sha1</li>\n<li>综合 - 页面性能优化及调试(雅虎军规) - 缓存处理 - 调试 - PC: Chrome - Mobile: 微信开发者工具/二维码/ - 线上抓包: Charles - API 测试: Postman - 跨域处理</li>\n<li>前端自动化 - Gulp(很熟悉, 能直接写任务) - Webpack(知道原理, 正在使用) - 依赖管理: npm/cnpm/yarn</li>\n<li>IDE: WebStorm/Brackets</li>\n<li>版本管理 - SVN(CornerStone) - Git(SourceTree/GitHub Desktop)</li>\n<li>框架 - jQuery/zepto - Angular1.x/Vue2.x - Leaflet - IONIC1.x - Lodash/Moment/…</li>\n<li>软技能 - 写作能力(正在锻炼) - 协作(能一个人做完的不交给两个人做) - 沟通(需要磨合)</li>\n<li>想学的 - Weex - IONIC 2.x - Nodejs - 达到熟练的程度</li>\n<li>今年计划 - Vimo: 基于 Vue2.x 的移动端 Hybrid 框架(完成 40%) - Vida: 基于 Vue2.x 的桌面框架(未开进行) - 深入了解 Nodejs 的中途岛模式(未开进行) - 发布 50 篇技术文章(不是硬性的)</li>\n</ul>","timeToRead":2,"wordCount":{"paragraphs":12,"sentences":12,"words":270},"fields":{"slug":"/lie-feng-qiu-de-di-qian-duan-ji-neng-nai/","relativePath":"2017/2017-02-19---lie-feng-qiu-de-di-qian-duan-ji-neng-nai/index.md"},"excerpt":"切图 - Photosho - 切图插件 Cutterman - 标注插件 Parker - 图片压缩 ImageOptim/HummingBird HTML - HTML 基础 - 基础标签技术性 - 语义化及 SEO…","frontmatter":{"title":"烈风裘的前端技能","date":"19 Feb 2017","tags":["随笔"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/liu-lan-qi-jian-rong-xing-wen-ti-ji-jie/","prev":"/lie-feng-qiu-de-di-qian-duan-ji-neng-nai/","next":"/vueMobile-zu-jian/"}},"staticQueryHashes":["3240721340","63159454"]}