{"componentChunkName":"component---src-templates-blog-post-js","path":"/zheng-ze-jian-dan-shan-chan-zong-jie/","result":{"data":{"site":{"siteMetadata":{"title":"Attila","cover":"/background/1.jpg","description":"Thoughts, stories and ideas.","keywords":["烈风裘的博客","X-Blog","Attila","Gatsby","前端成长记录"],"tagCover":"/background/5.jpg","archiveCover":"/background/escape-flight.png","siteUrl":"https://xiangst0816.github.io/blog","logo":"","navigation":true,"subscribe":true}},"allAuthorJson":{"totalCount":2,"edges":[{"node":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.png","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"}},{"node":{"id":"WALL-E","bio":"还有要清理的吗?","avatar":"/avatar/cleaner.jpg","cover":"","github":null,"twitter":null,"zhihu":null,"weibo":null,"facebook":null,"website":null,"location":"Earth"}}]},"master":{"id":"烈风裘","bio":"一往无前, 直到云开雾散!","avatar":"/avatar/avatar.png","cover":"/background/photo-1503197979108-c824168d51a8.jpeg","github":"https://github.com/xiangst0816","twitter":"","zhihu":"","weibo":"","facebook":"","website":"https://xiangst0816.github.io/blog/","location":"HangZhou, China"},"currentPost":{"html":"<p>记得很早之前就对正则进行了简单的学习，我自己在下面也总结了很多次，但是一到用的时候就懵逼了。看来还是实践较少的结果。今天特此花时间在总结下，并且附上常用的正则示例。</p>\n<h2 id=\"思维导图：\" style=\"position:relative;\"><a href=\"#%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%EF%BC%9A\" aria-label=\"思维导图： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思维导图：</h2>\n<p><img src=\"http://xiangsongtao.com/uploads/1474687442000.png\" alt=\"正则\" title=\"正则\"></p>\n<h2 id=\"常用示例：\" style=\"position:relative;\"><a href=\"#%E5%B8%B8%E7%94%A8%E7%A4%BA%E4%BE%8B%EF%BC%9A\" aria-label=\"常用示例： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常用示例：</h2>\n<h3 id=\"去除首位空格（单独去除左右空格类似）：\" style=\"position:relative;\"><a href=\"#%E5%8E%BB%E9%99%A4%E9%A6%96%E4%BD%8D%E7%A9%BA%E6%A0%BC%EF%BC%88%E5%8D%95%E7%8B%AC%E5%8E%BB%E9%99%A4%E5%B7%A6%E5%8F%B3%E7%A9%BA%E6%A0%BC%E7%B1%BB%E4%BC%BC%EF%BC%89%EF%BC%9A\" aria-label=\"去除首位空格（单独去除左右空格类似）： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>去除首位空格（单独去除左右空格类似）：</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;   ac f    &quot;.replace(/(^\\s*)|(\\s*$)/g,&#39;&#39;)</code></pre></div>\n<h3 id=\"v-err-src转化为驼峰名字verrsrc：\" style=\"position:relative;\"><a href=\"#v-err-src%E8%BD%AC%E5%8C%96%E4%B8%BA%E9%A9%BC%E5%B3%B0%E5%90%8D%E5%AD%97verrsrc%EF%BC%9A\" aria-label=\"v err src转化为驼峰名字verrsrc： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>“v-err-src”转化为驼峰名字”vErrSrc”：</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;v-err-src&#39;.replace(/-(\\w)/ig,function(x){\n   return x.slice(1).toUpperCase()\n})</code></pre></div>\n<h3 id=\"xxx-xxxx-xxxxx-前三位数字开头，中间四位字母开头数字结尾，后-5-位随意：\" style=\"position:relative;\"><a href=\"#xxx-xxxx-xxxxx-%E5%89%8D%E4%B8%89%E4%BD%8D%E6%95%B0%E5%AD%97%E5%BC%80%E5%A4%B4%EF%BC%8C%E4%B8%AD%E9%97%B4%E5%9B%9B%E4%BD%8D%E5%AD%97%E6%AF%8D%E5%BC%80%E5%A4%B4%E6%95%B0%E5%AD%97%E7%BB%93%E5%B0%BE%EF%BC%8C%E5%90%8E-5-%E4%BD%8D%E9%9A%8F%E6%84%8F%EF%BC%9A\" aria-label=\"xxx xxxx xxxxx 前三位数字开头，中间四位字母开头数字结尾，后 5 位随意： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>xxx-xxxx-xxxxx, 前三位数字开头，中间四位字母开头数字结尾，后 5 位随意：</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/^\\d\\w{2}-[a-zA-Z]\\d{3}-.{5}$/.test(&#39;1as-a234-wwwww&#39;)</code></pre></div>\n<h3 id=\"邮箱验证：\" style=\"position:relative;\"><a href=\"#%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%EF%BC%9A\" aria-label=\"邮箱验证： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>邮箱验证：</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/^\\w+@[1-9a-z]+(\\.[a-z]+){1,3}$/.test(&quot;xxxx@16.cn.net&quot;)</code></pre></div>\n<h3 id=\"中文范围：\" style=\"position:relative;\"><a href=\"#%E4%B8%AD%E6%96%87%E8%8C%83%E5%9B%B4%EF%BC%9A\" aria-label=\"中文范围： permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>中文范围：</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">匹配中文：[\\u4e00-\\u9fa5] //中文ACALL码的范围</code></pre></div>\n<p>以上就差不多这些了！</p>","timeToRead":2,"wordCount":{"paragraphs":10,"sentences":10,"words":23},"fields":{"slug":"/zheng-ze-jian-dan-shan-chan-zong-jie/","relativePath":"2016/2016-10-20---zheng-ze-jian-dan-shan-chan-zong-jie/index.md"},"excerpt":"…","frontmatter":{"title":"正则简单总结","date":"20 Oct 2016","tags":["正则","JavaScript"],"cover":"","comments":true,"author":"烈风裘"}},"nextPost":{"html":"<h2 id=\"先说下基础类型和引用类型\" style=\"position:relative;\"><a href=\"#%E5%85%88%E8%AF%B4%E4%B8%8B%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B\" aria-label=\"先说下基础类型和引用类型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>先说下基础类型和引用类型</h2>\n<p>在写代码的时候翻看源码无意中看到了对象的深浅复制的代码，估计以后也会用的上，虽然徒手从零开始写有些困难，但是使用的时候能快速拿出来也是好的。下面是对深浅复制的总结笔记！</p>\n<p><img src=\"http://xiangsongtao.com/uploads/1474693606000.png\" alt=\"分类\"></p>\n<p>在 JS 中有一些基本类型像是<code class=\"language-text\">Number</code>、<code class=\"language-text\">String</code>、<code class=\"language-text\">Boolean</code>，而对象就是像这样的东西<code class=\"language-text\">{ name: &#39;Larry&#39;, skill: &#39;Node.js&#39; }</code>，对象跟基本类型最大的不同就在于他们的传值方式。</p>\n<p>基本类型是传 value，像是这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//20</span></code></pre></div>\n<p>在修改<code class=\"language-text\">a</code>时并不会改到<code class=\"language-text\">b</code></p>\n<p>但对象就不同，对象传的是 reference：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> obj1<span class=\"token punctuation\">;</span>\nobj2<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { a: 10, b: 100, c: 30 } &lt;-- b 被改到了</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { a: 10, b: 100, c: 30 }</span></code></pre></div>\n<p>复制一份<code class=\"language-text\">obj1</code>叫做<code class=\"language-text\">obj2</code>，然后把<code class=\"language-text\">obj2.b</code>改成 100，但却不小心改到<code class=\"language-text\">obj1.b</code>，因为他们根本是同一个对象，这就是所谓的<strong>浅拷贝</strong>。</p>\n<p>要避免这样的错误发生就要写成这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> obj1<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> obj1<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> obj1<span class=\"token punctuation\">.</span>c <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj2<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { a: 10, b: 20, c: 30 } &lt;-- b 沒被改到</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { a: 10, b: 100, c: 30 }</span></code></pre></div>\n<h2 id=\"浅拷贝shallow-copy-vs-深拷贝deep-copy\" style=\"position:relative;\"><a href=\"#%E6%B5%85%E6%8B%B7%E8%B4%9Dshallow-copy-vs-%E6%B7%B1%E6%8B%B7%E8%B4%9Ddeep-copy\" aria-label=\"浅拷贝shallow copy vs 深拷贝deep copy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>浅拷贝(Shallow Copy) VS 深拷贝(Deep Copy)</h2>\n<p>浅拷贝只复制指向某个对象的<strong>指针</strong>，而不复制对象本身，新旧对象还是共享同一块内存。但深拷贝会另外创造<strong>一个一模一样的对象</strong>，新对象跟原对象不共享内存，修改新对象不会改到原对象。</p>\n<h2 id=\"objectassign-es6-的新函数\" style=\"position:relative;\"><a href=\"#objectassign-es6-%E7%9A%84%E6%96%B0%E5%87%BD%E6%95%B0\" aria-label=\"objectassign es6 的新函数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object.assign ES6 的新函数</h2>\n<p>用法如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobj2<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { a: 10, b: 20, c: 30 } &lt;-- 沒被改到</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { a: 10, b: 100, c: 30 }</span></code></pre></div>\n<p>但是，只能处理深度只有一层的对象，没办法做到真正的 Deep Copy。不过如果要复制的对象只有一层的话可以考虑使用它。</p>\n<h2 id=\"处理单纯的数据对象时不能处理有函数的情况\" style=\"position:relative;\"><a href=\"#%E5%A4%84%E7%90%86%E5%8D%95%E7%BA%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AF%B9%E8%B1%A1%E6%97%B6%E4%B8%8D%E8%83%BD%E5%A4%84%E7%90%86%E6%9C%89%E5%87%BD%E6%95%B0%E7%9A%84%E6%83%85%E5%86%B5\" aria-label=\"处理单纯的数据对象时不能处理有函数的情况 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>处理单纯的数据对象时(不能处理有函数的情况)</h2>\n<p>用<code class=\"language-text\">JSON.stringify</code>把对象转成字符串，再用<code class=\"language-text\">JSON.parse</code>把字符串转成新的对象。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobj2<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { body: { a: 10 } } &lt;-- 沒被改到</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { body: { a: 20 } }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1 <span class=\"token operator\">===</span> obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">.</span>body <span class=\"token operator\">===</span> obj2<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span></code></pre></div>\n<h2 id=\"库函数实现-deep-copy\" style=\"position:relative;\"><a href=\"#%E5%BA%93%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0-deep-copy\" aria-label=\"库函数实现 deep copy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>库函数实现 Deep Copy</h2>\n<h3 id=\"jquery\" style=\"position:relative;\"><a href=\"#jquery\" aria-label=\"jquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jquery</h3>\n<p>jquery 中提供的一个函数<code class=\"language-text\">$.extend</code>可以用来做 Deep Copy。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> $ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jquery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> g<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  c<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>f <span class=\"token operator\">===</span> obj2<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span></code></pre></div>\n<h3 id=\"lodash\" style=\"position:relative;\"><a href=\"#lodash\" aria-label=\"lodash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lodash</h3>\n<p>lodash 提供<code class=\"language-text\">_.cloneDeep</code>用来做 Deep Copy。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> _ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lodash\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> g<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  c<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">cloneDeep</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>f <span class=\"token operator\">===</span> obj2<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span></code></pre></div>\n<h2 id=\"哥哥给你手写一个\" style=\"position:relative;\"><a href=\"#%E5%93%A5%E5%93%A5%E7%BB%99%E4%BD%A0%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AA\" aria-label=\"哥哥给你手写一个 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>哥哥给你手写一个</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> g<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  c<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">_merge</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> obj2<span class=\"token punctuation\">,</span> obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_merge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deep<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> source</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deep <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">_merge</span><span class=\"token punctuation\">(</span>deep<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> obj <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>以上就是全部了，也不算难，多注意多留心就好。</p>\n</blockquote>","timeToRead":4,"wordCount":{"paragraphs":23,"sentences":23,"words":77},"fields":{"slug":"/JS-shen-qian-jian-kao-bei-xiang-guan/","relativePath":"2016/2016-10-20---JS-shen-qian-jian-kao-bei-xiang-guan/index.md"},"excerpt":"先说下基础类型和引用类型 在写代码的时候翻看源码无意中看到了对象的深浅复制的代码，估计以后也会用的上，虽然徒手从零开始写有些困难，但是使用的时候能快速拿出来也是好的。下面是对深浅复制的总结笔记！ 分类 在 JS…","frontmatter":{"title":"JS深浅拷贝相关","date":"20 Oct 2016","tags":["JavaScript"],"cover":"","comments":true,"author":"烈风裘"}},"prevPost":{"html":"<h3 id=\"先描述下问题\" style=\"position:relative;\"><a href=\"#%E5%85%88%E6%8F%8F%E8%BF%B0%E4%B8%8B%E9%97%AE%E9%A2%98\" aria-label=\"先描述下问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>先描述下问题</h3>\n<p>Webapp 在上传图片的时候，会出现旋转 90° 的问题，但是在上传前预览图片是没问题的。这是因为什么呢？</p>\n<p>原因在这边博客中说的很清楚了，<a href=\"https://github.com/xiangpaopao/blog/issues/7\" target=\"_target\" rel=\"nofollow\">查看这里：移动端 Web 上传图片实践</a>。也就是说，对于 IOS 或者上传数码相机拍摄的图片时，为了保证快读读写所以就没对图片进行方向矫正，而是使用一个字段 Orientation 保存方向。故对这种情况需要进行图片方向的纠正。</p>\n<p>这种问题的修复有两种：</p>\n<ul>\n<li>第一种方法是<strong>后台修正</strong>，<a href=\"http://www.graphicsmagick.org/\" target=\"_target\" rel=\"nofollow\">插件 GraphicsMagick</a>提供的 API 比较友好，在控制台输入<code class=\"language-text\">npm install gm</code>进行安装，简单实用如下：</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gm(&#39;/path/to/img.jpg&#39;)\n.autoOrient()\n.resize(240, 240)\n.write(&#39;/path/to/new.jpg&#39;, function (err) {\n  if (err) ...\n})</code></pre></div>\n<ul>\n<li>第二种方法是<strong>前台修正</strong>，可是使用<a href=\"https://github.com/gokercebeci/canvasResize\" target=\"_target\" rel=\"nofollow\">canvasResize 插件</a>，我比较倾向于实用第二种，因为将计算量分布到各个终端，减轻服务器压力。</li>\n</ul>\n<p>主要代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var file = input.files[0];\ncanvasResize(file, {\n        width: 300,//如果宽度没到300px则不会进行方法处理\n        height: 0,//自适应\n        crop: false,\n        quality: 100,//图片质量，default 80.\n        rotate   : 90,      // Image rotation default 0,如果自动处理则不设置\n        callback: function(data, width, height) {\n            var blob = canvasResize(&#39;dataURLtoBlob&#39;, data);\n            var form = new FormData();\n            form.append(&#39;file&#39;,blob);\n            $.ajax({\n                type: &#39;POST&#39;,\n                url: server,\n                data: form,\n                contentType: false,\n                processData: false,\n            }).done(function (res) {\n                ......\n            }).fail(function () {\n                ......\n            }).always(function () {\n                ......\n            });\n        }\n});</code></pre></div>\n<p>你现在看到的这个博客的所有图片就是采用前台处理的方式进行图片方向矫正及尺寸压缩。<strong>因为使用的 ES6 语法及 VUE 框架，具体代码书写请参我的博客项目</strong>：</p>\n<ul>\n<li>文件<a href=\"https://github.com/xiangsongtao/X-SONGTAO-VUE/blob/master/src/api/api_upload.js\" target=\"_target\" rel=\"nofollow\">api_upload.js</a> 处理上传的公共服务，其中 EXIF.js 和 canvasResize.js 我做了些模块化修改，请移步具体文件。</li>\n<li><a href=\"https://github.com/xiangsongtao/X-SONGTAO-VUE/blob/master/src/views/admin.article.vue\" target=\"_target\" rel=\"nofollow\">HTML 及*.vue 中的使用方法</a>，摘抄如下：</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;form action=&quot;&quot; class=&quot;imgUploadForm&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;\n        &lt;input id=&quot;imgUpload&quot; type=&quot;file&quot;&gt;\n&lt;/form&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/**\n * 1. 选择图片,获得filer信息\n * */\n$(&quot;#imgUpload&quot;).change(function (e) {\n    // 文件句柄\n    var file = e.target.files[0];\n    // 只处理图片\n    if (!file.type.match(&#39;image.*&#39;)) {\n        return null;\n    }\n    scope.isImgLoading = true;\n    ImageUpload(file).then(function (imageName) {\n        scope.uploadImgUrl = addImgPrefix(imageName);\n    }, function () {\n        alert(&quot;upload error&quot;);\n    }).then(function () {\n        scope.isImgLoading = false;\n    })\n})</code></pre></div>\n<h3 id=\"介绍下方法二的思路\" style=\"position:relative;\"><a href=\"#%E4%BB%8B%E7%BB%8D%E4%B8%8B%E6%96%B9%E6%B3%95%E4%BA%8C%E7%9A%84%E6%80%9D%E8%B7%AF\" aria-label=\"介绍下方法二的思路 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>介绍下方法二的思路</h3>\n<ol>\n<li>监听 input 的 onChange 事件，获取文件句柄（file）</li>\n<li>传入 file，使用 canvasResize 进行图片尺寸及方向校准，回调得到 base64 编码的图片信息（data）</li>\n<li>将图片改为二进制文件 blob, 准备上传（form）</li>\n<li>将得到的 form 进行上传</li>\n</ol>\n<p>注：上传到后台的文件需要重命名，因为在转成 blob 时，已不是原来文件了。后台相关处理文件<a href=\"https://github.com/xiangsongtao/X-SONGTAO/blob/master/app/routes/api.routes.js\" target=\"_target\" rel=\"nofollow\">请转到这里</a>，Line:84。</p>\n<h3 id=\"最终效果展示\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA\" aria-label=\"最终效果展示 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最终效果展示</h3>\n<blockquote>\n<p>效果还是很明显的，上传速度和未处理基本一样，没感觉。</p>\n</blockquote>\n<h4 id=\"从-iphone-拍摄后未处理的图片手机上看竖着的，pc-上看是横着的\" style=\"position:relative;\"><a href=\"#%E4%BB%8E-iphone-%E6%8B%8D%E6%91%84%E5%90%8E%E6%9C%AA%E5%A4%84%E7%90%86%E7%9A%84%E5%9B%BE%E7%89%87%E6%89%8B%E6%9C%BA%E4%B8%8A%E7%9C%8B%E7%AB%96%E7%9D%80%E7%9A%84%EF%BC%8Cpc-%E4%B8%8A%E7%9C%8B%E6%98%AF%E6%A8%AA%E7%9D%80%E7%9A%84\" aria-label=\"从 iphone 拍摄后未处理的图片手机上看竖着的，pc 上看是横着的 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>从 iphone 拍摄后未处理的图片(手机上看竖着的，pc 上看是横着的)</h4>\n<ul>\n<li>尺寸：3264*2448</li>\n<li>大小 ：1.2MB</li>\n</ul>\n<p><img src=\"http://xiangsongtao.com/uploads/1471425020000.jpg\" alt=\"demo\" title=\"未处理\"></p>\n<hr>\n<h4 id=\"上传前处理后的图片\" style=\"position:relative;\"><a href=\"#%E4%B8%8A%E4%BC%A0%E5%89%8D%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E5%9B%BE%E7%89%87\" aria-label=\"上传前处理后的图片 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>上传前处理后的图片</h4>\n<ul>\n<li>尺寸：710*946</li>\n<li>大小 ：68KB</li>\n</ul>\n<p><img src=\"http://xiangsongtao.com/uploads/1471528805000.jpeg\" title=\"已处理\"></p>\n<h3 id=\"最后\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E5%90%8E\" aria-label=\"最后 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后</h3>\n<blockquote>\n<p>希望如果有不明白的，请在下方评论或者在 github 提 issue，<a href=\"https://github.com/xiangsongtao/X-SONGTAO-VUE\" target=\"_target\" rel=\"nofollow\">我的博客项目</a>因为还有些小功能未实现，将会一直维护下去，技术问题希望能共同探讨。</p>\n</blockquote>\n<h4 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h4>\n<ul>\n<li><a href=\"https://github.com/xiangpaopao/blog/issues/7\" target=\"_target\" rel=\"nofollow\">移动端 Web 上传图片实践 </a></li>\n<li><a href=\"http://www.graphicsmagick.org/\" target=\"_target\" rel=\"nofollow\">GraphicsMagick</a></li>\n<li><a href=\"https://github.com/gokercebeci/canvasResize\" target=\"_target\" rel=\"nofollow\">canvasResize</a></li>\n</ul>","timeToRead":4,"wordCount":{"paragraphs":32,"sentences":32,"words":127},"fields":{"slug":"/tu-pian-ya-suo-su-ji-fang-xiang-xiu-zheng/","relativePath":"2016/2016-10-20---tu-pian-ya-suo-su-ji-fang-xiang-xiu-zheng/index.md"},"excerpt":"先描述下问题 Webapp 在上传图片的时候，会出现旋转 90° 的问题，但是在上传前预览图片是没问题的。这是因为什么呢？ 原因在这边博客中说的很清楚了，查看这里：移动端 Web 上传图片实践。也就是说，对于 IOS…","frontmatter":{"title":"图片压缩及方向修正","date":"20 Oct 2016","tags":["图片压缩","图片修正"],"cover":"","comments":true,"author":"烈风裘"}}},"pageContext":{"curr":"/zheng-ze-jian-dan-shan-chan-zong-jie/","prev":"/tu-pian-ya-suo-su-ji-fang-xiang-xiu-zheng/","next":"/JS-shen-qian-jian-kao-bei-xiang-guan/"}},"staticQueryHashes":["3240721340","63159454"]}