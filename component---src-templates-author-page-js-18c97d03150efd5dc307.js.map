{"version":3,"sources":["webpack:///./src/templates/author-page.js","webpack:///./src/components/Pagination.js","webpack:///./src/components/Bio.js","webpack:///./src/components/Avatar.js","webpack:///./src/components/ExcerptLoop.js"],"names":["AuthorRoute","getOtherAuthorsInfo","this","props","data","otherAuthorsInfo","allAuthorJson","tmpAuthorList","edges","map","item","node","id","tmpAuthorInfoList","name","avatar","reduce","all","res","filter","a","push","render","currentMarkdownRemark","allMarkdownRemark","site","author","authorJson","navigate","totalCount","siteMetadata","cover","navigation","logo","title","coverImage","pageContext","skip","limit","kebabCaseName","kebabCase","othersAuthers","authorList","OtherAuthors","className","reverse","to","key","location","hideNavBack","isPost","classNames","bio","count","website","twitter","facebook","github","weibo","paged","role","total","pathPrefix","React","PureComponent","pageQuery","Pagination","page","pages","Math","ceil","prev","next","Bio","target","href","rel","Avatar","avatarUrl","indexOf","withPrefix","src","alt","ExcerptLoop","edge","slug","fields","post","frontmatter","excerpt","authorId","find","Tags","tags","tag","On","Author","featured","star","date"],"mappings":"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","file":"component---src-templates-author-page-js-18c97d03150efd5dc307.js","sourcesContent":["import React from \"react\"\nimport classNames from \"classnames\"\nimport PropTypes from \"prop-types\"\nimport kebabCase from \"lodash.kebabcase\"\nimport { Link } from \"gatsby\"\nimport { navigate } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport ExcerptLoop from \"../components/ExcerptLoop\"\nimport Avatar from \"../components/Avatar\"\nimport Header from \"../components/Header\"\nimport Pagination from \"../components/Pagination\"\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\n\nexport default class AuthorRoute extends React.PureComponent {\n  getOtherAuthorsInfo() {\n    const { otherAuthorsInfo, allAuthorJson } = this.props.data\n    if (!otherAuthorsInfo) {\n      return []\n    }\n\n    const tmpAuthorList = allAuthorJson.edges.map(item => item.node.id)\n    const tmpAuthorInfoList = otherAuthorsInfo.edges.map(item => {\n      return { name: item.node.id, avatar: item.node.avatar }\n    })\n    return tmpAuthorList.reduce((all, item) => {\n      const res = tmpAuthorInfoList.filter(a => a.name === item)[0]\n      res && all.push(res)\n      return all\n    }, [])\n  }\n\n  render() {\n    const {\n      currentMarkdownRemark,\n      allMarkdownRemark,\n      site,\n      authorJson: author,\n    } = this.props.data || {}\n    const { authorJson } = this.props.data\n    if (!authorJson) {\n      navigate(\"/404\")\n      return null\n    }\n    const { edges } = currentMarkdownRemark || {}\n    const { totalCount = 0 } = allMarkdownRemark || {}\n    const { cover, navigation, logo, title } = site.siteMetadata\n    const coverImage = author.cover ? author.cover : cover || false\n    const { skip = 0, limit = 10 } = this.props.pageContext\n    const kebabCaseName = kebabCase(author.id)\n    const othersAuthers = this.getOtherAuthorsInfo()\n\n    const authorList = this.props.data.allAuthorJson.edges.map(item => {\n      return {\n        id: item.node.id,\n        avatar: item.node.avatar,\n      }\n    })\n\n    const OtherAuthors = () => {\n      return (\n        <div className=\"post-author-others\">\n          {othersAuthers.reverse().map(item => (\n            <Link\n              to={`/author/${kebabCase(item.name)}/`}\n              className=\"other-avatar\"\n              key={item.name}\n            >\n              <Avatar\n                className=\"post-other-avatar avatar\"\n                name={item.name}\n                avatar={item.avatar}\n              />\n            </Link>\n          ))}\n        </div>\n      )\n    }\n\n    return (\n      <Layout className=\"tag-template\" location={this.props.location}>\n        <SEO title={`${title}-${author.id}`} />\n        <Header\n          cover={coverImage}\n          logo={logo}\n          hideNavBack={false}\n          navigation={navigation}\n          isPost={false}\n        />\n        <section\n          id=\"blog-author\"\n          className={classNames({ \"has-cover\": coverImage })}\n        >\n          <div className=\"inner\">\n            <aside className=\"post-author\">\n              <Avatar\n                className=\"post-author-avatar avatar\"\n                avatar={author.avatar}\n                name={author.id}\n              />\n              <div className=\"post-author-bio\">\n                <h2 className=\"post-author-name\">{author.id}</h2>\n                <Bio\n                  bio={author.bio}\n                  count={totalCount}\n                  location={author.location}\n                  website={author.website}\n                  twitter={author.twitter}\n                  facebook={author.facebook}\n                  github={author.github}\n                  weibo={author.weibo}\n                />\n              </div>\n              <OtherAuthors />\n              <div className=\"clear\" />\n            </aside>\n          </div>\n        </section>\n        <div id=\"index\" className=\"container\">\n          <main\n            className={classNames(\"content\", { paged: skip > 0 })}\n            role=\"main\"\n          >\n            <div className=\"extra-pagination\">\n              <Pagination\n                skip={skip}\n                limit={limit}\n                total={totalCount}\n                pathPrefix={`/author/${kebabCaseName}/`}\n              />\n            </div>\n            <ExcerptLoop edges={edges} authorList={authorList} />\n            <Pagination\n              skip={skip}\n              limit={limit}\n              total={totalCount}\n              pathPrefix={`/author/${kebabCaseName}/`}\n            />\n          </main>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nAuthorRoute.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired,\n}\n\n/* eslint-disable */\nexport const pageQuery = graphql`\n  query AuthorBlogs($author: String!, $skip: Int = 0, $limit: Int = 10) {\n    authorJson(id: { eq: $author }) {\n      id\n      bio\n      avatar\n      cover\n      github\n      twitter\n      zhihu\n      weibo\n      facebook\n      website\n      location\n    }\n    allAuthorJson {\n      totalCount\n      edges {\n        node {\n          id\n          avatar\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        cover\n        author\n        description\n        keywords\n        tagCover\n        archiveCover\n        siteUrl\n        logo\n        navigation\n        subscribe\n      }\n    }\n    otherAuthorsInfo: allAuthorJson(filter: { id: { ne: $author } }) {\n      edges {\n        node {\n          id\n          avatar\n          master\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true }, author: { eq: $author } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      totalCount\n    }\n    currentMarkdownRemark: allMarkdownRemark(\n      skip: $skip\n      limit: $limit\n      filter: { frontmatter: { draft: { ne: true }, author: { eq: $author } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            star\n            date(formatString: \"DD MMM YYYY\")\n            author\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nexport default class Pagination extends React.PureComponent {\n  render() {\n    const { skip = 0, limit = 10, total, pathPrefix = \"/page/\" } = this.props\n    const page = skip / limit + 1\n    const pages = Math.ceil(total / limit)\n    const prev = page - 1 > 0 ? `${pathPrefix}${page - 1}` : null\n    const next = pages > page ? `${pathPrefix}${page + 1}` : null\n\n    return (\n      <nav className=\"pagination\">\n        <div className=\"inner\">\n          {prev && (\n            <Link className=\"pagination-prev\" to={prev}>\n              <i className=\"icon icon-arrow-left\" />\n              <span className=\"pagination-label\">Newer Posts</span>\n            </Link>\n          )}\n          {pages && (\n            <span className=\"pagination-info\">\n              Page {page} of {pages}\n            </span>\n          )}\n          {next && (\n            <Link className=\"pagination-next\" to={next}>\n              <span className=\"pagination-label\">Older Posts</span>\n              <i className=\"icon icon-arrow-right\" />\n            </Link>\n          )}\n          <div className=\"clear\" />\n        </div>\n      </nav>\n    )\n  }\n}\n\nPagination.propTypes = {\n  pathPrefix: PropTypes.string,\n  skip: PropTypes.number,\n  limit: PropTypes.number,\n  total: PropTypes.number,\n}\n","import React from \"react\"\n\nexport default function Bio({\n  bio,\n  count,\n  location,\n  website,\n  twitter,\n  facebook,\n  github,\n  weibo,\n}) {\n  const res = []\n  if (typeof bio !== \"undefined\" && bio) {\n    res.push(\n      <p key=\"bio\" className=\"post-author-about\">\n        {bio}\n      </p>\n    )\n  }\n\n  if (typeof count !== \"undefined\") {\n    res.push(\n      <span key=\"count\" className=\"post-author-stats\">\n        <i className=\"icon icon-pencil\" />\n        {count === 0\n          ? \"No Posts\"\n          : count === 1\n          ? `${count} Post`\n          : `${count} Posts`}\n      </span>\n    )\n  }\n  if (location) {\n    res.push(\n      <span key=\"location\" className=\"post-author-location\">\n        <i className=\"icon icon-location\" />\n        {location}\n      </span>\n    )\n  }\n\n  if (website) {\n    res.push(\n      <span key=\"website\" className=\"post-author-website\">\n        <i className=\"icon icon-link\" />\n        <a target=\"_blank\" href={website} rel=\"noopener noreferrer\">\n          Website\n        </a>\n      </span>\n    )\n  }\n  if (twitter) {\n    res.push(\n      <span key=\"twitter\" className=\"post-author-twitter\">\n        <i className=\"icon icon-twitter\" />\n        <a\n          target=\"_blank\"\n          href={`https://twitter.com/${twitter}`}\n          rel=\"noopener noreferrer\"\n        >\n          Twitter\n        </a>\n      </span>\n    )\n  }\n  if (facebook) {\n    res.push(\n      <span key=\"facebook\" className=\"post-author-facebook\">\n        <i className=\"icon icon-facebook\" />\n        <a\n          target=\"_blank\"\n          href={`https://facebook.com/${facebook}`}\n          rel=\"noopener noreferrer\"\n        >\n          Facebook\n        </a>\n      </span>\n    )\n  }\n  if (github) {\n    res.push(\n      <span key=\"github\" className=\"post-author-github\">\n        <i className=\"icon icon-github\" />\n        <a target=\"_blank\" href={github} rel=\"noopener noreferrer\">\n          Github\n        </a>\n      </span>\n    )\n  }\n  if (weibo) {\n    res.push(\n      <span key=\"weibo\" className=\"post-author-weibo\">\n        <i className=\"icon icon-sina-weibo\" />\n        <a target=\"_blank\" href={weibo} rel=\"noopener noreferrer\">\n          Weibo\n        </a>\n      </span>\n    )\n  }\n  return res\n}\n","import React from \"react\"\nimport withPrefix from \"../utils/with-prefix\"\nimport PropTypes from \"prop-types\"\n\nexport default class Avatar extends React.PureComponent {\n  render() {\n    const { avatar, name, className } = this.props\n    const avatarUrl =\n      avatar && avatar.indexOf(\"http\") > -1 ? avatar : withPrefix(avatar)\n    return (\n      <figure className={className} title={name}>\n        {avatar && <img src={avatarUrl} alt={name} />}\n      </figure>\n    )\n  }\n}\n\nAvatar.propTypes = {\n  avatar: PropTypes.string,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash.kebabcase\"\nimport classNames from \"classnames\"\nimport PropTypes from \"prop-types\"\nimport Avatar from \"./Avatar\"\n\nexport default class ExcerptLoop extends React.PureComponent {\n  render() {\n    const { edges, authorList } = this.props\n\n    return (\n      <section>\n        {edges &&\n          edges.map(edge => {\n            const { slug } = edge.node.fields\n            const post = edge.node.frontmatter\n            const excerpt = edge.node.excerpt\n            const authorId = post.author\n\n            const author = authorList.find(item => item.id === authorId)\n\n            if (!author) {\n              return null\n            }\n\n            const Tags = () => {\n              return post.tags\n                ? post.tags.map(tag => {\n                    return (\n                      <span key={tag}>\n                        <Link to={`/tag/${kebabCase(tag)}/`}>{tag}</Link>&ensp;\n                      </span>\n                    )\n                  })\n                : null\n            }\n\n            const On = () => {\n              return post.tags && author.id && \"on \"\n            }\n\n            const Author = () => {\n              return (\n                author.id && (\n                  <span>\n                    <Link to={`/author/${kebabCase(author.id)}/`}>\n                      {author.id}\n                    </Link>\n                    &ensp;\n                    <On />\n                  </span>\n                )\n              )\n            }\n\n            return (\n              <article\n                className={classNames(\"post\", { featured: post.star })}\n                key={`${post.title}-${post.date}`}\n              >\n                <div className=\"inner\">\n                  <header className=\"post-header\">\n                    <h2 className=\"post-title\">\n                      <Link to={slug}>{post.title}</Link>\n                    </h2>\n                    <div className=\"post-meta\">\n                      {author.avatar && (\n                        <div className=\"post-meta-avatar\">\n                          <Avatar\n                            className=\"post-other-avatar avatar\"\n                            name={author.id}\n                            avatar={author.avatar}\n                          />\n                        </div>\n                      )}\n                      <div className=\"post-meta-inner\">\n                        <Author />\n                        <Tags />\n                        |&ensp;\n                        <time>{post.date}</time>\n                      </div>\n                    </div>\n                    <div className=\"clear\" />\n                  </header>\n\n                  <section className=\"post-excerpt\">\n                    <p>{excerpt}&hellip;</p>\n                  </section>\n                </div>\n              </article>\n            )\n          })}\n      </section>\n    )\n  }\n}\n\nExcerptLoop.propTypes = {\n  edges: PropTypes.array.isRequired,\n}\n"],"sourceRoot":""}