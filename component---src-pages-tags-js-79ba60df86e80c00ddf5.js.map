{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPageRoute","render","allTags","this","props","data","site","siteMetadata","title","cover","tagCover","logo","navigation","coverImage","location","hideNavBack","isPost","className","length","role","map","tag","key","fieldValue","to","kebabCase","totalCount","React","PureComponent","pageQuery"],"mappings":"mTASqBA,E,kGACnBC,OAAA,WACE,IAAMC,EAAU,IAAMC,KAAKC,MAAO,+BAAgC,IAD3D,EAEUD,KAAKC,MAAMC,KAApBC,KACkDC,aAAlDC,EAHD,EAGCA,MAAOC,EAHR,EAGQA,MAAOC,EAHf,EAGeA,SAAUC,EAHzB,EAGyBA,KAAMC,EAH/B,EAG+BA,WAChCC,EAAaH,GAAYD,IAAS,EACxC,OACE,kBAAC,IAAD,CAAQK,SAAUX,KAAKC,MAAMU,UAC3B,kBAAC,IAAD,CAAKN,MAAUA,EAAL,UACV,kBAAC,IAAD,CACEG,KAAMA,EACNF,MAAOI,EACPE,aAAa,EACbH,WAAYA,EACZI,QAAQ,GAER,wBAAIC,UAAU,aAAd,YACA,0BAAMA,UAAU,oBAAhB,SAA0Cf,EAAQgB,SAEpD,yBAAKD,UAAU,aACb,0BAAMA,UAAU,UAAUE,KAAK,QAC7B,yBAAKF,UAAU,gBACZf,EAAQkB,KAAI,SAAAC,GAAG,OACd,0BAAMJ,UAAU,OAAOK,IAAKD,EAAIE,YAC9B,kBAAC,OAAD,CAAMC,GAAE,QAAUC,IAAUJ,EAAIE,YAAxB,KACLF,EAAIE,WADP,IACoBF,EAAIK,WADxB,c,GAxByBC,IAAMC,eA0CpCC,EAAS","file":"component---src-pages-tags-js-79ba60df86e80c00ddf5.js","sourcesContent":["import React from \"react\"\nimport _ from \"lodash\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport kebabCase from \"lodash.kebabcase\"\nimport Header from \"../components/Header\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/SEO\"\nexport default class TagsPageRoute extends React.PureComponent {\n  render() {\n    const allTags = _.get(this.props, \"data.allMarkdownRemark.group\", [])\n    const { site } = this.props.data\n    const { title, cover, tagCover, logo, navigation } = site.siteMetadata\n    const coverImage = tagCover || cover || false\n    return (\n      <Layout location={this.props.location}>\n        <SEO title={`${title}-Tags`} />\n        <Header\n          logo={logo}\n          cover={coverImage}\n          hideNavBack={false}\n          navigation={navigation}\n          isPost={false}\n        >\n          <h1 className=\"blog-name\">All Tags</h1>\n          <span className=\"blog-description\">Tags: {allTags.length}</span>\n        </Header>\n        <div className=\"container\">\n          <main className=\"content\" role=\"main\">\n            <div className=\"content-tags\">\n              {allTags.map(tag => (\n                <span className=\"tags\" key={tag.fieldValue}>\n                  <Link to={`/tag/${kebabCase(tag.fieldValue)}/`}>\n                    {tag.fieldValue}({tag.totalCount})\n                  </Link>\n                </span>\n              ))}\n            </div>\n          </main>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nTagsPageRoute.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\n/* eslint-disable */\nexport const pageQuery = graphql`\n  query TagsQuery {\n    site {\n      siteMetadata {\n        title\n        cover\n        description\n        keywords\n        tagCover\n        archiveCover\n        siteUrl\n        logo\n        navigation\n        subscribe\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { draft: { ne: true } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}